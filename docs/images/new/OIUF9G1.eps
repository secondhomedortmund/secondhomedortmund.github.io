%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: 2402.i019.048.eps
%%Creator: Adobe Illustrator(R) 20.1
%%For:  
%%CreationDate: 11/16/2016
%%BoundingBox: 0 0 800 800
%%HiResBoundingBox: 0 0 800 800
%%CropBox: 0 0 800 800
%%LanguageLevel: 3
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 20.1.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 20.1.0 x174 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c132 79.159284, 2016/04/19-13:13:40        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Basic RGB</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:CreatorTool>Adobe Illustrator CC 2015.3 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2016-11-16T19:16:39+03:00</xmp:CreateDate>
         <xmp:ModifyDate>2016-11-16T19:16:39+03:00</xmp:ModifyDate>
         <xmp:MetadataDate>2016-11-16T19:16:39+03:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;qlfmfzNo3lnRLnWtYnFvYWqgyPSrEk0VEUbszE0AxV8+eYv+cvrwyvH5c0GNIgSI7jUJGdmHYmGE&#xA;px+XqHFWG3n/ADlD+a87ForiztBWvGG2Uj5fvTKcVQsf/OSv5voSW1aKQFuQDWltQD+X4Y12/HFU&#xA;70z/AJyy/MO2YC+s9Ovo/wBomOSKTr2ZJOI/4DFXr35Z/wDORflnzlqUOjXdrJo+sz1FvFI4lglY&#xA;CvBJQEIY0NFZR4Ak4q9axV2KuxV2KuxVgHnf88vy88oTPaX18bzUo6h9PsQJpVI7OarGh9mYH2xV&#xA;5fqH/OYcQkK6f5XZ46/DJcXYUke6JE1P+CxVZZf85hn1AL7yvSMnd4Lz4gP9Vod/+CGKvSfJn/OQ&#xA;X5ceaZ4rNLx9L1GUhY7TUFEXNjtxSUFoia7AcgT4Yq9JxV2KuxV2Kpb5l1220Dy/qOt3Mbywadby&#xA;XMkcdObCNS3FakCppirxL/ob/wAt/wDUv3n/ACNixV3/AEN/5b/6l+8/5GxYq7/ob/y3/wBS/ef8&#xA;jYsVd/0N/wCW/wDqX7z/AJGxYq7/AKG/8t/9S/ef8jYsVTryZ/zk15e8z+Z7DQY9Hu7WXUJPSind&#xA;43VW4kjkBQ0NMVey4q7FXYq7FXYq7FXyz/zkH+Zmn+a9a/wJarJbQ6Vf8JL4kNHLdqGhKOlV4JG7&#xA;EF6sevw4q8BxV2KuxV2KppoTmyuY9Z9ZoTptxA8JjUM5m5GSOgLJQfujVu222KvuD8rPzIsfzA8s&#xA;nWbe2aylima2u7RnEnCVFV/heiclKuCDxHh2xVmGKuxVDajqWn6ZZS32o3MVnZwDlNczuscajp8T&#xA;MQBirw387/z2tY/K62fkbUFupb4mO+1W1JP1WPsgOxSSXfi3gDTfcKvldmZmLMSWJqSdyScVaxV2&#xA;KuxV9L/kF+ePo6NPo/nS9ENjYKo03WbkkAgUH1V3P23UEMnU8a12AxV9AaPrej61Ypf6Rew39lIS&#xA;FuLd1kSo6rVSaEdx1xVG4q7FWAfnT5j0Kx8i63pF1exRapqWnXYsbImssnCFmYhBU8QFPxHbFXw1&#xA;irsVdirsVdirLvyl1Gy0z8xtC1G+lEFlaXBmuZiCQkcaMzMQATsBir7u0/UbDUrKG+0+4ju7K4Xn&#xA;BcQsHjdT3VhscVRGKuxV2KuxV2Kvhb85tMudE/NnzArLxZ75r6E02IuSLhT77vv74qkmrQ+X7a7k&#xA;ddPvGs5XZrS4W6iEckZNVKf6Mex3WtVOx3GKoL6x5b/5Ybz/AKTIv+ybFXfWPLf/ACw3n/SZF/2T&#xA;Yq76x5b/AOWG8/6TIv8AsmxVEaotna6UttFbT2s9zMsssFxKsjqkSMI2IEUJXn6zUr1pXwxV9Tf8&#xA;4q6RPY/lk93MnH9J389xC3cxIqQD/h4XxV7HirsVeC/85dRas3lTRXgEh0uO8c33H7AkMYEBen+z&#xA;A+eKvm3ywYFu7l7xHk01bSc3yRsELLwIiHIrIFJuPT4kqaNQ0xVe+o+UwaRaNccAP923wdz8ykEa&#xA;/wDC4quafyVckL9T1DTWIPKdLiK8QEDakDRWrUJ6/vsVcr+TLQ8HhvtVYdZkmisY+QPQRmK6dl/y&#xA;uSH2GKrU1Hypy/e6LOU78L3i30FoXH4Yq15hNo8GmyadHLDpjQuIIppFmdJRK/qrJIiQoz7qfsA8&#xA;ClcVe7/84fw6wJPMUxDjRmWBATX0zcgsfgrtyCH4qf5Ne2KvpPFXYq+RtRuLK+/M38z28yXcEWoR&#xA;2eo2mhyXsgjVWaUW8CxljQEwNxHsSfHFXmH+D9W/5aNN/wC4rpv/AGUYq7/B+rf8tGm/9xXTf+yj&#xA;FXf4P1b/AJaNN/7ium/9lGKu/wAH6t/y0ab/ANxXTf8AsoxV3+D9W/5aNN/7ium/9lGKsk/Ljy1a&#xA;2vnfSZvMN3pUei+qUvzJqNlKjRPGyMjLFNI1G5celPEjFXsf/OJV1cNbebLOOV30e3urd9PVzUBp&#xA;PWEhHuyJHXFX0DirsVdirsVdirz/APNP8mPLn5gxQzXUr2Gr2qGO21GFQ54Ek8JYzT1EBJIFQR2O&#xA;5xV85+QvyX8z+Ydf8wWnl/WvqumaNcvZtrBEkK3MiOVARI2b9kcj8WwI8cVZjN/zjD+ZgYej5thd&#xA;abl5bpDX5APiqz/oWP8ANP8A6mq3/wCR93/zRiqs/wDzjF+ZC27lfN6NMU/uudyFZhuF5E9OQ60x&#xA;Vjn5MfkTpvnCbUZfMF/PaTaLeG11DRY4wspYCoLTlm4gsGUgJXbrir6z07T7LTbC30+xhW3srSNY&#xA;beBNlSNBRVHyGKojFXYq8i/5yiv720/K5ltZnhF1fQQXHA8ecRV3KGnYsgrir5Q8uW/m68uJLTy3&#xA;FqFzccPVmt9OWZ34KQvNkhqaAsBU+OKp/wD4Z/Ov/q0+ZP8ApHv/APmnFXf4Z/Ov/q0+ZP8ApHv/&#xA;APmnFXf4Z/Ov/q0+ZP8ApHv/APmnFXf4Z/Ov/q0+ZP8ApHv/APmnFUl8x2fniwWGDzLBqdqs1Wgi&#xA;1JbiMPxoGKLMBWlRWmKvo/8A5xHv72fylrNrNO8lva3ifVo2JIjDx1YLXoCRWmKveMVdir5O/wCc&#xA;qvJsemecbPzJEeNtrsfG5UULLPaqqMwFRs0ZT6QfHFWAp+UXnt0V08v6wyMAVYWJoQdwf7zFV3/K&#xA;n/Pv/Uvax/0gN/1UxV3/ACp/z7/1L2sf9IDf9VMVd/yp/wA+/wDUvax/0gN/1UxV3/Kn/Pv/AFL2&#xA;sf8ASA3/AFUxVKfMXknX/L1tHPq+nX9gszFIGu7b0UdhuQGLnoPbFX15+QHk0eWPy2sFlA+u6t/u&#xA;SuiKGnrqvpLX/JiC/TXFXo+KuxV2KuxV2KrZJI40LyMEQdWYgAfScVYd5Q1WDTjqGm3a29vDFcyy&#xA;209tEkUcqyOSSViAXl35dT33xVkR8x6KBU3S/QGP6hiq1fM2hk0F0PpVx+tcVXHzFooBP1pTTegB&#xA;/piqSeS7k3N9q+oTx21tNfzp6cMaRRzMkSUDSsoDymhpViadtsVZZirsVdirEfzQsTe+WlhEFvc0&#xA;uY29O6t4LqPZW39OdJEr70rirA/Jv1jy1qct/FpFizSwNARaWdnYPRnV95beBXK/B9k7d+2Ksy/5&#xA;WNqH/Vl/6eP+vWKu/wCVjah/1Zf+nj/r1irv+Vjah/1Zf+nj/r1irv8AlY2of9WX/p4/69YqxXzr&#xA;d3PmiW0kl0ezX6qrqPrdta6gfjIPwm5gbh9nfj1xVk/5TaabHTr9Da2ttzmU8bS1t7RTRerLbxxB&#xA;j7nFWd4q7FXnv5sWS6j+jrRba0upIzJIy3lpbXaqH4qCPrMcoStD0p74qm8XnSRIkQ6aaqoG08AG&#xA;w7CuKrv8byf9W1v+kiH+uKu/xvJ/1bW/6SIf64q7/G8n/Vtb/pIh/rirv8byf9W1v+kiH+uKsX8+&#xA;3kvmKxtof0ZasLeQyH65FZ3w3HH4EmWUKfcDFXoPl6WOTQ7AoqoFgRCiKsaqUUKVVFoqgEbAbYqm&#xA;GKuxV2KuxV2KpZqmnS3rgMf3SfZXtXxxVBjy3EP2A3jX+ymKrv8AD0X++U+9v+asVd/h6L/fKfe3&#xA;/NWKtHy9F/vlB9Lf1xVr/DaghkHEjcb7g/PFU7txKIVWU1cChPjTviqpirsVQupWgurb0SoapB37&#xA;U74qlSeW4hXkgPhvirf+HIf99D7zirv8OQ/77H34q7/DkP8AvsfecVd/hyH/AH0PvOKtN5biIHFA&#xA;D33xVMtKsRZxNGEC1NSw7/PFUbirsVSi90QXd1JNIaV+z32GwGKqH+GYPf8A4Ef1xV3+GYPf/gR/&#xA;XFXf4Zg9/wDgR/XFXf4Zg9/+BH9cVd/hmD3/AOBH9cVcPLEBNKke5A/riqY6XZNZwtF+xy5L9PX9&#xA;WKo3FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWOaz+Y/kLRZTDqnmCxtrhdmt2nQyjem8alnH3YqlVv8A&#xA;nh+U9w5SPzLaKQaVk5xD/gpFUYqy7TdW0rVLYXWmXkF9bN9me2lSaM/JkLDFUVirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirC/NH5y/lr5Yu5LLVtaiW+iP&#xA;GS1gWS4kRu6uIVcIR4MRir5t/N78/wDXvNV9Ppug3MuneWUJRBGTHNdAbF5WHxBW7J4fa36KvIcV&#xA;diqZaB5k17y9qCajol9NYXkZ2lhalR4Mv2WX2YEYq+ovIH/OUHlG90WBPOE/6L1qM+nNJHDLJBKA&#xA;NpR6SyFOXQr2Pt0Vev6D5i0PzBp66hot9DqFkx4+tAwYBhuVYdVYV6HfFUxxV2KuxV5J+eP53p5E&#xA;jj0jSI0ufMd3H6o9TeK2iNVEjgEcnYj4V+k7UBVfK2vfmB521+4efV9bvLouamMyssQ3r8MSFY1H&#xA;yXFVDSvOfm7SJRLpmtXtmymv7m4kVT81DcT9IxVM/O/nTzdqXmLU0vtZvbiOO6mjjieeT01RZCAq&#xA;oDxUCnQDFUu0bzt5v0ScT6VrN5ZyA1pHM4U/6yE8W+kYq+m/yL/PybzddL5b8yCOPXeBezvIwES6&#xA;CCrqyDZZQo5fDsQD0puq9uxV2KuxVI/PHmRvLPlHVdeWAXL6dbtMkBbiHYbKCaGgqd8VfMv/AENv&#xA;+ZH/AFbdH/5E3X/ZTiqO0b/nKv8AMC8vHin07SeC211MOEVyp5QW0kqbm4bbkgr7eHXFUD/0Nv8A&#xA;mR/1bdH/AORN1/2U4qmOgf8AOU35gahfyQT6dpIjS0vbn93Dchi1raS3CCpuG2LRAHbpiqXf9Db/&#xA;AJkf9W3R/wDkTdf9lOKsh/L/AP5yc86a75z0jRdT03TRZajcpbSNbJPHKplPFWDPNKvwk1I47+2K&#xA;vpXFXYq7FXYqtlljijeWRgkcalnY9AoFSTir5g8y/wDOWWqXN1fWejaWlvpUqSQW94zsLxQylVnW&#xA;n7tWFeQUqfnirxq68qaj6xdLqzlilCzRSzX1nDI8cqiRGeKSYOjMrAlW6Yqo/wCFdT/3/p//AHEt&#xA;P/6r4q7/AArqf+/9P/7iWn/9V8VXN5S1ZQpaWwAcVU/pLT9xUiv9/wCIxVb/AIV1P/f+n/8AcS0/&#xA;/qvirv8ACup/7/0//uJaf/1XxVmHkPzzr35VzTXkHo3s+rQEJYCdJrXgklFuHe3d1LhkdFUMCN69&#xA;qqvo78lfznj/ADDtr23u7NbDWNPCPNHGxaKWNyQHj5fEtGFCpr23PZV6dirxXzp/zkdaafrNxo3l&#xA;e2tdWvbVzC3rSzRGSZDxeOFRF6bkb0/ejkdlBNKqvnTzzr17551y+80G3aK/meKO8skrIqKsYjja&#xA;OighaRUYN0NDU8tlWM/ozUv+WSb/AJFt/TFXfozUv+WSb/kW39MVTDzDY3suv6nLFbySRSXc7I6o&#xA;xVlMjEEEChBGKpf+jNS/5ZJv+Rbf0xVPPKd7d+VtVs/NEkEhl065RrS2PKMSyAFiHah4px692rQf&#xA;tEKvojyx/wA5OQPqENn5us7XSBOwVmhmmkkgDU4maMROi7nesgZe64q93BBAINQdwRirF/zK89Wn&#xA;kfyjd6/cQm5eIrFa2wbj6k0hoilqGg6k+wxV8vav+f8A5z84wXGgau1vaadqatb8bSMIqtIOMfqm&#xA;T1naNWIJ4sp77/ZKrz5/JfnFGKtoeoclJB/0WY7j5LiqZeXPJ/m0ahKW0S/UfUr8Am2mG5spgBuv&#xA;UnYYqlf+DfN//Vj1D/pFm/5pxVOvKXlLzXHqszSaNfIrafqaBmtplHJ9PnVVqV6sxAHviqS/4N83&#xA;/wDVj1D/AKRZv+acVTPy9puv+WtSi8x31jd2Eekss8MkkLRM9xWkKRmZCleZ5GoNFBND0Kr1nyH/&#xA;AM5T+ZZfMFnY+aLa1m0u6lSGS6gQxTQlyFEh+IoyivxDiPbwxV9QYq7FXYqsnhinhkhlUPFKpSRD&#xA;0KsKEfdir4S/Nv8AL5fInnGbRIrr63avGt1ayEUcRSMwVJOxZeG5HX26YqkmpzaZ68Pr288kotbU&#xA;M6ToimltHSimJyNvfFUJ62if8slz/wBJMf8A1QxV3raJ/wAslz/0kx/9UMVVJLvRpEiQ2dyBEhQf&#xA;6Sm4LM/++P8AKxVT9bRP+WS5/wCkmP8A6oYq71tE/wCWS5/6SY/+qGKqusSQvb6X6CukS2rBUkcS&#xA;Ef6TMTuFQdT4Yq+p/wDnGX8uINC8tf4qluPXvtfhT00UUWG3VieNT9pmYVb5CmKvasVfnr500a80&#xA;XzdrGl3gIuLS7mRi3VhzJV/k6kMPY4qjta1m0khskurBZZJYI7i5lSR0M07LxaaX7XJ2C7nxqerM&#xA;SqlP17Rv+rX/AMl3/pirvr2jf9Wv/ku/9MVd9e0b/q1/8l3/AKYq769o3/Vr/wCS7/0xVMtB1jT7&#xA;e7kMGmoG9CaQCWRpY+cMTTRlkYUbjIgND8jtUYqk1hZX+rapb2VsrXF/fzLFCtSWeWVgo3PcscVf&#xA;olYWxtbG3ti5kMESRmQ9WKKFqfnTFWPfmV5FtfPHlG70CeX6vJKVltbmnL05ozVGK7VHUH2OKviX&#xA;XvKuo+VPOz+X9SaN7ywuIVkeEsY2DhJFZS6o1CrjtiqX6lHp36RuqzzV9aT/AHSv8x/4txVdpt3p&#xA;1jcPOHmm5wXEHDgqf70QPDy5c3+z6nKlN6U264qhfT03/f8AN/yJX/qriqM0i/0/Tbt7kNNPzt7m&#xA;2KFFTa6t5Lcty5v9kS8qU3pTbriqD9PTf9/zf8iV/wCquKo62W0Gian6MkjtWCodAgpzPcO+KvRP&#xA;yG/JuXzrfrrt7cJFoOl3arcQCpmnkjCy+mNuKoQw5NWvgO4VfZGKuxV2KuxV4V+dPk7Q9Y84Jd32&#xA;mNdzC0ij9UTyRDiGcgcV274qitJ0v8prLS7O11Hyet1eQwxrJO0EM5NFHGskjq7UWg3GKor6v+Sv&#xA;/UkR/wDSHa/9VMVd9X/JX/qSI/8ApDtf+qmKu+r/AJK/9SRH/wBIdr/1UxV31f8AJX/qSI/+kO1/&#xA;6qYq76v+Sv8A1JEf/SHa/wDVTFWH+dfJnkPVdSt7nTvLht7QW4SOFJDahaSOT+7hLJuTWtcVe4fl&#xA;7Y29h5K0iztojBBDAFjhLFyoqduR3OKshxV4P+c/lDyhr/mz6zLps01/FCkV3dW84gVyu6hl9OTk&#xA;yqacvo7Yqwif8rfKXpW6vpV6SsdBS9UbF2b/AHwfHFVL/lVnk7/q1X3/AEnL/wBk+Ku/5VZ5O/6t&#xA;V9/0nL/2T4q7/lVnk7/q1X3/AEnL/wBk+Ku/5VZ5O/6tV9/0nL/2T4qr2P5YeUkmcppd6rGGZam9&#xA;UijRMp29AdjirJvyq8keTdE862N/+jLiO4UOlrPPciZI5nXircBFHvuVBrtXFX0PirsVfPX5seQv&#xA;Luq/mNc6rcW961yPqxme3uIo4yY4kA+B7eU/ZAH28VZFJon5GyO0j+UuTuSzMYRuTuT/AHuKrf0D&#xA;+RX/AFKI/wCRP/X3FXfoH8iv+pRH/In/AK+4q79A/kV/1KI/5E/9fcVd+gfyK/6lEf8AIn/r7iqS&#xA;ecvKX5U6joTWOi6BPp88k0byyWvC3dkQN8JdxcilT04/TirPfyM8v6ZoXk6ex0+KaJDeyyyi4kSW&#xA;Qu0cY5ckjhFOKgfZ7Yq9DxV2KuxVxNAT19sVYnfaLcX1w1xcjnIdhtsAOgGKrX8tKSP9HVvhUVIb&#xA;soHY4qt/wyv/ACzL9zf1xV3+GV/5Zl+5v64q2fLCUFLZffZv64q1/hlf+WZfub+uKu/wyv8AyzL9&#xA;zf1xV0vllWCfugtFpQA/zE98VTzQobm2hNtJvEg/dV7DwxVNMVYfceW2muJJXXk8jFmNOpJriq9/&#xA;LNuwWsTMygKaEDp/sTiq3/C9t/vh/wDgh/zTirv8L23++H/4If8ANOKu/wAL23++H/4If804q7/C&#xA;9t/vh/8Agh/zTiq6PyzbKSfSZagrUkH7Qp04jxxVRHlfi1QlGB2IGKsyTlxHL7VBX54qpXkkyW7G&#xA;EVkOy13oT3xVitx5fluJ3nnHqSuauxHX7sVd/hlP+WZfub+uKtr5YiJobdQKE7cuoG3fFWv8Mp/y&#xA;zL9zf1xVcnliItRrdQKE7cuoBI7+OKrf8Mp/yzL9zf1xVa3lhCP7hV9wD/EnFUfpFld6bJxi/uHa&#xA;skdNj2r88VZHirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir5p/5yr81eadM8x6LY6dqV1Y2DWbTlLaR&#xA;4Q8xlZWLMhUtRVXYnb6cVeG/4587f9TBqX/SZP8A814q7/HPnb/qYNS/6TJ/+a8VRV55787tBZE+&#xA;YNSr6BFfrc/aWQD9vFUL/jnzt/1MGpf9Jk//ADXira+e/O6sGXzDqQINQfrk/Uf7PFX3b5Hvr7UP&#xA;JXl+/wBQcyX93ptpPduwClppIEeQlQABVidqYqnWKuxVJvOuqXek+Tde1SzYLeWGnXd1bMwDASww&#xA;PIhIOx+JemKvjVvz+/N5mLHzHNUmppDbAfcIsVa/5X5+b3/Uxzf8irf/AKp4q7/lfn5vf9THN/yK&#xA;t/8Aqnirv+V+fm9/1Mc3/Iq3/wCqeKu/5X5+b3/Uxzf8irf/AKp4q2v5/fm8rBh5jmqDUVhtiPuM&#xA;WKvsryVql3q3k3QdUvGDXl/p1pdXLKAoMs0CSOQBsPibpiqc4q7FXYqwT81fzd0D8vtORrpTeavd&#xA;KTY6YjcWcA05yNQ8Iwe9KnsOtFXy75q/5yB/M/zBI4/SraXaMTxtdO/0cAHt6oPrH6XxVg1xrmt3&#xA;MhludQuZpT1kkmkdjvXqST1OKorTfOPm3S5Fk07Wr6zZTUejcSoOtdwrUI9sVereRP8AnKTzhpVz&#xA;Fb+aAut6ZWkkwVI7tF6VVl4o9PBhU/zDFX1PoOvaRr+kW2r6Rcrd2F2vOGZPuIIO6sp2IO4OKo/F&#xA;XYq7FXYq7FXgf/OXtxOnlXQoVkZYZb1zJGDQMUi+Go70qcVfOeiWgvdJ1O2e5ito0MEyvcMypzVm&#xA;T9kMa8XOKrP8OQ/9XjTv+Rkn/VPFXf4ch/6vGnf8jJP+qeKoi50C2aK1VNb05jHEVekkuzGR2pvE&#xA;OzDFUP8A4ch/6vGnf8jJP+qeKo7QvL8Ca5pzHVLCYLcwkxLJIWekg+EAxgEnpiqTaPdXMOt2V1FK&#xA;yXKXEcizAkOHDg8q9a1xV+i2KuxV8i/m3+b3mvzP5y1Lyvps8ttokMtzpsNhb1V7uUB4aykfE/qS&#xA;fZTp02rirzP/AAD56/6lzVP+kK4/5oxVx8heegKny5qlP+YK4/5oxV3+AfPX/Uuap/0hXH/NGKu/&#xA;wD56/wCpc1T/AKQrj/mjFXDyF55PTy7qh/6Mrj/mjFXf4B89f9S5qn/SFcf80YqzfyR+bnnP8v8A&#xA;zPBpuoTXD6Pb+hbalo13yPoqsaLJ6SvvE6b7DY98VfZ+KtMyopZiFVRVmOwAHUk4q8V07/nKfyff&#xA;eao9GXTrpLCecW9vqhZCGZm4oxh6qjHvyrTqMVfMXnXzbqXm3zPf69qDEy3chMcRNRFEDSOJf8lF&#xA;2/HriqR4q7FXYq7FXr35B/m03kltag1IS3Ggm2N4beOhdLlXSJDGGIH7z1ArfQegxV7z+VX57aF+&#xA;YGo3OlxWMum6jBEbhIpHWVJIlYKxV1C/EpYVBGKvTcVdirsVdirwD/nL/wD5Rvy//wAxkv8AyaxV&#xA;84aWYRpGqGZWdKQbIwQ19TxKv+rFUH6mm/74m/5HL/1SxV3qab/vib/kcv8A1SxV3qab/vib/kcv&#xA;/VLFXeppv++Jv+Ry/wDVLFUx8uPp58w6XxhlDfW4OJMqkA+qtKj0xiqW6Z/x0rT/AIzR/wDEhir9&#xA;G8Vdir4b/M3Sk0T80fNlnNILV5p5prOZg/FVvXWb9hXNDDKy9MVYb+j7T/q523/A3P8A1RxVGaMt&#xA;lp+r2V+2pwcbSeOdhGtzzIjcOQtYgKmm2+KoP9H2n/Vztv8Agbn/AKo4q79H2n/Vztv+Buf+qOKo&#xA;vVFs725SYalAOMFvCea3FawQJCTtEdiU29sVQn6PtP8Aq523/A3P/VHFU88vaTFrnmPy1okUy3Vx&#xA;Pdx2sjxK/AW7TKwJ9RUJK85CdqcQMVffWKtMqupVgGVhRlO4IPUEYq+P/wA1vyssPIX5i+XjpLSH&#xA;SNWuY5baOU8mikjuE9SIN+0qh04k777164qwH6jd/wDUvWf/ACOuP+yrFXfUbv8A6l6z/wCR1x/2&#xA;VYq76jd/9S9Z/wDI64/7KsVd9Ru/+pes/wDkdcf9lWKu+o3f/UvWf/I64/7KsVVDbzxaPq7SaVb2&#xA;INtGPVhkldifrcHw0kmlFO/TFX0n/wA44/lVpugeX7PzfcF5db1m1DKGNI4baVg6KgHVpFVGZj8h&#xA;Teqr2jFXYq7FXYqwj83NC8pa15Ve08w2zXJ+M6aYiyyx3JiYI6Mp7V/aqviDirBvy68ifk/pvl+S&#xA;HU9MW4u2kBuZNSVrksQX9IqAvprxViPhQe9cVZN/hr8iP+rLpn/SGf8AmjFXf4a/Ij/qy6Z/0hn/&#xA;AJoxV3+GvyI/6sumf9IZ/wCaMVd/hr8iP+rLpn/SGf8AmjFVW28ufketzE1vo2mpcK6mFltCrBwf&#xA;hIPDY1xV55o/5cflLB+Ybagum3P6HDRtY20kkhto519Oj8T++I5hjR3K79KUAVfRGKuxV4P+c/5e&#xA;eX9d/MTT9Su5JoyLe3S8jhjjaNwkzmsjMymvAgH2pirLv+VdfkR/1atM+8/81Yq7/lXX5Ef9WrTP&#xA;vP8AzVirv+VdfkR/1atM+8/81Yq7/lXX5Ef9WrTPvP8AzVirv+VdfkR/1atM+8/81Yq7/lXX5Ef9&#xA;WrTPvP8AzVirDfIH5b+U9L/OCTV9PaQQpJdHTbYIgtk5oyjgwYsQELcajFXvmKuxV5p+c3lrS9bm&#xA;8sm8E5ls771YDbsi905cuaPVahelMVYR/wAq4/IL/qxal/yOl/6rYq7/AJVx+QX/AFYtS/5HS/8A&#xA;VbFXf8q4/IL/AKsWpf8AI6X/AKrYq7/lXH5Bf9WLUv8AkdL/ANVsVd/yrj8gv+rFqX/I6X/qtiqE&#xA;1n8tfykk0a9h0HTdStLqREE0nrGpiEyMVHqtMv21X9nFXvvl22trXy/pltagrbQWkEcAO5CJGqrX&#xA;6BiqYYq7FXYq7FUp8w6YL+GFCvLgxP3jFUni8rRhJFZKBqdFr0P0Yq1/hK28G/4Af81Yq7/CVt4N&#xA;/wAAP+asVd/hK28G/wCAH/NWKu/wlbeDf8AP+asVXw+VbdJUcBqqwI+ADoa+OKqSeVVV1PpjYg9M&#xA;VZjirsVYzqWg/XNQnuZIw5Y0UEHotAOnsMVQ3+F4/wDlnT7m/rira+VoSwBt1AJoSOVf14q1/heP&#xA;/lnT7m/rirv8Lx/8s6fc39cVbPlaIHa3U7Dry7j54q1/heP/AJZ0+5v64qq2vl0W11BcxxBHjcNs&#xA;DSgPv9OKsqxV2KpFqthJqF5BI0dI4D8APuQSfwGKoT/D91/y0N/wUn9MVd/h+6/5aG/4KT+mKu/w&#xA;/df8tDf8FJ/TFXf4fuv+Whv+Ck/pirv8P3X/AC0N/wAFJ/TFWn8uzNFIkkhlVgBxJY78ga/EPbFU&#xA;70lZIbWO1kUj0V4q3YqOg+jFUdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVf/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:18a92496-d59f-164a-be32-5f77930483ce</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:18a92496-d59f-164a-be32-5f77930483ce</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:C6CA9A173D95E311BCBCD30CD998FDAE</stRef:instanceID>
            <stRef:documentID>xmp.did:C6CA9A173D95E311BCBCD30CD998FDAE</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:C6CA9A173D95E311BCBCD30CD998FDAE</stEvt:instanceID>
                  <stEvt:when>2014-02-14T11:58:57+06:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:18a92496-d59f-164a-be32-5f77930483ce</stEvt:instanceID>
                  <stEvt:when>2016-11-16T19:16:39+03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015.3 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>800.000000</stDim:w>
            <stDim:h>800.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -800 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 800 li
800 800 li
800 0 li
cp
clp
800 800 mo
0 800 li
0 0 li
800 0 li
800 800 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
105.777 161.644 mo
105.777 161.644 98.898 177.751 103.812 177.751 cv
108.726 177.751 116.095 161.644 116.095 161.644 cv
105.777 161.644 li
cp
.712886 .65359 .642298 .708797 cmyk
f
207.484 161.644 mo
207.484 161.644 214.362 177.751 209.449 177.751 cv
204.535 177.751 197.166 161.644 197.166 161.644 cv
207.484 161.644 li
cp
f
223.698 112.449 mo
208.958 112.449 214.217 125.789 211.416 138.666 cv
208.467 152.212 185.373 150.9 183.408 150.9 cv
181.999 150.9 167.451 150.9 159.334 150.9 cv
159.334 150.9 157.13 150.9 153.928 150.9 cv
145.81 150.9 131.263 150.9 129.852 150.9 cv
127.888 150.9 104.793 152.212 101.845 138.666 cv
99.043 125.789 104.302 112.449 89.5627 112.449 cv
78.7536 112.449 78.7536 124.246 78.7536 124.246 cv
78.7536 155.707 93.0023 158.766 96.9329 161.387 cv
100.128 163.518 139.356 164.205 153.928 164.388 cv
153.928 164.446 li
153.928 164.446 154.915 164.439 156.63 164.42 cv
158.346 164.439 159.334 164.446 159.334 164.446 cv
159.334 164.388 li
173.905 164.205 213.133 163.518 216.328 161.387 cv
220.258 158.766 234.508 155.707 234.508 124.246 cv
234.508 124.246 234.508 112.449 223.698 112.449 cv
cp
f
100.211 135.213 mo
100.105 134.28 li
99.8429 131.948 99.7509 129.68 99.6611 127.488 cv
99.2743 118.016 98.6584 113.068 89.7677 112.979 cv
88.7636 112.968 li
88.6894 112.01 li
88.3153 107.166 88.7162 97.9263 95.5984 90.457 cv
106.229 78.918 151.855 80.9577 153.792 80.9577 cv
154.981 80.9577 155.955 80.9753 156.613 81.0058 cv
157.272 80.9753 158.245 80.9577 159.436 80.9577 cv
161.373 80.9577 206.999 78.918 217.631 90.457 cv
224.513 97.9297 224.912 107.168 224.537 112.01 cv
224.463 112.968 li
223.458 112.979 li
214.57 113.068 213.954 118.016 213.567 127.486 cv
213.477 129.68 213.384 131.946 213.121 134.28 cv
213.016 135.213 li
100.211 135.213 li
cp
0 0 0 0 cmyk
f
223.447 111.933 mo
223.792 107.478 223.495 101.91 216.81 94.6549 cv
206.915 83.9144 162.715 81.7447 156.613 82.053 cv
150.513 81.7447 106.314 83.9144 96.4187 94.6549 cv
89.7324 101.91 89.4361 107.478 89.7798 111.933 cv
102.725 112.063 99.9072 122.735 101.192 134.168 cv
212.034 134.168 li
213.321 122.735 210.502 112.063 223.447 111.933 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
185.839 151.98 mo
184.994 151.98 184.32 151.965 183.868 151.955 cv
183.653 151.95 183.493 151.946 183.393 151.946 cv
129.837 151.946 li
129.736 151.946 129.575 151.95 129.362 151.955 cv
128.909 151.965 128.234 151.98 127.39 151.98 cv
118.509 151.98 103.24 150.278 100.759 138.879 cv
100.575 138.032 100.418 137.152 100.282 136.187 cv
100.114 135.001 li
213.117 135.001 li
212.947 136.189 li
212.808 137.158 212.652 138.038 212.468 138.879 cv
209.988 150.278 194.719 151.98 185.839 151.98 cv
cp
0 0 0 0 cmyk
f
101.829 138.666 mo
104.778 152.212 127.871 150.9 129.837 150.9 cv
131.246 150.9 145.794 150.9 153.912 150.9 cv
157.113 150.9 159.316 150.9 159.316 150.9 cv
167.434 150.9 181.982 150.9 183.393 150.9 cv
185.356 150.9 208.45 152.212 211.399 138.666 cv
211.589 137.794 211.739 136.92 211.864 136.046 cv
101.365 136.046 li
101.489 136.92 101.64 137.794 101.829 138.666 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
105.777 197.925 mo
105.777 197.925 98.8979 181.818 103.811 181.818 cv
108.726 181.818 116.095 197.925 116.095 197.925 cv
105.777 197.925 li
f
207.484 197.925 mo
207.484 197.925 214.362 181.818 209.449 181.818 cv
204.535 181.818 197.166 197.925 197.166 197.925 cv
207.484 197.925 li
f
223.698 247.12 mo
208.958 247.12 214.217 233.78 211.416 220.903 cv
208.467 207.357 185.373 208.669 183.408 208.669 cv
181.999 208.669 167.451 208.669 159.334 208.669 cv
159.334 208.669 157.13 208.669 153.928 208.669 cv
145.81 208.669 131.262 208.669 129.853 208.669 cv
127.888 208.669 104.793 207.357 101.845 220.903 cv
99.0429 233.78 104.302 247.12 89.5627 247.12 cv
78.7536 247.12 78.7536 235.323 78.7536 235.323 cv
78.7536 203.862 93.0023 200.804 96.9329 198.182 cv
100.128 196.051 139.356 195.364 153.928 195.181 cv
153.928 195.123 li
153.928 195.123 154.915 195.13 156.63 195.149 cv
158.346 195.13 159.334 195.123 159.334 195.123 cv
159.334 195.181 li
173.905 195.364 213.133 196.051 216.328 198.182 cv
220.258 200.804 234.507 203.862 234.507 235.323 cv
234.507 235.323 234.507 247.12 223.698 247.12 cv
f
100.211 224.356 mo
100.105 225.289 li
99.8428 227.622 99.7509 229.889 99.6612 232.081 cv
99.2743 241.554 98.6584 246.501 89.7678 246.59 cv
88.7636 246.601 li
88.6893 247.559 li
88.3152 252.403 88.7161 261.643 95.5985 269.112 cv
106.229 280.651 151.855 278.612 153.792 278.612 cv
154.981 278.612 155.955 278.594 156.613 278.563 cv
157.272 278.594 158.245 278.612 159.436 278.612 cv
161.373 278.612 206.999 280.651 217.631 269.112 cv
224.513 261.639 224.912 252.401 224.537 247.559 cv
224.463 246.601 li
223.458 246.59 li
214.569 246.501 213.954 241.554 213.567 232.083 cv
213.477 229.889 213.384 227.623 213.121 225.289 cv
213.016 224.356 li
100.211 224.356 li
0 0 0 0 cmyk
f
223.447 247.636 mo
223.792 252.091 223.495 257.659 216.81 264.914 cv
206.915 275.655 162.715 277.824 156.613 277.516 cv
150.513 277.824 106.314 275.655 96.4188 264.914 cv
89.7323 257.659 89.4361 252.091 89.7798 247.636 cv
102.725 247.507 99.9071 236.835 101.192 225.401 cv
212.034 225.401 li
213.321 236.835 210.502 247.507 223.447 247.636 cv
.712886 .65359 .642298 .708797 cmyk
f
185.838 207.589 mo
184.994 207.589 184.32 207.604 183.868 207.614 cv
183.653 207.619 183.493 207.623 183.393 207.623 cv
129.837 207.623 li
129.736 207.623 129.575 207.619 129.362 207.614 cv
128.909 207.604 128.234 207.589 127.39 207.589 cv
118.51 207.59 103.24 209.291 100.759 220.69 cv
100.575 221.537 100.418 222.417 100.282 223.382 cv
100.114 224.568 li
213.117 224.568 li
212.947 223.38 li
212.808 222.411 212.652 221.531 212.468 220.69 cv
209.988 209.291 194.719 207.589 185.838 207.589 cv
0 0 0 0 cmyk
f
101.829 220.903 mo
104.778 207.357 127.871 208.669 129.837 208.669 cv
131.246 208.669 145.794 208.669 153.912 208.669 cv
157.113 208.669 159.316 208.669 159.316 208.669 cv
167.434 208.669 181.982 208.669 183.393 208.669 cv
185.356 208.669 208.45 207.357 211.399 220.903 cv
211.589 221.775 211.739 222.649 211.864 223.523 cv
101.365 223.523 li
101.489 222.649 101.64 221.775 101.829 220.903 cv
.712886 .65359 .642298 .708797 cmyk
f
245.358 279.047 mo
73.9787 279.047 li
73.9787 180.167 li
245.358 180.167 li
245.358 279.047 li
156.613 278.563 mo
157.272 278.594 158.245 278.612 159.436 278.612 cv
159.942 278.612 163.428 278.751 168.492 278.751 cv
182.819 278.751 209.776 277.637 217.631 269.112 cv
224.513 261.639 224.912 252.401 224.537 247.559 cv
224.501 247.098 li
234.507 246.528 234.507 235.323 234.507 235.323 cv
234.507 203.862 220.258 200.804 216.328 198.182 cv
215.518 197.642 212.39 197.194 207.935 196.824 cv
209.38 193.192 213.578 181.818 209.449 181.818 cv
205.533 181.818 200.056 192.051 197.995 196.204 cv
184.756 195.567 167.841 195.288 159.334 195.181 cv
159.334 195.123 li
159.334 195.123 158.346 195.13 156.63 195.149 cv
154.915 195.13 153.928 195.123 153.928 195.123 cv
153.928 195.181 li
145.42 195.288 128.506 195.567 115.267 196.204 cv
113.205 192.051 107.728 181.818 103.811 181.818 cv
99.6825 181.818 103.881 193.192 105.326 196.824 cv
100.871 197.194 97.7432 197.642 96.9329 198.182 cv
93.0023 200.804 78.7536 203.862 78.7536 235.323 cv
78.7536 235.323 78.7544 246.502 88.7252 247.096 cv
88.6893 247.559 li
88.3152 252.403 88.7161 261.643 95.5985 269.112 cv
103.452 277.637 130.408 278.751 144.735 278.751 cv
149.801 278.751 153.286 278.612 153.792 278.612 cv
154.981 278.612 155.955 278.594 156.613 278.563 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 279.047 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
0 0 0 0 ]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
np
105.326 196.824 mo
103.881 193.192 99.6825 181.818 103.811 181.818 cv
107.728 181.818 113.205 192.051 115.267 196.204 cv
111.581 196.382 108.182 196.587 105.326 196.824 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 279.047 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 4 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!*-("9er5#7(VC$OdLU&.oNf',;9!(E+53*#p"A+
<i$U,UOog.Olr$0/,.:1c70M3&iu^5!M;"77TpC9hnSb<EE@/?X[GVBPM="Df9Z<G'A4YI"-^!K7nu6M
2R=Q~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!#!WrN,"9eu7#RLeE$OdIR%M'']&/#Wj'bqK$)
&aD4)]]tA+<VgP,UFca-n-Vr/1`D,0etOA2E3]Z4[).u6q0^>9hnP`<*!('>?bEA@:EbZB5)-tD/O<4F
EVkQ~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!!!!#!WrN,"9eu7#RLeE$OdIS%hK<b&JPrq()@]()
B0V8*$-1E+X&$T,pk#g.4Ql#/M/V01,CaF2`Wo^5!MA%77TsD:/Fhe<EE:+>[1WE@Uit]B5)-tD/O<4F
*)PK~>
<~zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz!<E3&!s8Z0"pYGA$P![Z&e
l)t)B9b?~>
]
>>
0 0 1 0 []true true []
/DeviceCMYK
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
np
207.935 196.824 mo
205.079 196.587 201.68 196.382 197.995 196.204 cv
200.056 192.051 205.533 181.818 209.449 181.818 cv
213.578 181.818 209.38 193.192 207.935 196.824 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 279.047 ]ct
clp
/1 /Gradient get_res exec grestore
np
224.501 247.098 mo
224.463 246.601 li
223.458 246.59 li
214.569 246.501 213.954 241.554 213.567 232.083 cv
213.477 229.889 213.384 227.623 213.121 225.289 cv
213.04 224.568 li
213.117 224.568 li
212.947 223.38 li
212.808 222.411 212.652 221.531 212.468 220.69 cv
209.988 209.291 194.719 207.589 185.838 207.589 cv
184.994 207.589 184.32 207.604 183.868 207.614 cv
183.653 207.619 183.493 207.623 183.393 207.623 cv
129.837 207.623 li
129.736 207.623 129.575 207.619 129.362 207.614 cv
128.909 207.604 128.234 207.589 127.39 207.589 cv
118.51 207.59 103.24 209.291 100.759 220.69 cv
100.575 221.537 100.418 222.417 100.282 223.382 cv
100.114 224.568 li
100.187 224.568 li
100.105 225.289 li
99.8428 227.622 99.7509 229.889 99.6612 232.081 cv
99.2743 241.554 98.6584 246.501 89.7678 246.59 cv
88.7636 246.601 li
88.7252 247.096 li
78.7544 246.502 78.7536 235.323 78.7536 235.323 cv
78.7536 203.862 93.0023 200.804 96.9329 198.182 cv
97.7432 197.642 100.871 197.194 105.326 196.824 cv
108.182 196.587 111.581 196.382 115.267 196.204 cv
128.506 195.567 145.42 195.288 153.928 195.181 cv
153.928 195.123 li
153.928 195.123 154.915 195.13 156.63 195.149 cv
158.346 195.13 159.334 195.123 159.334 195.123 cv
159.334 195.181 li
167.841 195.288 184.756 195.567 197.995 196.204 cv
201.68 196.382 205.079 196.587 207.935 196.824 cv
212.39 197.194 215.518 197.642 216.328 198.182 cv
220.258 200.804 234.507 203.862 234.507 235.323 cv
234.507 235.323 234.507 246.528 224.501 247.098 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 279.047 ]ct
clp
/1 /Gradient get_res exec grestore
np
168.492 278.751 mo
163.428 278.751 159.942 278.612 159.436 278.612 cv
158.245 278.612 157.272 278.594 156.613 278.563 cv
155.955 278.594 154.981 278.612 153.792 278.612 cv
153.286 278.612 149.801 278.751 144.735 278.751 cv
130.408 278.751 103.452 277.637 95.5985 269.112 cv
88.7161 261.643 88.3152 252.403 88.6893 247.559 cv
88.7252 247.096 li
88.7636 246.601 li
89.7678 246.59 li
98.6584 246.501 99.2743 241.554 99.6612 232.081 cv
99.7509 229.889 99.8428 227.622 100.105 225.289 cv
100.187 224.568 li
213.04 224.568 li
213.121 225.289 li
213.384 227.623 213.477 229.889 213.567 232.083 cv
213.954 241.554 214.569 246.501 223.458 246.59 cv
224.463 246.601 li
224.501 247.098 li
224.537 247.559 li
224.912 252.401 224.513 261.639 217.631 269.112 cv
209.776 277.637 182.819 278.751 168.492 278.751 cv
156.613 277.516 mo
156.968 277.534 157.45 277.543 158.048 277.543 cv
167.735 277.543 207.49 275.031 216.81 264.914 cv
223.495 257.659 223.792 252.091 223.447 247.636 cv
210.502 247.507 213.321 236.835 212.034 225.401 cv
101.192 225.401 li
99.9071 236.835 102.725 247.507 89.7798 247.636 cv
89.4361 252.091 89.7323 257.659 96.4188 264.914 cv
105.739 275.031 145.496 277.544 155.179 277.543 cv
155.775 277.543 156.259 277.534 156.613 277.516 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 279.047 ]ct
clp
/0 /Gradient get_res exec grestore
np
158.048 277.543 mo
157.45 277.543 156.968 277.534 156.613 277.516 cv
156.259 277.534 155.775 277.543 155.179 277.543 cv
145.496 277.544 105.739 275.031 96.4188 264.914 cv
89.7323 257.659 89.4361 252.091 89.7798 247.636 cv
102.725 247.507 99.9071 236.835 101.192 225.401 cv
212.034 225.401 li
213.321 236.835 210.502 247.507 223.447 247.636 cv
223.792 252.091 223.495 257.659 216.81 264.914 cv
207.49 275.031 167.735 277.543 158.048 277.543 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 279.047 ]ct
clp
/1 /Gradient get_res exec grestore
np
213.117 224.568 mo
213.04 224.568 li
100.187 224.568 li
100.114 224.568 li
100.282 223.382 li
100.418 222.417 100.575 221.537 100.759 220.69 cv
103.24 209.291 118.51 207.59 127.39 207.589 cv
128.234 207.589 128.909 207.604 129.362 207.614 cv
129.575 207.619 129.736 207.623 129.837 207.623 cv
183.393 207.623 li
183.493 207.623 183.653 207.619 183.868 207.614 cv
184.32 207.604 184.994 207.589 185.838 207.589 cv
194.719 207.589 209.988 209.291 212.468 220.69 cv
212.652 221.531 212.808 222.411 212.947 223.38 cv
213.117 224.568 li
211.864 223.523 mo
211.864 223.523 li
211.739 222.649 211.589 221.775 211.399 220.903 cv
208.928 209.554 192.317 208.634 185.84 208.634 cv
184.586 208.634 183.711 208.669 183.393 208.669 cv
181.982 208.669 167.434 208.669 159.316 208.669 cv
159.316 208.669 157.113 208.669 153.912 208.669 cv
145.794 208.669 131.246 208.669 129.837 208.669 cv
129.518 208.669 128.644 208.634 127.389 208.634 cv
120.909 208.634 104.299 209.555 101.829 220.903 cv
101.64 221.775 101.489 222.649 101.365 223.523 cv
211.864 223.523 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 279.047 ]ct
clp
/0 /Gradient get_res exec grestore
np
211.864 223.523 mo
101.365 223.523 li
101.489 222.649 101.64 221.775 101.829 220.903 cv
104.299 209.555 120.909 208.634 127.389 208.634 cv
128.644 208.634 129.518 208.669 129.837 208.669 cv
131.246 208.669 145.794 208.669 153.912 208.669 cv
157.113 208.669 159.316 208.669 159.316 208.669 cv
167.434 208.669 181.982 208.669 183.393 208.669 cv
183.711 208.669 184.586 208.634 185.84 208.634 cv
192.317 208.634 208.928 209.554 211.399 220.903 cv
211.589 221.775 211.739 222.649 211.864 223.523 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 279.047 ]ct
clp
/1 /Gradient get_res exec grestore
np
328.372 151.094 mo
328.372 149.96 li
328.372 144.438 337.035 138.64 348.097 136.761 cv
354.418 135.688 359.437 135.106 367.835 135.106 cv
375.925 135.106 380.63 135.63 386.98 136.664 cv
392.278 137.524 397.239 139.307 401.04 141.708 cv
404.714 139.369 409.476 137.622 414.542 136.761 cv
420.864 135.688 425.881 135.106 434.279 135.106 cv
442.371 135.106 447.075 135.63 453.424 136.664 cv
464.817 138.514 473.742 144.356 473.742 149.96 cv
473.742 151.094 li
328.372 151.094 li
cp
0 0 0 0 cmyk
f
453.256 137.216 mo
446.99 136.197 442.335 135.672 434.279 135.672 cv
425.97 135.672 421.099 136.229 414.718 137.312 cv
409.287 138.235 404.455 140.173 401.042 142.482 cv
397.517 140.117 392.481 138.137 386.811 137.216 cv
380.545 136.197 375.891 135.672 367.835 135.672 cv
359.526 135.672 354.655 136.229 348.273 137.312 cv
337.777 139.096 329.465 144.66 329.465 149.394 cv
395.91 149.394 li
406.203 149.394 li
472.649 149.394 li
472.649 144.573 464.08 138.975 453.256 137.216 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
471.156 145.452 mo
470.833 144.926 li
468.436 141.019 461.138 137.378 453.086 136.07 cv
446.849 135.054 442.227 134.539 434.279 134.539 cv
425.984 134.539 421.243 135.086 414.896 136.164 cv
409.844 137.023 405.135 138.798 401.639 141.164 cv
401.044 141.566 li
400.448 141.166 li
396.881 138.774 391.848 136.915 386.641 136.07 cv
380.403 135.054 375.781 134.539 367.835 134.539 cv
359.54 134.539 354.799 135.086 348.45 136.164 cv
340.694 137.482 333.636 141.084 331.285 144.926 cv
330.963 145.452 li
327.825 145.452 li
327.825 144.318 li
327.825 124.017 344.35 100.71 363.911 93.425 cv
375.806 88.9925 385.25 86.5909 401.056 86.5909 cv
416.282 86.5909 425.136 88.7555 437.088 93.0184 cv
457.601 100.333 474.287 123.346 474.287 144.318 cv
474.287 145.452 li
471.156 145.452 li
cp
0 0 0 0 cmyk
f
348.273 134.479 mo
354.655 133.396 359.526 132.839 367.835 132.839 cv
375.891 132.839 380.545 133.364 386.811 134.383 cv
392.481 135.305 397.517 137.284 401.042 139.648 cv
404.455 137.339 409.287 135.402 414.718 134.479 cv
421.099 133.396 425.97 132.839 434.279 132.839 cv
442.335 132.839 446.99 133.364 453.256 134.383 cv
462.016 135.806 469.296 139.746 471.755 143.751 cv
473.195 143.751 li
473.195 123.867 457.084 100.781 436.733 93.524 cv
424.955 89.322 416.203 87.1581 401.056 87.1581 cv
385.436 87.1581 376.278 89.4549 364.28 93.9258 cv
344.544 101.276 328.919 124.228 328.919 143.751 cv
330.362 143.751 li
332.772 139.814 339.809 135.917 348.273 134.479 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
328.919 154.591 mo
319.51 154.591 311.856 146.678 311.856 136.952 cv
311.856 127.226 319.51 119.314 328.919 119.314 cv
338.327 119.314 345.981 127.226 345.981 136.952 cv
345.981 146.678 338.327 154.591 328.919 154.591 cv
cp
0 0 0 0 cmyk
f
344.532 136.952 mo
344.532 145.894 337.543 153.142 328.919 153.142 cv
320.294 153.142 313.304 145.894 313.304 136.952 cv
313.304 128.011 320.294 120.762 328.919 120.762 cv
337.543 120.762 344.532 128.011 344.532 136.952 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
473.195 154.591 mo
463.787 154.591 456.134 146.678 456.134 136.952 cv
456.134 127.226 463.787 119.314 473.195 119.314 cv
482.603 119.314 490.258 127.226 490.258 136.952 cv
490.258 146.678 482.603 154.591 473.195 154.591 cv
cp
0 0 0 0 cmyk
f
488.809 136.952 mo
488.809 145.894 481.82 153.142 473.195 153.142 cv
464.57 153.142 457.582 145.894 457.582 136.952 cv
457.582 128.011 464.57 120.762 473.195 120.762 cv
481.82 120.762 488.809 128.011 488.809 136.952 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
480.92 151.673 mo
321.193 151.673 li
318.778 151.673 316.82 153.565 316.82 155.901 cv
316.82 163.018 li
316.82 167.539 li
316.82 177.751 li
339.965 177.751 li
339.965 171.766 li
462.148 171.766 li
462.148 177.751 li
485.292 177.751 li
485.292 167.539 li
485.292 163.018 li
485.292 155.901 li
485.292 153.565 483.335 151.673 480.92 151.673 cv
cp
f
328.372 208.476 mo
328.372 209.609 li
328.372 215.131 337.036 220.929 348.097 222.809 cv
354.418 223.881 359.437 224.463 367.835 224.463 cv
375.925 224.463 380.63 223.939 386.979 222.905 cv
392.278 222.045 397.238 220.262 401.04 217.861 cv
404.714 220.2 409.476 221.947 414.542 222.809 cv
420.864 223.881 425.881 224.463 434.279 224.463 cv
442.371 224.463 447.075 223.939 453.424 222.905 cv
464.816 221.055 473.742 215.214 473.742 209.609 cv
473.742 208.476 li
328.372 208.476 li
0 0 0 0 cmyk
f
453.256 222.353 mo
446.99 223.372 442.335 223.897 434.279 223.897 cv
425.97 223.897 421.099 223.34 414.718 222.257 cv
409.287 221.334 404.455 219.396 401.042 217.087 cv
397.517 219.452 392.481 221.432 386.81 222.353 cv
380.545 223.372 375.891 223.897 367.835 223.897 cv
359.526 223.897 354.655 223.34 348.273 222.257 cv
337.777 220.473 329.465 214.909 329.465 210.175 cv
395.91 210.175 li
406.203 210.175 li
472.649 210.175 li
472.649 214.996 464.08 220.594 453.256 222.353 cv
.712886 .65359 .642298 .708797 cmyk
f
471.156 214.117 mo
470.833 214.643 li
468.436 218.55 461.138 222.191 453.086 223.499 cv
446.849 224.515 442.227 225.03 434.279 225.03 cv
425.984 225.03 421.243 224.483 414.896 223.405 cv
409.844 222.546 405.136 220.771 401.639 218.405 cv
401.044 218.003 li
400.448 218.403 li
396.881 220.795 391.848 222.654 386.641 223.499 cv
380.403 224.515 375.781 225.03 367.835 225.03 cv
359.54 225.03 354.799 224.483 348.45 223.405 cv
340.694 222.087 333.636 218.485 331.285 214.644 cv
330.963 214.117 li
327.825 214.117 li
327.825 215.251 li
327.825 235.553 344.35 258.859 363.911 266.144 cv
375.806 270.577 385.25 272.978 401.056 272.978 cv
416.282 272.978 425.136 270.814 437.088 266.551 cv
457.6 259.236 474.287 236.223 474.287 215.251 cv
474.287 214.117 li
471.156 214.117 li
0 0 0 0 cmyk
f
348.273 225.09 mo
354.655 226.173 359.526 226.73 367.835 226.73 cv
375.891 226.73 380.545 226.205 386.81 225.186 cv
392.481 224.264 397.517 222.285 401.042 219.921 cv
404.455 222.23 409.287 224.167 414.718 225.09 cv
421.099 226.173 425.97 226.73 434.279 226.73 cv
442.335 226.73 446.99 226.205 453.256 225.186 cv
462.016 223.763 469.296 219.824 471.755 215.818 cv
473.195 215.818 li
473.195 235.702 457.084 258.788 436.733 266.045 cv
424.955 270.247 416.203 272.411 401.056 272.411 cv
385.436 272.411 376.278 270.114 364.28 265.644 cv
344.544 258.293 328.919 235.341 328.919 215.818 cv
330.362 215.818 li
332.772 219.755 339.809 223.652 348.273 225.09 cv
.712886 .65359 .642298 .708797 cmyk
f
328.919 204.979 mo
319.51 204.979 311.856 212.891 311.856 222.617 cv
311.856 232.343 319.51 240.255 328.919 240.255 cv
338.327 240.255 345.98 232.343 345.98 222.617 cv
345.98 212.891 338.327 204.979 328.919 204.979 cv
0 0 0 0 cmyk
f
344.532 222.617 mo
344.532 213.675 337.543 206.427 328.919 206.427 cv
320.294 206.427 313.304 213.675 313.304 222.617 cv
313.304 231.558 320.294 238.807 328.919 238.807 cv
337.543 238.807 344.532 231.558 344.532 222.617 cv
.712886 .65359 .642298 .708797 cmyk
f
473.195 204.979 mo
463.787 204.979 456.134 212.891 456.134 222.617 cv
456.134 232.343 463.787 240.255 473.195 240.255 cv
482.603 240.255 490.258 232.343 490.258 222.617 cv
490.258 212.891 482.603 204.979 473.195 204.979 cv
0 0 0 0 cmyk
f
488.809 222.617 mo
488.809 213.675 481.82 206.427 473.195 206.427 cv
464.571 206.427 457.582 213.675 457.582 222.617 cv
457.582 231.558 464.571 238.807 473.195 238.807 cv
481.82 238.807 488.809 231.558 488.809 222.617 cv
.712886 .65359 .642298 .708797 cmyk
f
480.92 207.896 mo
321.193 207.896 li
318.778 207.896 316.82 206.004 316.82 203.668 cv
316.82 196.551 li
316.82 192.03 li
316.82 181.818 li
339.965 181.818 li
339.965 187.803 li
462.148 187.803 li
462.148 181.818 li
485.292 181.818 li
485.292 192.03 li
485.292 196.551 li
485.292 203.668 li
485.292 206.004 483.334 207.896 480.92 207.896 cv
f
501.706 279.047 mo
305.705 279.047 li
305.705 180.167 li
501.706 180.167 li
501.706 279.047 li
334.573 239.26 mo
341.185 251.302 351.984 261.702 363.911 266.144 cv
375.806 270.577 385.25 272.978 401.056 272.978 cv
416.282 272.978 425.136 270.814 437.088 266.551 cv
449.728 262.043 460.916 251.574 467.641 239.296 cv
469.383 239.918 471.251 240.255 473.195 240.255 cv
482.603 240.255 490.258 232.343 490.258 222.617 cv
490.258 216.338 487.068 210.816 482.276 207.689 cv
484.026 207.138 485.292 205.546 485.292 203.668 cv
485.292 196.551 li
485.292 192.03 li
485.292 181.818 li
462.148 181.818 li
462.148 187.803 li
339.965 187.803 li
339.965 181.818 li
316.82 181.818 li
316.82 192.03 li
316.82 196.551 li
316.82 203.668 li
316.82 205.547 318.087 207.138 319.838 207.689 cv
315.046 210.816 311.856 216.339 311.856 222.617 cv
311.856 232.343 319.51 240.255 328.919 240.255 cv
330.9 240.255 332.803 239.905 334.573 239.26 cv
434.279 225.03 mo
425.984 225.03 421.243 224.483 414.896 223.405 cv
409.844 222.546 405.136 220.771 401.639 218.405 cv
401.044 218.003 li
400.448 218.403 li
396.881 220.795 391.848 222.654 386.641 223.499 cv
380.403 224.515 375.781 225.03 367.835 225.03 cv
359.54 225.03 354.799 224.483 348.45 223.405 cv
347.616 223.263 346.791 223.095 345.978 222.903 cv
345.98 222.808 345.98 222.713 345.98 222.617 cv
345.98 222.543 345.98 222.469 345.979 222.395 cv
346.674 222.549 347.381 222.687 348.097 222.809 cv
354.418 223.881 359.437 224.463 367.835 224.463 cv
375.925 224.463 380.63 223.939 386.979 222.905 cv
392.278 222.045 397.238 220.262 401.04 217.861 cv
404.714 220.2 409.476 221.947 414.542 222.809 cv
420.864 223.881 425.881 224.463 434.279 224.463 cv
442.371 224.463 447.075 223.939 453.424 222.905 cv
454.345 222.756 455.25 222.58 456.135 222.38 cv
456.134 222.459 456.134 222.538 456.134 222.617 cv
456.134 222.707 456.135 222.796 456.136 222.886 cv
455.137 223.126 454.118 223.332 453.086 223.499 cv
446.849 224.515 442.227 225.03 434.279 225.03 cv
463.009 208.476 mo
339.105 208.476 li
338.845 208.275 338.58 208.082 338.309 207.896 cv
463.805 207.896 li
463.534 208.082 463.268 208.275 463.009 208.476 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 403.705 279.047 ]ct
clp
/0 /Gradient get_res exec grestore
np
434.279 224.463 mo
425.881 224.463 420.864 223.881 414.542 222.809 cv
409.476 221.947 404.714 220.2 401.04 217.861 cv
397.238 220.262 392.278 222.045 386.979 222.905 cv
380.63 223.939 375.925 224.463 367.835 224.463 cv
359.437 224.463 354.418 223.881 348.097 222.809 cv
347.381 222.687 346.674 222.549 345.979 222.395 cv
345.977 222.195 345.971 221.995 345.962 221.796 cv
346.719 221.97 347.49 222.124 348.273 222.257 cv
354.655 223.34 359.526 223.897 367.835 223.897 cv
375.891 223.897 380.545 223.372 386.81 222.353 cv
392.481 221.432 397.517 219.452 401.042 217.087 cv
404.455 219.396 409.287 221.334 414.718 222.257 cv
421.099 223.34 425.97 223.897 434.279 223.897 cv
442.335 223.897 446.99 223.372 453.256 222.353 cv
454.242 222.193 455.209 222.001 456.153 221.78 cv
456.144 221.979 456.138 222.18 456.135 222.38 cv
455.25 222.58 454.345 222.756 453.424 222.905 cv
447.075 223.939 442.371 224.463 434.279 224.463 cv
461.113 210.175 mo
406.203 210.175 li
395.91 210.175 li
341.001 210.175 li
340.41 209.562 339.777 208.994 339.105 208.476 cv
463.009 208.476 li
462.337 208.994 461.704 209.562 461.113 210.175 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 403.705 279.047 ]ct
clp
/0 /Gradient get_res exec grestore
np
434.279 223.897 mo
425.97 223.897 421.099 223.34 414.718 222.257 cv
409.287 221.334 404.455 219.396 401.042 217.087 cv
397.517 219.452 392.481 221.432 386.81 222.353 cv
380.545 223.372 375.891 223.897 367.835 223.897 cv
359.526 223.897 354.655 223.34 348.273 222.257 cv
347.49 222.124 346.719 221.97 345.962 221.796 cv
345.761 217.271 343.902 213.186 341.001 210.175 cv
395.91 210.175 li
406.203 210.175 li
461.113 210.175 li
458.215 213.182 456.358 217.261 456.153 221.78 cv
455.209 222.001 454.242 222.193 453.256 222.353 cv
446.99 223.372 442.335 223.897 434.279 223.897 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 403.705 279.047 ]ct
clp
/1 /Gradient get_res exec grestore
np
401.056 272.978 mo
385.25 272.978 375.806 270.577 363.911 266.144 cv
351.984 261.702 341.185 251.302 334.573 239.26 cv
334.818 239.171 335.061 239.076 335.301 238.975 cv
341.66 250.8 352.201 261.145 364.28 265.644 cv
376.278 270.114 385.436 272.411 401.056 272.411 cv
416.203 272.411 424.955 270.247 436.733 266.045 cv
449.304 261.563 460.255 251.043 466.793 238.967 cv
467.072 239.084 467.355 239.194 467.641 239.296 cv
460.916 251.574 449.728 262.043 437.088 266.551 cv
425.136 270.814 416.282 272.978 401.056 272.978 cv
434.279 226.73 mo
425.97 226.73 421.099 226.173 414.718 225.09 cv
409.287 224.167 404.455 222.23 401.042 219.921 cv
397.517 222.285 392.481 224.264 386.81 225.186 cv
380.545 226.205 375.891 226.73 367.835 226.73 cv
359.526 226.73 354.655 226.173 348.273 225.09 cv
347.459 224.952 346.657 224.79 345.872 224.609 cv
345.934 224.048 345.969 223.479 345.978 222.903 cv
346.791 223.095 347.616 223.263 348.45 223.405 cv
354.799 224.483 359.54 225.03 367.835 225.03 cv
375.781 225.03 380.403 224.515 386.641 223.499 cv
391.848 222.654 396.881 220.795 400.448 218.403 cv
401.044 218.003 li
401.639 218.405 li
405.136 220.771 409.844 222.546 414.896 223.405 cv
421.243 224.483 425.984 225.03 434.279 225.03 cv
442.227 225.03 446.849 224.515 453.086 223.499 cv
454.118 223.332 455.137 223.126 456.136 222.886 cv
456.144 223.462 456.179 224.031 456.24 224.593 cv
455.269 224.822 454.272 225.021 453.256 225.186 cv
446.99 226.205 442.335 226.73 434.279 226.73 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 403.705 279.047 ]ct
clp
/0 /Gradient get_res exec grestore
np
401.056 272.411 mo
385.436 272.411 376.278 270.114 364.28 265.644 cv
352.201 261.145 341.66 250.8 335.301 238.975 cv
340.987 236.596 345.16 231.136 345.872 224.609 cv
346.657 224.79 347.459 224.952 348.273 225.09 cv
354.655 226.173 359.526 226.73 367.835 226.73 cv
375.891 226.73 380.545 226.205 386.81 225.186 cv
392.481 224.264 397.517 222.285 401.042 219.921 cv
404.455 222.23 409.287 224.167 414.718 225.09 cv
421.099 226.173 425.97 226.73 434.279 226.73 cv
442.335 226.73 446.99 226.205 453.256 225.186 cv
454.272 225.021 455.269 224.822 456.24 224.593 cv
456.947 231.119 461.113 236.581 466.793 238.967 cv
460.255 251.043 449.304 261.563 436.733 266.045 cv
424.955 270.247 416.203 272.411 401.056 272.411 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 403.705 279.047 ]ct
clp
/1 /Gradient get_res exec grestore
np
328.919 240.255 mo
319.51 240.255 311.856 232.343 311.856 222.617 cv
311.856 216.339 315.046 210.816 319.838 207.689 cv
320.264 207.824 320.72 207.896 321.193 207.896 cv
322.409 207.896 li
317.035 210.455 313.304 216.084 313.304 222.617 cv
313.304 231.558 320.294 238.807 328.919 238.807 cv
337.543 238.807 344.532 231.558 344.532 222.617 cv
344.532 216.084 340.801 210.455 335.428 207.896 cv
338.309 207.896 li
338.58 208.082 338.845 208.275 339.105 208.476 cv
339.777 208.994 340.41 209.562 341.001 210.175 cv
343.902 213.186 345.761 217.271 345.962 221.796 cv
345.971 221.995 345.977 222.195 345.979 222.395 cv
345.98 222.469 345.98 222.543 345.98 222.617 cv
345.98 222.713 345.98 222.808 345.978 222.903 cv
345.969 223.479 345.934 224.048 345.872 224.609 cv
345.16 231.136 340.987 236.596 335.301 238.975 cv
335.061 239.076 334.818 239.171 334.573 239.26 cv
332.803 239.905 330.9 240.255 328.919 240.255 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 403.705 279.047 ]ct
clp
/0 /Gradient get_res exec grestore
np
328.919 238.807 mo
320.294 238.807 313.304 231.558 313.304 222.617 cv
313.304 216.084 317.035 210.455 322.409 207.896 cv
335.428 207.896 li
340.801 210.455 344.532 216.084 344.532 222.617 cv
344.532 231.558 337.543 238.807 328.919 238.807 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 403.705 279.047 ]ct
clp
/1 /Gradient get_res exec grestore
np
473.195 240.255 mo
471.251 240.255 469.383 239.918 467.641 239.296 cv
467.355 239.194 467.072 239.084 466.793 238.967 cv
461.113 236.581 456.947 231.119 456.24 224.593 cv
456.179 224.031 456.144 223.462 456.136 222.886 cv
456.135 222.796 456.134 222.707 456.134 222.617 cv
456.134 222.538 456.134 222.459 456.135 222.38 cv
456.138 222.18 456.144 221.979 456.153 221.78 cv
456.358 217.261 458.215 213.182 461.113 210.175 cv
461.704 209.562 462.337 208.994 463.009 208.476 cv
463.268 208.275 463.534 208.082 463.805 207.896 cv
466.686 207.896 li
461.313 210.455 457.582 216.084 457.582 222.617 cv
457.582 231.558 464.571 238.807 473.195 238.807 cv
481.82 238.807 488.809 231.558 488.809 222.617 cv
488.809 216.084 485.078 210.455 479.705 207.896 cv
480.92 207.896 li
481.393 207.896 481.849 207.824 482.276 207.689 cv
487.068 210.816 490.258 216.338 490.258 222.617 cv
490.258 232.343 482.603 240.255 473.195 240.255 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 403.705 279.047 ]ct
clp
/0 /Gradient get_res exec grestore
np
473.195 238.807 mo
464.571 238.807 457.582 231.558 457.582 222.617 cv
457.582 216.084 461.313 210.455 466.686 207.896 cv
479.705 207.896 li
485.078 210.455 488.809 216.084 488.809 222.617 cv
488.809 231.558 481.82 238.807 473.195 238.807 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 403.705 279.047 ]ct
clp
/1 /Gradient get_res exec grestore
np
480.92 207.896 mo
479.705 207.896 li
466.686 207.896 li
463.805 207.896 li
338.309 207.896 li
335.428 207.896 li
322.409 207.896 li
321.193 207.896 li
320.72 207.896 320.264 207.824 319.838 207.689 cv
318.087 207.138 316.82 205.547 316.82 203.668 cv
316.82 196.551 li
316.82 192.03 li
316.82 181.818 li
339.965 181.818 li
339.965 187.803 li
462.148 187.803 li
462.148 181.818 li
485.292 181.818 li
485.292 192.03 li
485.292 196.551 li
485.292 203.668 li
485.292 205.546 484.026 207.138 482.276 207.689 cv
481.849 207.824 481.393 207.896 480.92 207.896 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 403.705 279.047 ]ct
clp
/1 /Gradient get_res exec grestore
np
575.683 176.706 mo
575.683 177.283 575.011 177.751 574.182 177.751 cv
564.922 177.751 li
564.091 177.751 563.418 177.283 563.418 176.706 cv
563.418 166.709 li
563.418 166.131 564.091 165.664 564.922 165.664 cv
574.182 165.664 li
575.011 165.664 575.683 166.131 575.683 166.709 cv
575.683 176.706 li
cp
.712886 .65359 .642298 .708797 cmyk
f
726.962 176.706 mo
726.962 177.283 726.289 177.751 725.459 177.751 cv
716.201 177.751 li
715.37 177.751 714.697 177.283 714.697 176.706 cv
714.697 166.709 li
714.697 166.131 715.37 165.664 716.201 165.664 cv
725.459 165.664 li
726.289 165.664 726.962 166.131 726.962 166.709 cv
726.962 176.706 li
cp
f
726.218 167.033 mo
726.218 168.943 722.601 170.493 718.137 170.493 cv
572.829 170.493 li
568.365 170.493 564.747 168.943 564.747 167.033 cv
564.747 165.419 li
564.747 163.509 568.365 161.96 572.829 161.96 cv
718.137 161.96 li
722.601 161.96 726.218 163.509 726.218 165.419 cv
726.218 167.033 li
cp
f
572.829 165.266 mo
567.796 165.266 563.7 161.435 563.7 156.725 cv
563.7 153.231 li
563.7 148.521 567.796 144.689 572.829 144.689 cv
718.137 144.689 li
723.169 144.689 727.264 148.521 727.264 153.231 cv
727.264 156.725 li
727.264 161.435 723.169 165.266 718.137 165.266 cv
572.829 165.266 li
cp
0 0 0 0 cmyk
f
726.218 156.725 mo
726.218 160.864 722.601 164.222 718.137 164.222 cv
572.829 164.222 li
568.365 164.222 564.747 160.864 564.747 156.725 cv
564.747 153.231 li
564.747 149.092 568.365 145.735 572.829 145.735 cv
718.137 145.735 li
722.601 145.735 726.218 149.092 726.218 153.231 cv
726.218 156.725 li
cp
.712886 .65359 .642298 .708797 cmyk
f
574.025 168.677 mo
574.025 168.677 564.115 151.463 564.115 137.468 cv
564.115 123.473 580.466 121.896 580.466 121.896 cv
571.368 118.76 li
571.368 118.76 553.448 123.473 553.448 137.468 cv
553.448 151.463 563.361 168.677 563.361 168.677 cv
574.025 168.677 li
cp
f
716.793 168.677 mo
716.793 168.677 726.705 151.463 726.705 137.468 cv
726.705 123.473 710.352 121.896 710.352 121.896 cv
719.449 118.76 li
719.449 118.76 737.371 123.473 737.371 137.468 cv
737.371 151.463 727.46 168.677 727.46 168.677 cv
716.793 168.677 li
cp
f
577.454 144.73 mo
573.42 144.73 570.137 142.011 570.137 138.668 cv
570.137 94.1025 li
570.137 90.759 573.42 88.0399 577.454 88.0399 cv
713.513 88.0399 li
717.544 88.0399 720.831 90.759 720.831 94.1025 cv
720.831 138.668 li
720.831 142.011 717.544 144.73 713.513 144.73 cv
577.454 144.73 li
cp
0 0 0 0 cmyk
f
719.785 138.668 mo
719.785 141.44 716.976 143.684 713.513 143.684 cv
577.454 143.684 li
573.991 143.684 571.184 141.44 571.184 138.668 cv
571.184 94.1025 li
571.184 91.331 573.991 89.0852 577.454 89.0852 cv
713.513 89.0852 li
716.976 89.0852 719.785 91.331 719.785 94.1025 cv
719.785 138.668 li
cp
.712886 .65359 .642298 .708797 cmyk
f
575.683 182.863 mo
575.683 182.286 575.011 181.818 574.182 181.818 cv
564.922 181.818 li
564.091 181.818 563.418 182.286 563.418 182.863 cv
563.418 192.86 li
563.418 193.438 564.091 193.905 564.922 193.905 cv
574.182 193.905 li
575.011 193.905 575.683 193.438 575.683 192.86 cv
575.683 182.863 li
f
726.962 182.863 mo
726.962 182.286 726.289 181.818 725.459 181.818 cv
716.201 181.818 li
715.37 181.818 714.697 182.286 714.697 182.863 cv
714.697 192.86 li
714.697 193.438 715.37 193.905 716.201 193.905 cv
725.459 193.905 li
726.289 193.905 726.962 193.438 726.962 192.86 cv
726.962 182.863 li
f
726.218 192.537 mo
726.218 190.626 722.601 189.076 718.137 189.076 cv
572.829 189.076 li
568.365 189.076 564.747 190.626 564.747 192.537 cv
564.747 194.15 li
564.747 196.06 568.365 197.609 572.829 197.609 cv
718.137 197.609 li
722.601 197.609 726.218 196.06 726.218 194.15 cv
726.218 192.537 li
f
572.829 194.303 mo
567.796 194.303 563.7 198.134 563.7 202.844 cv
563.7 206.338 li
563.7 211.048 567.796 214.88 572.829 214.88 cv
718.137 214.88 li
723.169 214.88 727.264 211.048 727.264 206.338 cv
727.264 202.844 li
727.264 198.134 723.169 194.303 718.137 194.303 cv
572.829 194.303 li
0 0 0 0 cmyk
f
726.218 202.844 mo
726.218 198.705 722.601 195.348 718.137 195.348 cv
572.829 195.348 li
568.365 195.348 564.747 198.705 564.747 202.844 cv
564.747 206.338 li
564.747 210.477 568.365 213.834 572.829 213.834 cv
718.137 213.834 li
722.601 213.834 726.218 210.477 726.218 206.338 cv
726.218 202.844 li
.712886 .65359 .642298 .708797 cmyk
f
574.025 190.892 mo
574.025 190.892 564.115 208.106 564.115 222.101 cv
564.115 236.096 580.466 237.673 580.466 237.673 cv
571.368 240.809 li
571.368 240.809 553.448 236.096 553.448 222.101 cv
553.448 208.106 563.361 190.892 563.361 190.892 cv
574.025 190.892 li
f
716.793 190.892 mo
716.793 190.892 726.705 208.106 726.705 222.101 cv
726.705 236.096 710.352 237.673 710.352 237.673 cv
719.449 240.809 li
719.449 240.809 737.371 236.096 737.371 222.101 cv
737.371 208.106 727.46 190.892 727.46 190.892 cv
716.793 190.892 li
f
577.453 214.839 mo
573.42 214.839 570.137 217.558 570.137 220.901 cv
570.137 265.466 li
570.137 268.81 573.42 271.529 577.453 271.529 cv
713.513 271.529 li
717.544 271.529 720.831 268.81 720.831 265.466 cv
720.831 220.901 li
720.831 217.558 717.544 214.839 713.513 214.839 cv
577.453 214.839 li
0 0 0 0 cmyk
f
719.785 220.901 mo
719.785 218.129 716.976 215.885 713.513 215.885 cv
577.453 215.885 li
573.991 215.885 571.184 218.129 571.184 220.901 cv
571.184 265.466 li
571.184 268.238 573.991 270.484 577.453 270.484 cv
713.513 270.484 li
716.976 270.484 719.785 268.238 719.785 265.466 cv
719.785 220.901 li
.712886 .65359 .642298 .708797 cmyk
f
742.121 279.047 mo
546.122 279.047 li
546.122 180.167 li
742.121 180.167 li
742.121 279.047 li
570.137 240.428 mo
570.137 265.466 li
570.137 268.81 573.42 271.529 577.453 271.529 cv
713.513 271.529 li
717.544 271.529 720.831 268.81 720.831 265.466 cv
720.831 240.376 li
725.033 238.935 737.371 233.713 737.371 222.101 cv
737.371 208.106 727.46 190.892 727.46 190.892 cv
726.962 190.892 li
726.962 182.863 li
726.962 182.286 726.289 181.818 725.459 181.818 cv
716.201 181.818 li
715.37 181.818 714.697 182.286 714.697 182.863 cv
714.697 189.076 li
575.683 189.076 li
575.683 182.863 li
575.683 182.286 575.011 181.818 574.182 181.818 cv
564.922 181.818 li
564.091 181.818 563.418 182.286 563.418 182.863 cv
563.418 190.892 li
563.361 190.892 li
563.361 190.892 553.448 208.106 553.448 222.101 cv
553.448 233.856 566.09 239.062 570.137 240.428 cv
570.137 233.821 mo
566.881 231.512 564.115 227.857 564.115 222.101 cv
564.115 218.678 564.708 215.062 565.604 211.553 cv
567.275 213.575 569.892 214.88 572.829 214.88 cv
576.608 214.88 li
572.971 215.228 570.137 217.795 570.137 220.901 cv
570.137 233.821 li
720.831 233.714 mo
720.831 220.901 li
720.831 217.795 717.994 215.228 714.359 214.88 cv
718.137 214.88 li
721.009 214.88 723.575 213.631 725.25 211.685 cv
726.127 215.152 726.705 218.721 726.705 222.101 cv
726.705 227.769 724.023 231.4 720.831 233.714 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 279.047 ]ct
clp
/0 /Gradient get_res exec grestore
np
565.717 190.892 mo
563.418 190.892 li
563.418 182.863 li
563.418 182.286 564.091 181.818 564.922 181.818 cv
574.182 181.818 li
575.011 181.818 575.683 182.286 575.683 182.863 cv
575.683 189.076 li
572.829 189.076 li
569.756 189.076 567.084 189.811 565.717 190.892 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 279.047 ]ct
clp
/1 /Gradient get_res exec grestore
np
726.962 190.892 mo
725.249 190.892 li
723.882 189.811 721.21 189.076 718.137 189.076 cv
714.697 189.076 li
714.697 182.863 li
714.697 182.286 715.37 181.818 716.201 181.818 cv
725.459 181.818 li
726.289 181.818 726.962 182.286 726.962 182.863 cv
726.962 190.892 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 279.047 ]ct
clp
/1 /Gradient get_res exec grestore
np
572.214 194.322 mo
573.287 192.174 574.025 190.892 574.025 190.892 cv
565.717 190.892 li
567.084 189.811 569.756 189.076 572.829 189.076 cv
575.683 189.076 li
714.697 189.076 li
718.137 189.076 li
721.21 189.076 723.882 189.811 725.249 190.892 cv
716.793 190.892 li
716.793 190.892 717.53 192.171 718.601 194.314 cv
718.447 194.307 718.292 194.303 718.137 194.303 cv
572.829 194.303 li
572.622 194.303 572.417 194.31 572.214 194.322 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 279.047 ]ct
clp
/1 /Gradient get_res exec grestore
np
718.137 214.88 mo
714.359 214.88 li
714.081 214.853 713.799 214.839 713.513 214.839 cv
577.453 214.839 li
577.167 214.839 576.885 214.853 576.608 214.88 cv
572.829 214.88 li
569.892 214.88 567.275 213.575 565.604 211.553 cv
565.713 211.123 565.828 210.694 565.946 210.269 cv
567.369 212.408 569.919 213.834 572.829 213.834 cv
718.137 213.834 li
720.977 213.834 723.475 212.475 724.916 210.421 cv
725.031 210.84 725.143 211.261 725.25 211.685 cv
723.575 213.631 721.009 214.88 718.137 214.88 cv
571.672 195.424 mo
571.86 195.035 572.041 194.668 572.214 194.322 cv
572.417 194.31 572.622 194.303 572.829 194.303 cv
718.137 194.303 li
718.292 194.303 718.447 194.307 718.601 194.314 cv
718.772 194.656 718.951 195.02 719.137 195.405 cv
718.81 195.367 718.476 195.348 718.137 195.348 cv
572.829 195.348 li
572.436 195.348 572.05 195.374 571.672 195.424 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 279.047 ]ct
clp
/0 /Gradient get_res exec grestore
np
718.137 213.834 mo
572.829 213.834 li
569.919 213.834 567.369 212.408 565.946 210.269 cv
567.559 204.456 569.919 199.043 571.672 195.424 cv
572.05 195.374 572.436 195.348 572.829 195.348 cv
718.137 195.348 li
718.476 195.348 718.81 195.367 719.137 195.405 cv
720.907 199.055 723.299 204.54 724.916 210.421 cv
723.475 212.475 720.977 213.834 718.137 213.834 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 279.047 ]ct
clp
/1 /Gradient get_res exec grestore
np
570.137 240.428 mo
566.09 239.062 553.448 233.856 553.448 222.101 cv
553.448 208.106 563.361 190.892 563.361 190.892 cv
563.418 190.892 li
565.717 190.892 li
574.025 190.892 li
574.025 190.892 573.287 192.174 572.214 194.322 cv
572.041 194.668 571.86 195.035 571.672 195.424 cv
569.919 199.043 567.559 204.456 565.946 210.269 cv
565.828 210.694 565.713 211.123 565.604 211.553 cv
564.708 215.062 564.115 218.678 564.115 222.101 cv
564.115 227.857 566.881 231.512 570.137 233.821 cv
570.137 240.428 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 279.047 ]ct
clp
/1 /Gradient get_res exec grestore
np
720.831 240.376 mo
720.831 233.714 li
724.023 231.4 726.705 227.769 726.705 222.101 cv
726.705 218.721 726.127 215.152 725.25 211.685 cv
725.143 211.261 725.031 210.84 724.916 210.421 cv
723.299 204.54 720.907 199.055 719.137 195.405 cv
718.951 195.02 718.772 194.656 718.601 194.314 cv
717.53 192.171 716.793 190.892 716.793 190.892 cv
725.249 190.892 li
726.962 190.892 li
727.46 190.892 li
727.46 190.892 737.371 208.106 737.371 222.101 cv
737.371 233.713 725.033 238.935 720.831 240.376 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 279.047 ]ct
clp
/1 /Gradient get_res exec grestore
np
713.513 271.529 mo
577.453 271.529 li
573.42 271.529 570.137 268.81 570.137 265.466 cv
570.137 240.428 li
570.137 233.821 li
570.137 220.901 li
570.137 217.795 572.971 215.228 576.608 214.88 cv
576.885 214.853 577.167 214.839 577.453 214.839 cv
713.513 214.839 li
713.799 214.839 714.081 214.853 714.359 214.88 cv
717.994 215.228 720.831 217.795 720.831 220.901 cv
720.831 233.714 li
720.831 240.376 li
720.831 265.466 li
720.831 268.81 717.544 271.529 713.513 271.529 cv
577.453 215.885 mo
573.991 215.885 571.184 218.129 571.184 220.901 cv
571.184 265.466 li
571.184 268.238 573.991 270.484 577.453 270.484 cv
713.513 270.484 li
716.976 270.484 719.785 268.238 719.785 265.466 cv
719.785 220.901 li
719.785 218.129 716.976 215.885 713.513 215.885 cv
577.453 215.885 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 279.047 ]ct
clp
/0 /Gradient get_res exec grestore
np
713.513 270.484 mo
577.453 270.484 li
573.991 270.484 571.184 268.238 571.184 265.466 cv
571.184 220.901 li
571.184 218.129 573.991 215.885 577.453 215.885 cv
713.513 215.885 li
716.976 215.885 719.785 218.129 719.785 220.901 cv
719.785 265.466 li
719.785 268.238 716.976 270.484 713.513 270.484 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 279.047 ]ct
clp
/1 /Gradient get_res exec grestore
np
70.7131 370.014 mo
70.5264 369.175 li
70.4351 368.762 68.361 358.98 75.2934 351.22 cv
80.5215 345.367 89.3683 342.351 101.59 342.244 cv
103.959 338.706 118.381 319.717 155.214 319.174 cv
155.214 319.163 li
156.502 319.158 li
156.567 320.211 li
156.627 319.158 li
157.917 319.155 li
157.917 319.174 li
194.75 319.717 209.172 338.706 211.541 342.244 cv
223.762 342.351 232.608 345.367 237.836 351.22 cv
244.768 358.98 242.694 368.762 242.603 369.175 cv
242.416 370.014 li
156.722 370.384 li
70.7131 370.014 li
cp
0 0 0 0 cmyk
f
241.475 368.966 mo
241.475 368.966 247.178 343.294 210.88 343.294 cv
210.88 343.294 197.859 320.392 156.767 320.215 cv
156.767 320.208 li
156.567 320.211 li
156.364 320.208 li
156.364 320.215 li
115.271 320.392 102.252 343.294 102.252 343.294 cv
65.9517 343.294 71.6536 368.966 71.6536 368.966 cv
156.412 369.332 li
156.719 369.332 li
241.475 368.966 li
cp
.712886 .65359 .642298 .708797 cmyk
f
237.804 399.367 mo
237.804 401.537 235.92 403.29 233.597 403.29 cv
79.8844 403.29 li
77.5599 403.29 75.676 401.537 75.676 399.367 cv
75.676 388.566 li
75.676 386.398 77.5599 384.642 79.8844 384.642 cv
233.597 384.642 li
235.92 384.642 237.804 386.398 237.804 388.566 cv
237.804 399.367 li
cp
f
79.8844 385.813 mo
76.9348 385.813 74.6244 384.15 74.6244 382.03 cv
74.6244 374.511 li
74.6244 372.39 76.9348 370.728 79.8844 370.728 cv
156.74 370.728 li
156.74 385.813 li
79.8844 385.813 li
cp
0 0 0 0 cmyk
f
79.8844 371.78 mo
77.5599 371.78 75.676 373.002 75.676 374.511 cv
75.676 382.03 li
75.676 383.539 77.5599 384.761 79.8844 384.761 cv
155.688 384.761 li
155.688 371.78 li
79.8844 371.78 li
cp
.712886 .65359 .642298 .708797 cmyk
f
156.74 385.813 mo
156.74 370.728 li
233.597 370.728 li
236.546 370.728 238.855 372.39 238.855 374.511 cv
238.855 382.03 li
238.855 384.15 236.546 385.813 233.597 385.813 cv
156.74 385.813 li
cp
0 0 0 0 cmyk
f
233.597 371.78 mo
157.792 371.78 li
157.792 384.761 li
233.597 384.761 li
235.92 384.761 237.804 383.539 237.804 382.03 cv
237.804 374.511 li
237.804 373.002 235.92 371.78 233.597 371.78 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
57.544 409.246 mo
57.544 390.672 li
51.6059 388.064 47.6832 382.13 47.6832 375.599 cv
47.6832 366.515 55.074 359.125 64.1583 359.125 cv
71.4464 359.125 77.9085 364.024 79.9522 370.932 cv
80.4296 370.932 li
80.4296 373.13 li
80.5661 374.023 80.6326 374.832 80.6326 375.599 cv
80.6326 376.366 80.5661 377.175 80.4296 378.068 cv
80.4296 409.246 li
57.544 409.246 li
cp
0 0 0 0 cmyk
f
79.1843 375.599 mo
79.1843 374.794 79.1029 374.011 78.9813 373.241 cv
78.9813 372.38 li
78.83 372.38 li
77.3555 365.629 71.3509 360.573 64.1583 360.573 cv
55.8588 360.573 49.1315 367.3 49.1315 375.599 cv
49.1315 382.081 53.2423 387.587 58.9923 389.694 cv
58.9923 407.798 li
78.9813 407.798 li
78.9813 377.957 li
79.1029 377.187 79.1843 376.404 79.1843 375.599 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
232.832 409.246 mo
232.832 378.06 li
232.696 377.17 232.63 376.364 232.63 375.599 cv
232.63 374.835 232.696 374.029 232.832 373.138 cv
232.832 370.932 li
233.31 370.932 li
235.354 364.024 241.816 359.125 249.104 359.125 cv
258.188 359.125 265.578 366.515 265.578 375.599 cv
265.578 382.132 261.655 388.065 255.717 390.672 cv
255.717 409.246 li
232.832 409.246 li
cp
0 0 0 0 cmyk
f
264.13 375.599 mo
264.13 367.3 257.404 360.573 249.104 360.573 cv
241.91 360.573 235.907 365.629 234.433 372.38 cv
234.28 372.38 li
234.28 373.25 li
234.159 374.018 234.078 374.797 234.078 375.599 cv
234.078 376.401 234.159 377.182 234.28 377.948 cv
234.28 407.798 li
254.269 407.798 li
254.269 389.694 li
260.019 387.587 264.13 382.082 264.13 375.599 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
70.7131 448.906 mo
70.5263 449.744 li
70.4351 450.158 68.3609 459.939 75.2933 467.7 cv
80.5214 473.552 89.3682 476.569 101.59 476.675 cv
103.959 480.214 118.381 499.203 155.215 499.746 cv
155.215 499.757 li
156.502 499.761 li
156.567 498.708 li
156.627 499.761 li
157.917 499.764 li
157.917 499.746 li
194.75 499.203 209.172 480.214 211.541 476.675 cv
223.762 476.569 232.608 473.552 237.836 467.7 cv
244.768 459.939 242.694 450.158 242.603 449.744 cv
242.416 448.906 li
156.722 448.535 li
70.7131 448.906 li
0 0 0 0 cmyk
f
241.475 449.954 mo
241.475 449.954 247.178 475.626 210.88 475.626 cv
210.88 475.626 197.859 498.527 156.767 498.705 cv
156.767 498.712 li
156.567 498.708 li
156.364 498.712 li
156.364 498.705 li
115.271 498.527 102.251 475.626 102.251 475.626 cv
65.9517 475.626 71.6536 449.954 71.6536 449.954 cv
156.412 449.588 li
156.719 449.588 li
241.475 449.954 li
.712886 .65359 .642298 .708797 cmyk
f
237.804 419.552 mo
237.804 417.383 235.92 415.629 233.597 415.629 cv
79.8844 415.629 li
77.5598 415.629 75.676 417.383 75.676 419.552 cv
75.676 430.354 li
75.676 432.522 77.5598 434.277 79.8844 434.277 cv
233.597 434.277 li
235.92 434.277 237.804 432.522 237.804 430.354 cv
237.804 419.552 li
f
79.8844 433.106 mo
76.9348 433.106 74.6244 434.77 74.6244 436.89 cv
74.6244 444.408 li
74.6244 446.53 76.9348 448.192 79.8844 448.192 cv
156.74 448.192 li
156.74 433.106 li
79.8844 433.106 li
0 0 0 0 cmyk
f
79.8844 447.139 mo
77.5598 447.139 75.676 445.917 75.676 444.408 cv
75.676 436.89 li
75.676 435.38 77.5598 434.159 79.8844 434.159 cv
155.688 434.159 li
155.688 447.139 li
79.8844 447.139 li
.712886 .65359 .642298 .708797 cmyk
f
156.74 433.106 mo
156.74 448.192 li
233.597 448.192 li
236.546 448.192 238.855 446.53 238.855 444.408 cv
238.855 436.89 li
238.855 434.77 236.546 433.106 233.597 433.106 cv
156.74 433.106 li
0 0 0 0 cmyk
f
233.597 447.139 mo
157.792 447.139 li
157.792 434.159 li
233.597 434.159 li
235.92 434.159 237.804 435.38 237.804 436.89 cv
237.804 444.408 li
237.804 445.917 235.92 447.139 233.597 447.139 cv
.712886 .65359 .642298 .708797 cmyk
f
57.5441 409.673 mo
57.5441 428.248 li
51.606 430.856 47.6833 436.789 47.6833 443.321 cv
47.6833 452.405 55.0739 459.795 64.1582 459.795 cv
71.4463 459.795 77.9085 454.896 79.9522 447.988 cv
80.4295 447.988 li
80.4295 445.79 li
80.5661 444.896 80.6326 444.087 80.6326 443.321 cv
80.6326 442.554 80.5661 441.745 80.4295 440.851 cv
80.4295 409.673 li
57.5441 409.673 li
0 0 0 0 cmyk
f
79.1842 443.321 mo
79.1842 444.125 79.1029 444.909 78.9813 445.678 cv
78.9813 446.54 li
78.8299 446.54 li
77.3555 453.29 71.351 458.347 64.1582 458.347 cv
55.8588 458.347 49.1314 451.62 49.1314 443.321 cv
49.1314 436.839 53.2424 431.333 58.9924 429.225 cv
58.9924 411.122 li
78.9813 411.122 li
78.9813 440.963 li
79.1029 441.732 79.1842 442.516 79.1842 443.321 cv
.712886 .65359 .642298 .708797 cmyk
f
232.832 409.673 mo
232.832 440.86 li
232.696 441.749 232.63 442.555 232.63 443.321 cv
232.63 444.084 232.696 444.891 232.832 445.782 cv
232.832 447.988 li
233.31 447.988 li
235.354 454.896 241.816 459.795 249.104 459.795 cv
258.188 459.795 265.578 452.405 265.578 443.321 cv
265.578 436.788 261.655 430.854 255.717 428.248 cv
255.717 409.673 li
232.832 409.673 li
0 0 0 0 cmyk
f
264.129 443.321 mo
264.129 451.62 257.404 458.347 249.104 458.347 cv
241.91 458.347 235.907 453.29 234.433 446.54 cv
234.28 446.54 li
234.28 445.67 li
234.159 444.902 234.078 444.123 234.078 443.321 cv
234.078 442.519 234.159 441.738 234.28 440.971 cv
234.28 411.122 li
254.269 411.122 li
254.269 429.225 li
260.02 431.333 264.129 436.837 264.129 443.321 cv
.712886 .65359 .642298 .708797 cmyk
f
275.772 509.496 mo
43.5647 509.496 li
43.5647 410.617 li
57.5441 410.617 li
57.5441 428.248 li
51.606 430.856 47.6833 436.789 47.6833 443.321 cv
47.6833 452.405 55.0739 459.795 64.1582 459.795 cv
66.4415 459.795 68.6437 459.314 70.6544 458.441 cv
71.2764 461.39 72.6103 464.696 75.2933 467.7 cv
80.5214 473.552 89.3682 476.569 101.59 476.675 cv
103.959 480.214 118.381 499.203 155.215 499.746 cv
155.215 499.757 li
156.502 499.761 li
156.567 498.708 li
156.627 499.761 li
157.917 499.764 li
157.917 499.746 li
194.75 499.203 209.172 480.214 211.541 476.675 cv
223.762 476.569 232.608 473.552 237.836 467.7 cv
240.535 464.678 241.869 461.35 242.486 458.388 cv
244.529 459.294 246.775 459.795 249.104 459.795 cv
258.188 459.795 265.578 452.405 265.578 443.321 cv
265.578 436.788 261.655 430.854 255.717 428.248 cv
255.717 410.617 li
275.772 410.617 li
275.772 509.496 li
233.598 448.868 mo
156.722 448.535 li
79.6645 448.867 li
79.7444 448.645 79.82 448.419 79.8905 448.192 cv
156.74 448.192 li
156.74 434.277 li
156.74 448.192 li
233.372 448.192 li
233.443 448.419 233.518 448.645 233.598 448.868 cv
232.832 415.629 mo
80.4295 415.629 li
80.4295 410.617 li
232.832 410.617 li
232.832 415.629 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
157.917 499.764 mo
156.627 499.761 li
156.567 498.708 li
156.767 498.712 li
156.767 498.705 li
197.859 498.527 210.88 475.626 210.88 475.626 cv
233.783 475.626 239.964 465.405 241.408 457.862 cv
241.76 458.049 242.12 458.225 242.486 458.388 cv
241.869 461.35 240.535 464.678 237.836 467.7 cv
232.608 473.552 223.762 476.569 211.541 476.675 cv
209.172 480.214 194.75 499.203 157.917 499.746 cv
157.917 499.764 li
156.502 499.761 mo
155.215 499.757 li
155.215 499.746 li
118.381 499.203 103.959 480.214 101.59 476.675 cv
89.3682 476.569 80.5214 473.552 75.2933 467.7 cv
72.6103 464.696 71.2764 461.39 70.6544 458.441 cv
71.0207 458.282 71.3809 458.11 71.7338 457.926 cv
73.1999 465.463 79.4112 475.626 102.251 475.626 cv
102.251 475.626 115.271 498.527 156.364 498.705 cv
156.364 498.712 li
156.567 498.708 li
156.502 499.761 li
234.019 449.922 mo
156.719 449.588 li
156.412 449.588 li
79.2439 449.921 li
79.3957 449.576 79.5361 449.225 79.6645 448.867 cv
156.722 448.535 li
233.598 448.868 li
233.727 449.225 233.867 449.577 234.019 449.922 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
156.767 498.712 mo
156.567 498.708 li
156.364 498.712 li
156.364 498.705 li
115.271 498.527 102.251 475.626 102.251 475.626 cv
79.4112 475.626 73.1999 465.463 71.7338 457.926 cv
75.0331 456.201 77.7181 453.387 79.2439 449.921 cv
156.412 449.588 li
156.719 449.588 li
234.019 449.922 li
235.526 453.344 238.164 456.132 241.408 457.862 cv
239.964 465.405 233.783 475.626 210.88 475.626 cv
210.88 475.626 197.859 498.527 156.767 498.705 cv
156.767 498.712 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
156.74 434.277 mo
156.74 434.277 li
156.74 433.106 li
80.4295 433.106 li
80.4295 415.629 li
232.832 415.629 li
232.832 433.106 li
156.74 433.106 li
156.74 434.277 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
156.74 448.192 mo
79.8905 448.192 li
79.9115 448.124 79.932 448.056 79.9522 447.988 cv
80.4295 447.988 li
80.4295 447.139 li
155.688 447.139 li
155.688 434.159 li
80.4295 434.159 li
80.4295 433.106 li
156.74 433.106 li
156.74 434.277 li
156.74 448.192 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
155.688 447.139 mo
80.4295 447.139 li
80.4295 445.79 li
80.5661 444.896 80.6326 444.087 80.6326 443.321 cv
80.6326 442.554 80.5661 441.745 80.4295 440.851 cv
80.4295 434.159 li
155.688 434.159 li
155.688 447.139 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
233.372 448.192 mo
156.74 448.192 li
156.74 434.277 li
156.74 433.106 li
232.832 433.106 li
232.832 434.159 li
157.792 434.159 li
157.792 447.139 li
232.832 447.139 li
232.832 447.988 li
233.31 447.988 li
233.33 448.056 233.351 448.124 233.372 448.192 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
232.832 447.139 mo
157.792 447.139 li
157.792 434.159 li
232.832 434.159 li
232.832 440.86 li
232.696 441.749 232.63 442.555 232.63 443.321 cv
232.63 444.084 232.696 444.891 232.832 445.782 cv
232.832 447.139 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
64.1582 459.795 mo
55.0739 459.795 47.6833 452.405 47.6833 443.321 cv
47.6833 436.789 51.606 430.856 57.5441 428.248 cv
57.5441 410.617 li
80.4295 410.617 li
80.4295 415.629 li
80.4295 433.106 li
80.4295 434.159 li
80.4295 440.851 li
80.5661 441.745 80.6326 442.554 80.6326 443.321 cv
80.6326 444.087 80.5661 444.896 80.4295 445.79 cv
80.4295 447.139 li
80.4295 447.988 li
79.9522 447.988 li
79.932 448.056 79.9115 448.124 79.8905 448.192 cv
79.82 448.419 79.7444 448.645 79.6645 448.867 cv
79.5361 449.225 79.3957 449.576 79.2439 449.921 cv
77.7181 453.387 75.0331 456.201 71.7338 457.926 cv
71.3809 458.11 71.0207 458.282 70.6544 458.441 cv
68.6437 459.314 66.4415 459.795 64.1582 459.795 cv
58.9924 411.122 mo
58.9924 429.225 li
53.2424 431.333 49.1314 436.839 49.1314 443.321 cv
49.1314 451.62 55.8588 458.347 64.1582 458.347 cv
71.351 458.347 77.3555 453.29 78.8299 446.54 cv
78.9813 446.54 li
78.9813 445.678 li
79.1029 444.909 79.1842 444.125 79.1842 443.321 cv
79.1842 442.516 79.1029 441.732 78.9813 440.963 cv
78.9813 411.122 li
58.9924 411.122 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
64.1582 458.347 mo
55.8588 458.347 49.1314 451.62 49.1314 443.321 cv
49.1314 436.839 53.2424 431.333 58.9924 429.225 cv
58.9924 411.122 li
78.9813 411.122 li
78.9813 440.963 li
79.1029 441.732 79.1842 442.516 79.1842 443.321 cv
79.1842 444.125 79.1029 444.909 78.9813 445.678 cv
78.9813 446.54 li
78.8299 446.54 li
77.3555 453.29 71.351 458.347 64.1582 458.347 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
249.104 459.795 mo
246.775 459.795 244.529 459.294 242.486 458.388 cv
242.12 458.225 241.76 458.049 241.408 457.862 cv
238.164 456.132 235.526 453.344 234.019 449.922 cv
233.867 449.577 233.727 449.225 233.598 448.868 cv
233.518 448.645 233.443 448.419 233.372 448.192 cv
233.351 448.124 233.33 448.056 233.31 447.988 cv
232.832 447.988 li
232.832 447.139 li
232.832 445.782 li
232.696 444.891 232.63 444.084 232.63 443.321 cv
232.63 442.555 232.696 441.749 232.832 440.86 cv
232.832 434.159 li
232.832 433.106 li
232.832 415.629 li
232.832 410.617 li
255.717 410.617 li
255.717 428.248 li
261.655 430.854 265.578 436.788 265.578 443.321 cv
265.578 452.405 258.188 459.795 249.104 459.795 cv
234.28 411.122 mo
234.28 440.971 li
234.159 441.738 234.078 442.519 234.078 443.321 cv
234.078 444.123 234.159 444.902 234.28 445.67 cv
234.28 446.54 li
234.433 446.54 li
235.907 453.29 241.91 458.347 249.104 458.347 cv
257.404 458.347 264.129 451.62 264.129 443.321 cv
264.129 436.837 260.02 431.333 254.269 429.225 cv
254.269 411.122 li
234.28 411.122 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
249.104 458.347 mo
241.91 458.347 235.907 453.29 234.433 446.54 cv
234.28 446.54 li
234.28 445.67 li
234.159 444.902 234.078 444.123 234.078 443.321 cv
234.078 442.519 234.159 441.738 234.28 440.971 cv
234.28 411.122 li
254.269 411.122 li
254.269 429.225 li
260.02 431.333 264.129 436.837 264.129 443.321 cv
264.129 451.62 257.404 458.347 249.104 458.347 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 159.668 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
362.967 400.511 mo
344.793 400.511 330.01 385.801 330.01 367.72 cv
330.01 358.976 li
330.01 341.243 351.48 325.093 375.053 325.093 cv
389.757 325.093 399.959 329.371 400.386 329.552 cv
401.052 329.836 li
401.052 400.511 li
362.967 400.511 li
cp
0 0 0 0 cmyk
f
375.053 326.186 mo
352.346 326.186 331.102 341.471 331.102 358.976 cv
331.102 367.72 li
331.102 385.226 345.37 399.418 362.967 399.418 cv
399.959 399.418 li
399.959 330.558 li
399.959 330.558 389.702 326.186 375.053 326.186 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
401.061 400.511 mo
401.061 329.836 li
401.725 329.552 li
402.153 329.371 412.356 325.093 427.059 325.093 cv
450.633 325.093 472.105 341.243 472.105 358.976 cv
472.105 367.72 li
472.105 385.801 457.319 400.511 439.146 400.511 cv
401.061 400.511 li
cp
0 0 0 0 cmyk
f
427.059 326.186 mo
449.768 326.186 471.011 341.471 471.011 358.976 cv
471.011 367.72 li
471.011 385.226 456.743 399.418 439.146 399.418 cv
402.155 399.418 li
402.155 330.558 li
402.155 330.558 412.412 326.186 427.059 326.186 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
331.567 400.217 mo
331.626 398.043 331.529 395.557 331.432 393.151 cv
331.358 391.243 331.286 389.44 331.286 387.754 cv
331.286 379.672 320.642 366.805 311.794 366.805 cv
309.473 366.805 307.791 367.195 306.499 368.034 cv
305.139 366.336 li
309.5 362.054 317.378 359.883 328.552 359.883 cv
337.622 359.883 343.492 376.664 343.492 382.471 cv
343.492 388.255 343.066 399.883 343.061 400.001 cv
343.023 401.02 li
331.534 401.377 li
331.567 400.217 li
cp
0 0 0 0 cmyk
f
342.399 382.471 mo
342.399 376.643 336.568 360.976 328.552 360.976 cv
317.108 360.976 309.855 363.238 305.904 367.117 cv
307.474 366.097 309.443 365.711 311.794 365.711 cv
321.266 365.711 332.379 379.006 332.379 387.754 cv
332.379 391.602 332.767 396.349 332.66 400.248 cv
341.969 399.96 li
341.969 399.96 342.399 388.301 342.399 382.471 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
459.087 401.02 mo
459.05 400.001 li
459.046 399.883 458.622 388.255 458.622 382.471 cv
458.622 376.664 464.49 359.883 473.56 359.883 cv
484.733 359.883 492.611 362.054 496.974 366.336 cv
495.613 368.034 li
494.323 367.195 492.641 366.805 490.319 366.805 cv
481.469 366.805 470.828 379.672 470.828 387.754 cv
470.828 389.44 470.755 391.243 470.679 393.151 cv
470.584 395.557 470.485 398.043 470.547 400.217 cv
470.58 401.377 li
459.087 401.02 li
cp
0 0 0 0 cmyk
f
459.715 382.471 mo
459.715 376.643 465.545 360.976 473.56 360.976 cv
485.006 360.976 492.256 363.238 496.208 367.117 cv
494.639 366.097 492.671 365.711 490.319 365.711 cv
480.845 365.711 469.734 379.006 469.734 387.754 cv
469.734 391.602 469.345 396.349 469.454 400.248 cv
460.142 399.96 li
460.142 399.96 459.715 388.301 459.715 382.471 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
331.227 384.471 mo
341.694 372.083 li
461.964 372.083 li
472.43 384.471 li
331.227 384.471 li
cp
0 0 0 0 cmyk
f
469.968 383.378 mo
333.69 383.378 li
342.31 373.176 li
461.346 373.176 li
469.968 383.378 li
cp
.712886 .65359 .642298 .708797 cmyk
f
318.351 409.246 mo
318.351 384.471 li
478.66 384.471 li
478.66 409.246 li
318.351 409.246 li
cp
0 0 0 0 cmyk
f
477.413 408.154 mo
477.413 408.154 li
319.598 408.154 li
319.598 385.565 li
477.413 385.565 li
477.413 408.154 li
cp
.712886 .65359 .642298 .708797 cmyk
f
311.429 409.246 mo
311.1 408.808 li
310.652 408.207 300.135 393.99 300.135 382.104 cv
300.135 370.977 303.408 366.436 311.43 366.436 cv
321.94 366.436 331.468 381.911 331.468 387.932 cv
331.468 393.688 331.649 407.995 331.65 408.139 cv
331.664 409.246 li
311.429 409.246 li
cp
0 0 0 0 cmyk
f
330.557 408.154 mo
311.977 408.154 li
311.977 408.154 301.229 393.762 301.229 382.104 cv
301.229 370.445 304.872 367.529 311.43 367.529 cv
320.903 367.529 330.375 382.104 330.375 387.932 cv
330.375 393.762 330.557 408.154 330.557 408.154 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
490.685 409.246 mo
491.012 408.808 li
491.46 408.207 501.978 393.99 501.978 382.104 cv
501.978 370.977 498.706 366.436 490.683 366.436 cv
480.171 366.436 470.644 381.911 470.644 387.932 cv
470.644 393.688 470.464 407.995 470.461 408.139 cv
470.448 409.246 li
490.685 409.246 li
cp
0 0 0 0 cmyk
f
471.554 408.154 mo
490.136 408.154 li
490.136 408.154 500.885 393.762 500.885 382.104 cv
500.885 370.445 497.242 367.529 490.683 367.529 cv
481.21 367.529 471.737 382.104 471.737 387.932 cv
471.737 393.762 471.554 408.154 471.554 408.154 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
362.967 419.857 mo
344.793 419.857 330.01 434.567 330.01 452.648 cv
330.01 461.392 li
330.01 479.125 351.48 495.275 375.053 495.275 cv
389.757 495.275 399.959 490.997 400.386 490.816 cv
401.052 490.531 li
401.052 419.857 li
362.967 419.857 li
0 0 0 0 cmyk
f
375.053 494.182 mo
352.346 494.182 331.102 478.897 331.102 461.392 cv
331.102 452.648 li
331.102 435.141 345.369 420.95 362.967 420.95 cv
399.959 420.95 li
399.959 489.81 li
399.959 489.81 389.702 494.182 375.053 494.182 cv
.712886 .65359 .642298 .708797 cmyk
f
401.061 419.857 mo
401.061 490.531 li
401.725 490.816 li
402.152 490.997 412.356 495.275 427.059 495.275 cv
450.633 495.275 472.105 479.125 472.105 461.392 cv
472.105 452.648 li
472.105 434.567 457.319 419.857 439.146 419.857 cv
401.061 419.857 li
0 0 0 0 cmyk
f
427.059 494.182 mo
449.768 494.182 471.011 478.897 471.011 461.392 cv
471.011 452.648 li
471.011 435.141 456.744 420.95 439.146 420.95 cv
402.155 420.95 li
402.155 489.81 li
402.155 489.81 412.412 494.182 427.059 494.182 cv
.712886 .65359 .642298 .708797 cmyk
f
331.567 420.151 mo
331.626 422.325 331.529 424.811 331.433 427.217 cv
331.358 429.125 331.286 430.928 331.286 432.614 cv
331.286 440.696 320.642 453.563 311.794 453.563 cv
309.473 453.563 307.791 453.173 306.499 452.334 cv
305.139 454.031 li
309.5 458.314 317.378 460.485 328.552 460.485 cv
337.623 460.485 343.492 443.704 343.492 437.897 cv
343.492 432.113 343.066 420.485 343.061 420.367 cv
343.023 419.347 li
331.534 418.991 li
331.567 420.151 li
0 0 0 0 cmyk
f
342.399 437.897 mo
342.399 443.725 336.568 459.392 328.552 459.392 cv
317.108 459.392 309.855 457.13 305.904 453.251 cv
307.474 454.27 309.443 454.656 311.794 454.656 cv
321.266 454.656 332.379 441.362 332.379 432.614 cv
332.379 428.766 332.767 424.019 332.66 420.12 cv
341.969 420.408 li
341.969 420.408 342.399 432.067 342.399 437.897 cv
.712886 .65359 .642298 .708797 cmyk
f
459.087 419.347 mo
459.05 420.367 li
459.046 420.485 458.622 432.113 458.622 437.897 cv
458.622 443.704 464.49 460.485 473.56 460.485 cv
484.733 460.485 492.611 458.314 496.975 454.031 cv
495.612 452.334 li
494.323 453.173 492.641 453.563 490.318 453.563 cv
481.469 453.563 470.827 440.696 470.827 432.614 cv
470.827 430.928 470.755 429.125 470.679 427.217 cv
470.584 424.811 470.485 422.325 470.547 420.151 cv
470.58 418.991 li
459.087 419.347 li
0 0 0 0 cmyk
f
459.715 437.897 mo
459.715 443.725 465.545 459.392 473.56 459.392 cv
485.006 459.392 492.256 457.13 496.208 453.251 cv
494.639 454.27 492.671 454.656 490.318 454.656 cv
480.845 454.656 469.734 441.362 469.734 432.614 cv
469.734 428.766 469.345 424.019 469.454 420.12 cv
460.142 420.408 li
460.142 420.408 459.715 432.067 459.715 437.897 cv
.712886 .65359 .642298 .708797 cmyk
f
331.227 435.897 mo
341.694 448.285 li
461.964 448.285 li
472.43 435.897 li
331.227 435.897 li
0 0 0 0 cmyk
f
469.967 436.99 mo
333.69 436.99 li
342.31 447.192 li
461.346 447.192 li
469.967 436.99 li
.712886 .65359 .642298 .708797 cmyk
f
318.351 411.122 mo
318.351 435.897 li
478.66 435.897 li
478.66 411.122 li
318.351 411.122 li
0 0 0 0 cmyk
f
477.413 412.214 mo
319.598 412.214 li
319.598 434.803 li
477.413 434.803 li
477.413 412.214 li
.712886 .65359 .642298 .708797 cmyk
f
311.429 411.122 mo
311.1 411.56 li
310.652 412.161 300.135 426.378 300.135 438.264 cv
300.135 449.391 303.408 453.932 311.43 453.932 cv
321.94 453.932 331.468 438.457 331.468 432.436 cv
331.468 426.679 331.649 412.373 331.65 412.229 cv
331.664 411.122 li
311.429 411.122 li
0 0 0 0 cmyk
f
330.557 412.214 mo
311.977 412.214 li
311.977 412.214 301.229 426.606 301.229 438.264 cv
301.229 449.923 304.872 452.839 311.43 452.839 cv
320.903 452.839 330.375 438.264 330.375 432.436 cv
330.375 426.606 330.557 412.214 330.557 412.214 cv
.712886 .65359 .642298 .708797 cmyk
f
490.685 411.122 mo
491.012 411.56 li
491.46 412.161 501.978 426.378 501.978 438.264 cv
501.978 449.391 498.706 453.932 490.683 453.932 cv
480.171 453.932 470.644 438.457 470.644 432.436 cv
470.644 426.679 470.464 412.373 470.461 412.229 cv
470.449 411.122 li
490.685 411.122 li
0 0 0 0 cmyk
f
471.554 412.214 mo
490.136 412.214 li
490.136 412.214 500.885 426.606 500.885 438.264 cv
500.885 449.923 497.242 452.839 490.683 452.839 cv
481.21 452.839 471.737 438.264 471.737 432.436 cv
471.737 426.606 471.554 412.214 471.554 412.214 cv
.712886 .65359 .642298 .708797 cmyk
f
513.292 509.496 mo
288.325 509.496 li
288.325 410.617 li
513.292 410.617 li
513.292 509.496 li
401.061 448.285 mo
401.061 490.531 li
401.725 490.816 li
402.152 490.997 412.356 495.275 427.059 495.275 cv
450.633 495.275 472.105 479.125 472.105 461.392 cv
472.105 460.34 li
472.58 460.435 473.065 460.485 473.56 460.485 cv
484.733 460.485 492.611 458.314 496.975 454.031 cv
496.094 452.935 li
500.212 451.058 501.978 446.438 501.978 438.264 cv
501.978 426.378 491.46 412.161 491.012 411.56 cv
490.685 411.122 li
478.66 411.122 li
318.351 411.122 li
311.429 411.122 li
311.1 411.56 li
310.652 412.161 300.135 426.378 300.135 438.264 cv
300.135 446.438 301.901 451.057 306.018 452.934 cv
305.139 454.031 li
309.5 458.314 317.378 460.485 328.552 460.485 cv
329.048 460.485 329.534 460.435 330.01 460.339 cv
330.01 461.392 li
330.01 479.125 351.48 495.275 375.053 495.275 cv
389.757 495.275 399.959 490.997 400.386 490.816 cv
401.052 490.531 li
401.052 448.285 li
401.061 448.285 li
324.443 446.576 mo
327.44 443.143 329.717 439.113 330.789 435.897 cv
330.794 435.897 li
329.814 439.42 327.449 443.331 324.443 446.576 cv
477.657 446.562 mo
474.928 443.613 472.729 440.115 471.617 436.858 cv
471.653 436.816 li
472.824 439.854 474.944 443.452 477.657 446.562 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 400.809 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
375.053 495.275 mo
351.48 495.275 330.01 479.125 330.01 461.392 cv
330.01 460.339 li
330.38 460.265 330.744 460.163 331.102 460.035 cv
331.102 461.392 li
331.102 478.897 352.346 494.182 375.053 494.182 cv
389.702 494.182 399.959 489.81 399.959 489.81 cv
399.959 448.285 li
401.052 448.285 li
401.052 490.531 li
400.386 490.816 li
399.959 490.997 389.757 495.275 375.053 495.275 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 400.809 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
375.053 494.182 mo
352.346 494.182 331.102 478.897 331.102 461.392 cv
331.102 460.035 li
335.539 458.457 339.015 452.97 341.142 447.632 cv
341.694 448.285 li
399.959 448.285 li
399.959 489.81 li
399.959 489.81 389.702 494.182 375.053 494.182 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 400.809 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
427.059 495.275 mo
412.356 495.275 402.152 490.997 401.725 490.816 cv
401.061 490.531 li
401.061 448.285 li
402.155 448.285 li
402.155 489.81 li
402.155 489.81 412.412 494.182 427.059 494.182 cv
449.768 494.182 471.011 478.897 471.011 461.392 cv
471.011 460.036 li
471.37 460.163 471.734 460.265 472.105 460.34 cv
472.105 461.392 li
472.105 479.125 450.633 495.275 427.059 495.275 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 400.809 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
427.059 494.182 mo
412.412 494.182 402.155 489.81 402.155 489.81 cv
402.155 448.285 li
461.238 448.285 li
463.383 453.411 466.756 458.521 471.011 460.036 cv
471.011 461.392 li
471.011 478.897 449.768 494.182 427.059 494.182 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 400.809 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
328.552 460.485 mo
317.378 460.485 309.5 458.314 305.139 454.031 cv
306.018 452.934 li
307.506 453.612 309.301 453.932 311.43 453.932 cv
316.249 453.932 320.861 450.68 324.443 446.576 cv
327.449 443.331 329.814 439.42 330.794 435.897 cv
331.227 435.897 li
331.756 436.522 li
329.287 444.836 319.935 454.656 311.794 454.656 cv
309.443 454.656 307.474 454.27 305.904 453.251 cv
309.855 457.13 317.108 459.392 328.552 459.392 cv
333.719 459.392 337.977 452.884 340.352 446.697 cv
341.142 447.632 li
339.015 452.97 335.539 458.457 331.102 460.035 cv
330.744 460.163 330.38 460.265 330.01 460.339 cv
329.534 460.435 329.048 460.485 328.552 460.485 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 400.809 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
328.552 459.392 mo
317.108 459.392 309.855 457.13 305.904 453.251 cv
307.474 454.27 309.443 454.656 311.794 454.656 cv
319.935 454.656 329.287 444.836 331.756 436.522 cv
340.352 446.697 li
337.977 452.884 333.719 459.392 328.552 459.392 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 400.809 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
473.56 460.485 mo
473.065 460.485 472.58 460.435 472.105 460.34 cv
471.734 460.265 471.37 460.163 471.011 460.036 cv
466.756 458.521 463.383 453.411 461.238 448.285 cv
461.964 448.285 li
462.26 447.934 li
464.707 453.721 468.738 459.392 473.56 459.392 cv
485.006 459.392 492.256 457.13 496.208 453.251 cv
494.639 454.27 492.671 454.656 490.318 454.656 cv
482.6 454.656 473.794 445.831 470.797 437.83 cv
471.617 436.858 li
472.729 440.115 474.928 443.613 477.657 446.562 cv
481.241 450.672 485.858 453.932 490.683 453.932 cv
492.812 453.932 494.607 453.612 496.094 452.935 cv
496.975 454.031 li
492.611 458.314 484.733 460.485 473.56 460.485 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 400.809 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
473.56 459.392 mo
468.738 459.392 464.707 453.721 462.26 447.934 cv
470.797 437.83 li
473.794 445.831 482.6 454.656 490.318 454.656 cv
492.671 454.656 494.639 454.27 496.208 453.251 cv
492.256 457.13 485.006 459.392 473.56 459.392 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 400.809 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
461.964 448.285 mo
461.238 448.285 li
402.155 448.285 li
401.061 448.285 li
401.052 448.285 li
399.959 448.285 li
341.694 448.285 li
341.142 447.632 li
340.352 446.697 li
331.756 436.522 li
331.227 435.897 li
471.322 435.897 li
471.422 436.197 471.533 436.503 471.653 436.816 cv
471.617 436.858 li
470.797 437.83 li
462.26 447.934 li
461.964 448.285 li
333.69 436.99 mo
342.31 447.192 li
461.346 447.192 li
469.967 436.99 li
333.69 436.99 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 400.809 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
461.346 447.192 mo
342.31 447.192 li
333.69 436.99 li
469.967 436.99 li
461.346 447.192 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 400.809 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
471.322 435.897 mo
331.227 435.897 li
330.794 435.897 li
330.789 435.897 li
330.914 435.52 331.024 435.155 331.115 434.803 cv
470.996 434.803 li
471.088 435.155 471.197 435.52 471.322 435.897 cv
470.461 412.214 mo
331.65 412.214 li
331.664 411.122 li
318.351 411.122 li
478.66 411.122 li
470.449 411.122 li
470.461 412.214 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 400.809 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
470.996 434.803 mo
331.115 434.803 li
331.346 433.917 331.468 433.116 331.468 432.436 cv
331.468 426.679 331.649 412.373 331.65 412.229 cv
331.65 412.214 li
470.461 412.214 li
470.461 412.229 li
470.464 412.373 470.644 426.679 470.644 432.436 cv
470.644 433.116 470.765 433.917 470.996 434.803 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 400.809 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
311.43 453.932 mo
309.301 453.932 307.506 453.612 306.018 452.934 cv
301.901 451.057 300.135 446.438 300.135 438.264 cv
300.135 426.378 310.652 412.161 311.1 411.56 cv
311.429 411.122 li
318.351 411.122 li
331.664 411.122 li
331.65 412.214 li
331.65 412.229 li
331.649 412.373 331.468 426.679 331.468 432.436 cv
331.468 433.116 331.346 433.917 331.115 434.803 cv
331.024 435.155 330.914 435.52 330.789 435.897 cv
329.717 439.113 327.44 443.143 324.443 446.576 cv
320.861 450.68 316.249 453.932 311.43 453.932 cv
311.977 412.214 mo
311.977 412.214 301.229 426.606 301.229 438.264 cv
301.229 449.923 304.872 452.839 311.43 452.839 cv
320.903 452.839 330.375 438.264 330.375 432.436 cv
330.375 426.606 330.557 412.214 330.557 412.214 cv
311.977 412.214 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 400.809 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
311.43 452.839 mo
304.872 452.839 301.229 449.923 301.229 438.264 cv
301.229 426.606 311.977 412.214 311.977 412.214 cv
330.557 412.214 li
330.557 412.214 330.375 426.606 330.375 432.436 cv
330.375 438.264 320.903 452.839 311.43 452.839 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 400.809 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
490.683 453.932 mo
485.858 453.932 481.241 450.672 477.657 446.562 cv
474.944 443.452 472.824 439.854 471.653 436.816 cv
471.533 436.503 471.422 436.197 471.322 435.897 cv
471.197 435.52 471.088 435.155 470.996 434.803 cv
470.765 433.917 470.644 433.116 470.644 432.436 cv
470.644 426.679 470.464 412.373 470.461 412.229 cv
470.461 412.214 li
470.449 411.122 li
478.66 411.122 li
490.685 411.122 li
491.012 411.56 li
491.46 412.161 501.978 426.378 501.978 438.264 cv
501.978 446.438 500.212 451.058 496.094 452.935 cv
494.607 453.612 492.812 453.932 490.683 453.932 cv
471.554 412.214 mo
471.554 412.214 471.737 426.606 471.737 432.436 cv
471.737 438.264 481.21 452.839 490.683 452.839 cv
497.242 452.839 500.885 449.923 500.885 438.264 cv
500.885 426.606 490.136 412.214 490.136 412.214 cv
471.554 412.214 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 400.809 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
490.683 452.839 mo
481.21 452.839 471.737 438.264 471.737 432.436 cv
471.737 426.606 471.554 412.214 471.554 412.214 cv
490.136 412.214 li
490.136 412.214 500.885 426.606 500.885 438.264 cv
500.885 449.923 497.242 452.839 490.683 452.839 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 400.809 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
602.816 371.673 mo
559.442 385.9 li
551.089 360.436 li
594.464 349.557 li
602.816 371.673 li
cp
.712886 .65359 .642298 .708797 cmyk
f
687.69 371.673 mo
731.065 385.9 li
739.419 360.436 li
696.043 349.557 li
687.69 371.673 li
cp
f
729.532 400.767 mo
729.532 402.808 727.662 404.463 725.356 404.463 cv
572.762 404.463 li
570.454 404.463 568.586 402.808 568.586 400.767 cv
568.586 390.592 li
568.586 388.55 570.454 386.897 572.762 386.897 cv
725.356 386.897 li
727.662 386.897 729.532 388.55 729.532 390.592 cv
729.532 400.767 li
cp
f
573.25 388.188 mo
571.425 388.188 569.939 386.697 569.939 384.862 cv
569.939 375.93 li
569.939 374.096 571.425 372.602 573.25 372.602 cv
618.344 372.602 li
619.669 372.602 621.086 373.478 621.086 375.93 cv
621.086 384.862 li
621.086 387.315 619.669 388.188 618.344 388.188 cv
573.25 388.188 li
cp
0 0 0 0 cmyk
f
619.993 384.862 mo
619.993 386.096 619.567 387.096 618.344 387.096 cv
573.25 387.096 li
572.025 387.096 571.032 386.096 571.032 384.862 cv
571.032 375.93 li
571.032 374.695 572.025 373.695 573.25 373.695 cv
618.344 373.695 li
619.567 373.695 619.993 374.695 619.993 375.93 cv
619.993 384.862 li
cp
.712886 .65359 .642298 .708797 cmyk
f
623.448 388.188 mo
622.121 388.188 620.703 387.315 620.703 384.862 cv
620.703 375.93 li
620.703 373.478 622.121 372.602 623.448 372.602 cv
668.54 372.602 li
669.864 372.602 671.283 373.478 671.283 375.93 cv
671.283 384.862 li
671.283 387.315 669.864 388.188 668.54 388.188 cv
623.448 388.188 li
cp
0 0 0 0 cmyk
f
670.189 384.862 mo
670.189 386.096 669.765 387.096 668.54 387.096 cv
623.448 387.096 li
622.223 387.096 621.796 386.096 621.796 384.862 cv
621.796 375.93 li
621.796 374.695 622.223 373.695 623.448 373.695 cv
668.54 373.695 li
669.765 373.695 670.189 374.695 670.189 375.93 cv
670.189 384.862 li
cp
.712886 .65359 .642298 .708797 cmyk
f
673.646 388.188 mo
672.321 388.188 670.902 387.315 670.902 384.862 cv
670.902 375.93 li
670.902 373.478 672.321 372.602 673.646 372.602 cv
718.737 372.602 li
720.563 372.602 722.047 374.096 722.047 375.93 cv
722.047 384.862 li
722.047 386.697 720.563 388.188 718.737 388.188 cv
673.646 388.188 li
cp
0 0 0 0 cmyk
f
720.954 384.862 mo
720.954 386.096 719.963 387.096 718.737 387.096 cv
673.646 387.096 li
672.42 387.096 671.995 386.096 671.995 384.862 cv
671.995 375.93 li
671.995 374.695 672.42 373.695 673.646 373.695 cv
718.737 373.695 li
719.963 373.695 720.954 374.695 720.954 375.93 cv
720.954 384.862 li
cp
.712886 .65359 .642298 .708797 cmyk
f
573.25 373.486 mo
571.425 373.486 569.939 371.992 569.939 370.161 cv
569.939 339.638 li
569.939 337.925 572.84 333.519 576.042 333.519 cv
618.344 333.519 li
619.669 333.519 621.086 334.393 621.086 336.847 cv
621.086 370.161 li
621.086 372.612 619.669 373.486 618.344 373.486 cv
573.25 373.486 li
cp
0 0 0 0 cmyk
f
619.993 370.161 mo
619.993 371.393 619.567 372.393 618.344 372.393 cv
573.25 372.393 li
572.025 372.393 571.032 371.393 571.032 370.161 cv
571.032 339.638 li
571.032 338.405 573.56 334.613 576.042 334.613 cv
618.344 334.613 li
619.567 334.613 619.993 335.613 619.993 336.847 cv
619.993 370.161 li
cp
.712886 .65359 .642298 .708797 cmyk
f
623.448 373.486 mo
622.121 373.486 620.703 372.612 620.703 370.161 cv
620.703 336.847 li
620.703 334.393 622.121 333.519 623.448 333.519 cv
668.54 333.519 li
669.864 333.519 671.283 334.393 671.283 336.847 cv
671.283 370.161 li
671.283 372.612 669.864 373.486 668.54 373.486 cv
623.448 373.486 li
cp
0 0 0 0 cmyk
f
670.189 370.161 mo
670.189 371.393 669.765 372.393 668.54 372.393 cv
623.448 372.393 li
622.223 372.393 621.796 371.393 621.796 370.161 cv
621.796 336.847 li
621.796 335.613 622.223 334.613 623.448 334.613 cv
668.54 334.613 li
669.765 334.613 670.189 335.613 670.189 336.847 cv
670.189 370.161 li
cp
.712886 .65359 .642298 .708797 cmyk
f
673.646 373.486 mo
672.321 373.486 670.902 372.612 670.902 370.161 cv
670.902 336.847 li
670.902 334.393 672.321 333.519 673.646 333.519 cv
715.945 333.519 li
718.79 333.519 722.047 337.863 722.047 339.638 cv
722.047 370.161 li
722.047 371.992 720.563 373.486 718.737 373.486 cv
673.646 373.486 li
cp
0 0 0 0 cmyk
f
720.954 370.161 mo
720.954 371.393 719.963 372.393 718.737 372.393 cv
673.646 372.393 li
672.42 372.393 671.995 371.393 671.995 370.161 cv
671.995 336.847 li
671.995 335.613 672.42 334.613 673.646 334.613 cv
715.945 334.613 li
718.164 334.613 720.954 338.405 720.954 339.638 cv
720.954 370.161 li
cp
.712886 .65359 .642298 .708797 cmyk
f
556.885 410.694 mo
554.108 392.001 li
546.239 390.198 540.634 383.236 540.634 375.064 cv
540.634 365.47 548.438 357.664 558.032 357.664 cv
565.75 357.664 572.594 362.869 574.732 370.196 cv
575.219 370.196 li
575.219 372.462 li
575.363 373.41 575.432 374.263 575.432 375.064 cv
575.432 375.866 575.363 376.719 575.219 377.667 cv
575.219 410.694 li
556.885 410.694 li
0 0 0 0 cmyk
f
573.984 375.064 mo
573.984 374.214 573.898 373.387 573.771 372.573 cv
573.771 371.644 li
573.608 371.644 li
572.041 364.479 565.669 359.112 558.032 359.112 cv
549.222 359.112 542.082 366.253 542.082 375.064 cv
542.082 382.973 547.841 389.519 555.391 390.779 cv
558.134 409.246 li
573.771 409.246 li
573.771 377.556 li
573.898 376.742 573.984 375.914 573.984 375.064 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
715.601 410.694 mo
715.601 377.667 li
715.457 376.719 715.387 375.866 715.387 375.064 cv
715.387 374.263 715.457 373.41 715.601 372.462 cv
715.601 370.196 li
716.088 370.196 li
718.226 362.869 725.068 357.664 732.787 357.664 cv
742.38 357.664 750.186 365.47 750.186 375.064 cv
750.186 383.235 744.581 390.196 736.711 392.001 cv
733.935 410.694 li
715.601 410.694 li
0 0 0 0 cmyk
f
748.738 375.064 mo
748.738 366.253 741.597 359.112 732.787 359.112 cv
725.151 359.112 718.779 364.479 717.212 371.644 cv
717.049 371.644 li
717.049 372.573 li
716.922 373.387 716.836 374.214 716.836 375.064 cv
716.836 375.914 716.922 376.742 717.049 377.556 cv
717.049 409.246 li
732.686 409.246 li
735.429 390.779 li
742.978 389.518 748.738 382.972 748.738 375.064 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
602.815 449.419 mo
559.442 435.193 li
551.089 460.656 li
594.464 471.535 li
602.815 449.419 li
f
687.69 449.419 mo
731.065 435.193 li
739.419 460.656 li
696.044 471.535 li
687.69 449.419 li
f
729.532 420.325 mo
729.532 418.284 727.662 416.629 725.356 416.629 cv
572.762 416.629 li
570.454 416.629 568.585 418.284 568.585 420.325 cv
568.585 430.5 li
568.585 432.542 570.454 434.195 572.762 434.195 cv
725.356 434.195 li
727.662 434.195 729.532 432.542 729.532 430.5 cv
729.532 420.325 li
f
573.25 432.904 mo
571.425 432.904 569.939 434.395 569.939 436.23 cv
569.939 445.162 li
569.939 446.997 571.425 448.49 573.25 448.49 cv
618.344 448.49 li
619.669 448.49 621.086 447.615 621.086 445.162 cv
621.086 436.23 li
621.086 433.777 619.669 432.904 618.344 432.904 cv
573.25 432.904 li
0 0 0 0 cmyk
f
619.993 436.23 mo
619.993 434.996 619.567 433.996 618.344 433.996 cv
573.25 433.996 li
572.025 433.996 571.032 434.996 571.032 436.23 cv
571.032 445.162 li
571.032 446.397 572.025 447.397 573.25 447.397 cv
618.344 447.397 li
619.567 447.397 619.993 446.397 619.993 445.162 cv
619.993 436.23 li
.712886 .65359 .642298 .708797 cmyk
f
623.448 432.904 mo
622.121 432.904 620.703 433.777 620.703 436.23 cv
620.703 445.162 li
620.703 447.615 622.121 448.49 623.448 448.49 cv
668.54 448.49 li
669.864 448.49 671.283 447.615 671.283 445.162 cv
671.283 436.23 li
671.283 433.777 669.864 432.904 668.54 432.904 cv
623.448 432.904 li
0 0 0 0 cmyk
f
670.189 436.23 mo
670.189 434.996 669.765 433.996 668.54 433.996 cv
623.448 433.996 li
622.223 433.996 621.796 434.996 621.796 436.23 cv
621.796 445.162 li
621.796 446.397 622.223 447.397 623.448 447.397 cv
668.54 447.397 li
669.765 447.397 670.189 446.397 670.189 445.162 cv
670.189 436.23 li
.712886 .65359 .642298 .708797 cmyk
f
673.646 432.904 mo
672.321 432.904 670.902 433.777 670.902 436.23 cv
670.902 445.162 li
670.902 447.615 672.321 448.49 673.646 448.49 cv
718.737 448.49 li
720.563 448.49 722.047 446.997 722.047 445.162 cv
722.047 436.23 li
722.047 434.395 720.563 432.904 718.737 432.904 cv
673.646 432.904 li
0 0 0 0 cmyk
f
720.954 436.23 mo
720.954 434.996 719.963 433.996 718.737 433.996 cv
673.646 433.996 li
672.419 433.996 671.995 434.996 671.995 436.23 cv
671.995 445.162 li
671.995 446.397 672.419 447.397 673.646 447.397 cv
718.737 447.397 li
719.963 447.397 720.954 446.397 720.954 445.162 cv
720.954 436.23 li
.712886 .65359 .642298 .708797 cmyk
f
573.25 447.606 mo
571.425 447.606 569.939 449.1 569.939 450.931 cv
569.939 481.454 li
569.939 483.167 572.84 487.573 576.042 487.573 cv
618.344 487.573 li
619.669 487.573 621.086 486.699 621.086 484.245 cv
621.086 450.931 li
621.086 448.48 619.669 447.606 618.344 447.606 cv
573.25 447.606 li
0 0 0 0 cmyk
f
619.993 450.931 mo
619.993 449.699 619.567 448.699 618.344 448.699 cv
573.25 448.699 li
572.025 448.699 571.032 449.699 571.032 450.931 cv
571.032 481.454 li
571.032 482.688 573.56 486.479 576.042 486.479 cv
618.344 486.479 li
619.567 486.479 619.993 485.479 619.993 484.245 cv
619.993 450.931 li
.712886 .65359 .642298 .708797 cmyk
f
623.448 447.606 mo
622.121 447.606 620.703 448.48 620.703 450.931 cv
620.703 484.245 li
620.703 486.699 622.121 487.573 623.448 487.573 cv
668.54 487.573 li
669.864 487.573 671.283 486.699 671.283 484.245 cv
671.283 450.931 li
671.283 448.48 669.864 447.606 668.54 447.606 cv
623.448 447.606 li
0 0 0 0 cmyk
f
670.189 450.931 mo
670.189 449.699 669.765 448.699 668.54 448.699 cv
623.448 448.699 li
622.223 448.699 621.796 449.699 621.796 450.931 cv
621.796 484.245 li
621.796 485.479 622.223 486.479 623.448 486.479 cv
668.54 486.479 li
669.765 486.479 670.189 485.479 670.189 484.245 cv
670.189 450.931 li
.712886 .65359 .642298 .708797 cmyk
f
673.646 447.606 mo
672.321 447.606 670.902 448.48 670.902 450.931 cv
670.902 484.245 li
670.902 486.699 672.321 487.573 673.646 487.573 cv
715.945 487.573 li
718.79 487.573 722.047 483.229 722.047 481.454 cv
722.047 450.931 li
722.047 449.1 720.563 447.606 718.737 447.606 cv
673.646 447.606 li
0 0 0 0 cmyk
f
720.954 450.931 mo
720.954 449.699 719.963 448.699 718.737 448.699 cv
673.646 448.699 li
672.419 448.699 671.995 449.699 671.995 450.931 cv
671.995 484.245 li
671.995 485.479 672.419 486.479 673.646 486.479 cv
715.945 486.479 li
718.164 486.479 720.954 482.688 720.954 481.454 cv
720.954 450.931 li
.712886 .65359 .642298 .708797 cmyk
f
573.984 446.028 mo
573.984 437.218 566.844 430.077 558.032 430.077 cv
549.222 430.077 542.082 437.218 542.082 446.028 cv
542.082 454.839 549.222 461.98 558.032 461.98 cv
566.844 461.98 573.984 454.839 573.984 446.028 cv
f
573.77 411.846 mo
558.133 411.846 li
552.551 449.447 li
573.77 449.447 li
573.77 411.846 li
f
716.836 446.028 mo
716.836 437.218 723.975 430.077 732.787 430.077 cv
741.596 430.077 748.738 437.218 748.738 446.028 cv
748.738 454.839 741.596 461.98 732.787 461.98 cv
723.975 461.98 716.836 454.839 716.836 446.028 cv
f
717.049 411.846 mo
732.686 411.846 li
738.269 449.447 li
717.049 449.447 li
717.049 411.846 li
f
755.388 509.496 mo
532.855 509.496 li
532.855 410.617 li
556.873 410.617 li
556.885 410.694 li
575.219 410.694 li
575.219 410.617 li
715.601 410.617 li
715.601 410.694 li
733.935 410.694 li
733.947 410.617 li
755.388 410.617 li
755.388 509.496 li
671.092 485.644 mo
671.522 487.041 672.612 487.573 673.646 487.573 cv
715.945 487.573 li
718.79 487.573 722.047 483.229 722.047 481.454 cv
722.047 465.013 li
734.506 461.888 li
736.001 461.728 737.434 461.362 738.777 460.817 cv
739.419 460.656 li
739.385 460.555 li
744.902 458.045 748.738 452.485 748.738 446.028 cv
748.738 438.117 742.979 431.551 735.425 430.294 cv
732.686 411.846 li
717.049 411.846 li
717.049 416.629 li
573.77 416.629 li
573.77 411.846 li
558.133 411.846 li
555.395 430.294 li
547.84 431.55 542.082 438.116 542.082 446.028 cv
542.082 452.379 545.792 457.863 551.163 460.43 cv
551.089 460.656 li
552.636 461.044 li
553.61 461.395 554.629 461.653 555.681 461.808 cv
569.939 465.384 li
569.939 481.454 li
569.939 483.167 572.84 487.573 576.042 487.573 cv
618.344 487.573 li
619.376 487.573 620.464 487.042 620.894 485.648 cv
621.326 487.042 622.415 487.573 623.448 487.573 cv
668.54 487.573 li
669.572 487.573 670.662 487.041 671.092 485.644 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
575.219 410.694 mo
556.885 410.694 li
556.873 410.617 li
575.219 410.617 li
575.219 410.694 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
733.935 410.694 mo
715.601 410.694 li
715.601 410.617 li
733.947 410.617 li
733.935 410.694 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
671.092 449.534 mo
670.878 448.837 670.498 448.355 670.044 448.048 cv
670.498 447.74 670.878 447.258 671.092 446.56 cv
671.307 447.258 671.686 447.74 672.141 448.048 cv
671.686 448.355 671.307 448.837 671.092 449.534 cv
620.894 449.529 mo
620.68 448.835 620.301 448.354 619.848 448.048 cv
620.301 447.741 620.68 447.26 620.894 446.565 cv
621.109 447.26 621.488 447.741 621.942 448.048 cv
621.488 448.354 621.109 448.835 620.894 449.529 cv
671.092 434.832 mo
671.019 434.595 670.928 434.384 670.821 434.195 cv
671.364 434.195 li
671.257 434.384 671.165 434.595 671.092 434.832 cv
620.894 434.827 mo
620.822 434.593 620.731 434.382 620.625 434.195 cv
621.165 434.195 li
621.058 434.382 620.967 434.593 620.894 434.827 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
569.939 465.384 mo
555.681 461.808 li
556.448 461.921 557.233 461.98 558.032 461.98 cv
562.766 461.98 567.018 459.919 569.939 456.645 cv
569.939 465.384 li
552.636 461.044 mo
551.089 460.656 li
551.163 460.43 li
551.641 460.658 552.132 460.863 552.636 461.044 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
722.047 465.013 mo
722.047 457.824 li
724.881 460.406 728.65 461.98 732.787 461.98 cv
733.367 461.98 733.941 461.949 734.506 461.888 cv
722.047 465.013 li
738.777 460.817 mo
738.982 460.734 739.185 460.647 739.385 460.555 cv
739.419 460.656 li
738.777 460.817 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
671.364 434.195 mo
670.821 434.195 li
670.295 433.27 669.398 432.904 668.54 432.904 cv
623.448 432.904 li
622.589 432.904 621.691 433.27 621.165 434.195 cv
620.625 434.195 li
620.099 433.27 619.202 432.904 618.344 432.904 cv
573.77 432.904 li
573.77 416.629 li
717.049 416.629 li
717.049 432.904 li
673.646 432.904 li
672.787 432.904 671.89 433.27 671.364 434.195 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
619.848 448.048 mo
619.392 447.739 618.861 447.606 618.344 447.606 cv
573.907 447.606 li
573.914 447.537 573.92 447.466 573.926 447.397 cv
618.344 447.397 li
619.567 447.397 619.993 446.397 619.993 445.162 cv
619.993 436.23 li
619.993 434.996 619.567 433.996 618.344 433.996 cv
573.77 433.996 li
573.77 432.904 li
618.344 432.904 li
619.202 432.904 620.099 433.27 620.625 434.195 cv
620.731 434.382 620.822 434.593 620.894 434.827 cv
620.772 435.223 620.703 435.688 620.703 436.23 cv
620.703 445.162 li
620.703 445.704 620.772 446.17 620.894 446.565 cv
620.68 447.26 620.301 447.741 619.848 448.048 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
618.344 447.397 mo
573.926 447.397 li
573.965 446.945 573.984 446.489 573.984 446.028 cv
573.984 445.136 573.911 444.262 573.77 443.41 cv
573.77 433.996 li
618.344 433.996 li
619.567 433.996 619.993 434.996 619.993 436.23 cv
619.993 445.162 li
619.993 446.397 619.567 447.397 618.344 447.397 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
670.044 448.048 mo
669.588 447.739 669.057 447.606 668.54 447.606 cv
623.448 447.606 li
622.93 447.606 622.398 447.739 621.942 448.048 cv
621.488 447.741 621.109 447.26 620.894 446.565 cv
620.772 446.17 620.703 445.704 620.703 445.162 cv
620.703 436.23 li
620.703 435.688 620.772 435.223 620.894 434.827 cv
620.967 434.593 621.058 434.382 621.165 434.195 cv
621.691 433.27 622.589 432.904 623.448 432.904 cv
668.54 432.904 li
669.398 432.904 670.295 433.27 670.821 434.195 cv
670.928 434.384 671.019 434.595 671.092 434.832 cv
670.971 435.226 670.902 435.69 670.902 436.23 cv
670.902 445.162 li
670.902 445.702 670.971 446.166 671.092 446.56 cv
670.878 447.258 670.498 447.74 670.044 448.048 cv
623.448 433.996 mo
622.223 433.996 621.796 434.996 621.796 436.23 cv
621.796 445.162 li
621.796 446.397 622.223 447.397 623.448 447.397 cv
668.54 447.397 li
669.765 447.397 670.189 446.397 670.189 445.162 cv
670.189 436.23 li
670.189 434.996 669.765 433.996 668.54 433.996 cv
623.448 433.996 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
668.54 447.397 mo
623.448 447.397 li
622.223 447.397 621.796 446.397 621.796 445.162 cv
621.796 436.23 li
621.796 434.996 622.223 433.996 623.448 433.996 cv
668.54 433.996 li
669.765 433.996 670.189 434.996 670.189 436.23 cv
670.189 445.162 li
670.189 446.397 669.765 447.397 668.54 447.397 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
672.141 448.048 mo
671.686 447.74 671.307 447.258 671.092 446.56 cv
670.971 446.166 670.902 445.702 670.902 445.162 cv
670.902 436.23 li
670.902 435.69 670.971 435.226 671.092 434.832 cv
671.165 434.595 671.257 434.384 671.364 434.195 cv
671.89 433.27 672.787 432.904 673.646 432.904 cv
717.049 432.904 li
717.049 433.996 li
673.646 433.996 li
672.419 433.996 671.995 434.996 671.995 436.23 cv
671.995 445.162 li
671.995 446.397 672.419 447.397 673.646 447.397 cv
716.894 447.397 li
716.9 447.466 716.906 447.537 716.913 447.606 cv
673.646 447.606 li
673.128 447.606 672.597 447.739 672.141 448.048 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
716.894 447.397 mo
673.646 447.397 li
672.419 447.397 671.995 446.397 671.995 445.162 cv
671.995 436.23 li
671.995 434.996 672.419 433.996 673.646 433.996 cv
717.049 433.996 li
717.049 443.411 li
716.909 444.262 716.836 445.137 716.836 446.028 cv
716.836 446.489 716.855 446.945 716.894 447.397 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
618.344 487.573 mo
576.042 487.573 li
572.84 487.573 569.939 483.167 569.939 481.454 cv
569.939 465.384 li
569.939 456.645 li
570.328 456.209 570.693 455.752 571.032 455.276 cv
571.032 481.454 li
571.032 482.688 573.56 486.479 576.042 486.479 cv
618.344 486.479 li
619.567 486.479 619.993 485.479 619.993 484.245 cv
619.993 450.931 li
619.993 449.699 619.567 448.699 618.344 448.699 cv
573.77 448.699 li
573.77 448.646 li
573.827 448.302 573.873 447.956 573.907 447.606 cv
618.344 447.606 li
618.861 447.606 619.392 447.739 619.848 448.048 cv
620.301 448.354 620.68 448.835 620.894 449.529 cv
620.772 449.924 620.703 450.389 620.703 450.931 cv
620.703 484.245 li
620.703 484.787 620.772 485.253 620.894 485.648 cv
620.464 487.042 619.376 487.573 618.344 487.573 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
618.344 486.479 mo
576.042 486.479 li
573.56 486.479 571.032 482.688 571.032 481.454 cv
571.032 455.276 li
572.258 453.555 573.151 451.581 573.617 449.447 cv
573.77 449.447 li
573.77 448.699 li
618.344 448.699 li
619.567 448.699 619.993 449.699 619.993 450.931 cv
619.993 484.245 li
619.993 485.479 619.567 486.479 618.344 486.479 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
668.54 487.573 mo
623.448 487.573 li
622.415 487.573 621.326 487.042 620.894 485.648 cv
620.772 485.253 620.703 484.787 620.703 484.245 cv
620.703 450.931 li
620.703 450.389 620.772 449.924 620.894 449.529 cv
621.109 448.835 621.488 448.354 621.942 448.048 cv
622.398 447.739 622.93 447.606 623.448 447.606 cv
668.54 447.606 li
669.057 447.606 669.588 447.739 670.044 448.048 cv
670.498 448.355 670.878 448.837 671.092 449.534 cv
670.971 449.928 670.902 450.391 670.902 450.931 cv
670.902 484.245 li
670.902 484.785 670.971 485.249 671.092 485.644 cv
670.662 487.041 669.572 487.573 668.54 487.573 cv
623.448 448.699 mo
622.223 448.699 621.796 449.699 621.796 450.931 cv
621.796 484.245 li
621.796 485.479 622.223 486.479 623.448 486.479 cv
668.54 486.479 li
669.765 486.479 670.189 485.479 670.189 484.245 cv
670.189 450.931 li
670.189 449.699 669.765 448.699 668.54 448.699 cv
623.448 448.699 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
668.54 486.479 mo
623.448 486.479 li
622.223 486.479 621.796 485.479 621.796 484.245 cv
621.796 450.931 li
621.796 449.699 622.223 448.699 623.448 448.699 cv
668.54 448.699 li
669.765 448.699 670.189 449.699 670.189 450.931 cv
670.189 484.245 li
670.189 485.479 669.765 486.479 668.54 486.479 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
715.945 487.573 mo
673.646 487.573 li
672.612 487.573 671.522 487.041 671.092 485.644 cv
670.971 485.249 670.902 484.785 670.902 484.245 cv
670.902 450.931 li
670.902 450.391 670.971 449.928 671.092 449.534 cv
671.307 448.837 671.686 448.355 672.141 448.048 cv
672.597 447.739 673.128 447.606 673.646 447.606 cv
716.913 447.606 li
716.947 447.956 716.993 448.302 717.049 448.644 cv
717.049 448.699 li
673.646 448.699 li
672.419 448.699 671.995 449.699 671.995 450.931 cv
671.995 484.245 li
671.995 485.479 672.419 486.479 673.646 486.479 cv
715.945 486.479 li
718.164 486.479 720.954 482.688 720.954 481.454 cv
720.954 456.727 li
721.301 457.11 721.666 457.476 722.047 457.824 cv
722.047 465.013 li
722.047 481.454 li
722.047 483.229 718.79 487.573 715.945 487.573 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/0 /Gradient get_res exec grestore
np
715.945 486.479 mo
673.646 486.479 li
672.419 486.479 671.995 485.479 671.995 484.245 cv
671.995 450.931 li
671.995 449.699 672.419 448.699 673.646 448.699 cv
717.049 448.699 li
717.049 449.447 li
717.203 449.447 li
717.806 452.21 719.124 454.704 720.954 456.727 cv
720.954 481.454 li
720.954 482.688 718.164 486.479 715.945 486.479 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
558.032 461.98 mo
557.233 461.98 556.448 461.921 555.681 461.808 cv
554.629 461.653 553.61 461.395 552.636 461.044 cv
552.132 460.863 551.641 460.658 551.163 460.43 cv
545.792 457.863 542.082 452.379 542.082 446.028 cv
542.082 438.116 547.84 431.55 555.395 430.294 cv
552.551 449.447 li
573.617 449.447 li
573.151 451.581 572.258 453.555 571.032 455.276 cv
570.693 455.752 570.328 456.209 569.939 456.645 cv
567.018 459.919 562.766 461.98 558.032 461.98 cv
573.77 448.646 mo
573.77 443.41 li
573.911 444.262 573.984 445.136 573.984 446.028 cv
573.984 446.489 573.965 446.945 573.926 447.397 cv
573.92 447.466 573.914 447.537 573.907 447.606 cv
573.873 447.956 573.827 448.302 573.77 448.646 cv
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
573.77 449.447 mo
573.617 449.447 li
552.551 449.447 li
555.395 430.294 li
558.133 411.846 li
573.77 411.846 li
573.77 416.629 li
573.77 432.904 li
573.77 433.996 li
573.77 443.41 li
573.77 448.646 li
573.77 448.699 li
573.77 449.447 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
732.787 461.98 mo
728.65 461.98 724.881 460.406 722.047 457.824 cv
721.666 457.476 721.301 457.11 720.954 456.727 cv
719.124 454.704 717.806 452.21 717.203 449.447 cv
738.269 449.447 li
735.425 430.294 li
742.979 431.551 748.738 438.117 748.738 446.028 cv
748.738 452.485 744.902 458.045 739.385 460.555 cv
739.185 460.647 738.982 460.734 738.777 460.817 cv
737.434 461.362 736.001 461.728 734.506 461.888 cv
733.941 461.949 733.367 461.98 732.787 461.98 cv
717.049 448.644 mo
716.993 448.302 716.947 447.956 716.913 447.606 cv
716.906 447.537 716.9 447.466 716.894 447.397 cv
716.855 446.945 716.836 446.489 716.836 446.028 cv
716.836 445.137 716.909 444.262 717.049 443.411 cv
717.049 448.644 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
738.269 449.447 mo
717.203 449.447 li
717.049 449.447 li
717.049 448.699 li
717.049 448.644 li
717.049 443.411 li
717.049 433.996 li
717.049 432.904 li
717.049 416.629 li
717.049 411.846 li
732.686 411.846 li
735.425 430.294 li
738.269 449.447 li
gsave
[6.05464e-15 -98.8797 98.8797 6.05464e-15 644.121 509.496 ]ct
clp
/1 /Gradient get_res exec grestore
np
235.145 645.984 mo
235.145 650.069 231.681 653.38 227.406 653.38 cv
88.2332 653.38 li
83.9591 653.38 80.4946 650.069 80.4946 645.984 cv
80.4946 642.536 li
80.4946 638.453 83.9591 635.141 88.2332 635.141 cv
227.406 635.141 li
231.681 635.141 235.145 638.453 235.145 642.536 cv
235.145 645.984 li
cp
.712886 .65359 .642298 .708797 cmyk
f
88.1342 618.966 mo
85.5863 618.966 84.679 617.553 84.679 616.234 cv
84.679 582.35 li
84.679 580.461 87.9058 576.339 91.1071 576.339 cv
153.872 576.339 li
155.63 576.339 156.724 577.595 156.724 579.618 cv
156.724 616.234 li
156.724 618.047 155.764 618.966 153.872 618.966 cv
88.1342 618.966 li
cp
0 0 0 0 cmyk
f
155.63 616.234 mo
155.63 617.44 155.176 617.873 153.872 617.873 cv
88.1342 617.873 li
86.8295 617.873 85.7723 617.44 85.7723 616.234 cv
85.7723 582.35 li
85.7723 581.142 88.4631 577.431 91.1071 577.431 cv
153.872 577.431 li
155.176 577.431 155.63 578.41 155.63 579.618 cv
155.63 616.234 li
cp
.712886 .65359 .642298 .708797 cmyk
f
159.48 618.966 mo
157.588 618.966 156.63 618.047 156.63 616.234 cv
156.63 579.618 li
156.63 577.595 157.722 576.339 159.48 576.339 cv
222.245 576.339 li
225.447 576.339 228.673 580.461 228.673 582.35 cv
228.673 616.234 li
228.673 617.553 227.766 618.966 225.218 618.966 cv
159.48 618.966 li
cp
0 0 0 0 cmyk
f
157.722 616.234 mo
157.722 617.44 158.176 617.873 159.48 617.873 cv
225.218 617.873 li
226.523 617.873 227.58 617.44 227.58 616.234 cv
227.58 582.35 li
227.58 581.142 224.889 577.431 222.245 577.431 cv
159.48 577.431 li
158.176 577.431 157.722 578.41 157.722 579.618 cv
157.722 616.234 li
cp
.712886 .65359 .642298 .708797 cmyk
f
92.2478 634.798 mo
87.6244 634.798 84.9555 631.787 84.9555 628.083 cv
84.9555 625.461 li
84.9555 621.759 87.6244 618.746 92.2478 618.746 cv
223.391 618.746 li
228.015 618.746 230.683 621.759 230.683 625.461 cv
230.683 628.083 li
230.683 631.787 228.015 634.798 223.391 634.798 cv
92.2478 634.798 li
cp
0 0 0 0 cmyk
f
229.591 628.083 mo
229.591 631.188 227.419 633.705 223.391 633.705 cv
92.2478 633.705 li
88.2212 633.705 86.0488 631.188 86.0488 628.083 cv
86.0488 625.461 li
86.0488 622.356 88.2212 619.839 92.2478 619.839 cv
223.391 619.839 li
227.419 619.839 229.591 622.356 229.591 625.461 cv
229.591 628.083 li
cp
.712886 .65359 .642298 .708797 cmyk
f
70.6911 661.675 mo
70.6911 657.576 li
69.9557 657.576 li
66.1984 657.576 63.1414 653.984 63.1414 649.57 cv
63.1414 606.943 li
63.1414 602.529 66.1984 598.936 69.9557 598.936 cv
83.8169 598.936 li
87.5742 598.936 90.6305 602.529 90.6305 606.943 cv
90.6305 649.57 li
90.6305 653.984 87.5742 657.576 83.8169 657.576 cv
83.0815 657.576 li
83.0815 661.675 li
70.6911 661.675 li
0 0 0 0 cmyk
f
83.8169 600.384 mo
69.9557 600.384 li
66.9926 600.384 64.5896 603.321 64.5896 606.943 cv
64.5896 649.57 li
64.5896 653.192 66.9926 656.128 69.9557 656.128 cv
72.1394 656.128 li
72.1394 660.227 li
81.6332 660.227 li
81.6332 656.128 li
83.8169 656.128 li
86.78 656.128 89.1822 653.192 89.1822 649.57 cv
89.1822 606.943 li
89.1822 603.321 86.78 600.384 83.8169 600.384 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
230.179 661.675 mo
230.179 657.576 li
229.443 657.576 li
225.686 657.576 222.63 653.984 222.63 649.57 cv
222.63 606.943 li
222.63 602.529 225.686 598.936 229.443 598.936 cv
243.304 598.936 li
247.062 598.936 250.12 602.529 250.12 606.943 cv
250.12 649.57 li
250.12 653.984 247.062 657.576 243.304 657.576 cv
242.569 657.576 li
242.569 661.675 li
230.179 661.675 li
0 0 0 0 cmyk
f
243.304 600.384 mo
229.443 600.384 li
226.48 600.384 224.078 603.321 224.078 606.943 cv
224.078 649.57 li
224.078 653.192 226.48 656.128 229.443 656.128 cv
231.627 656.128 li
231.627 660.227 li
241.12 660.227 li
241.12 656.128 li
243.304 656.128 li
246.268 656.128 248.671 653.192 248.671 649.57 cv
248.671 606.943 li
248.671 603.321 246.268 600.384 243.304 600.384 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
235.145 677.626 mo
235.145 673.541 231.681 670.231 227.406 670.231 cv
88.2333 670.231 li
83.9591 670.231 80.4946 673.541 80.4946 677.626 cv
80.4946 681.074 li
80.4946 685.157 83.9591 688.47 88.2333 688.47 cv
227.406 688.47 li
231.681 688.47 235.145 685.157 235.145 681.074 cv
235.145 677.626 li
f
88.1341 704.644 mo
85.5863 704.644 84.6791 706.057 84.6791 707.377 cv
84.6791 741.26 li
84.6791 743.15 87.9058 747.271 91.1072 747.271 cv
153.872 747.271 li
155.63 747.271 156.724 746.015 156.724 743.993 cv
156.724 707.377 li
156.724 705.564 155.764 704.644 153.872 704.644 cv
88.1341 704.644 li
0 0 0 0 cmyk
f
155.63 707.377 mo
155.63 706.17 155.176 705.738 153.872 705.738 cv
88.1341 705.738 li
86.8296 705.738 85.7723 706.17 85.7723 707.377 cv
85.7723 741.26 li
85.7723 742.468 88.463 746.179 91.1072 746.179 cv
153.872 746.179 li
155.176 746.179 155.63 745.201 155.63 743.993 cv
155.63 707.377 li
.712886 .65359 .642298 .708797 cmyk
f
159.48 704.644 mo
157.589 704.644 156.63 705.564 156.63 707.377 cv
156.63 743.993 li
156.63 746.015 157.722 747.271 159.48 747.271 cv
222.245 747.271 li
225.447 747.271 228.673 743.15 228.673 741.26 cv
228.673 707.377 li
228.673 706.057 227.766 704.644 225.218 704.644 cv
159.48 704.644 li
0 0 0 0 cmyk
f
157.722 707.377 mo
157.722 706.17 158.176 705.738 159.48 705.738 cv
225.218 705.738 li
226.523 705.738 227.58 706.17 227.58 707.377 cv
227.58 741.26 li
227.58 742.468 224.889 746.179 222.245 746.179 cv
159.48 746.179 li
158.176 746.179 157.722 745.201 157.722 743.993 cv
157.722 707.377 li
.712886 .65359 .642298 .708797 cmyk
f
92.2477 688.812 mo
87.6245 688.812 84.9554 691.823 84.9554 695.527 cv
84.9554 698.15 li
84.9554 701.851 87.6245 704.865 92.2477 704.865 cv
223.391 704.865 li
228.015 704.865 230.683 701.851 230.683 698.15 cv
230.683 695.527 li
230.683 691.823 228.015 688.812 223.391 688.812 cv
92.2477 688.812 li
0 0 0 0 cmyk
f
229.591 695.527 mo
229.591 692.423 227.419 689.905 223.391 689.905 cv
92.2477 689.905 li
88.2213 689.905 86.0487 692.423 86.0487 695.527 cv
86.0487 698.15 li
86.0487 701.254 88.2213 703.772 92.2477 703.772 cv
223.391 703.772 li
227.419 703.772 229.591 701.254 229.591 698.15 cv
229.591 695.527 li
.712886 .65359 .642298 .708797 cmyk
f
70.6911 661.935 mo
70.6911 666.034 li
69.9557 666.034 li
66.1984 666.034 63.1414 669.626 63.1414 674.041 cv
63.1414 716.668 li
63.1414 721.082 66.1984 724.674 69.9557 724.674 cv
83.8169 724.674 li
87.5742 724.674 90.6305 721.082 90.6305 716.668 cv
90.6305 674.041 li
90.6305 669.626 87.5742 666.034 83.8169 666.034 cv
83.0815 666.034 li
83.0815 661.935 li
70.6911 661.935 li
0 0 0 0 cmyk
f
83.8169 723.226 mo
69.9557 723.226 li
66.9927 723.226 64.5896 720.29 64.5896 716.668 cv
64.5896 674.041 li
64.5896 670.419 66.9927 667.482 69.9557 667.482 cv
72.1395 667.482 li
72.1395 663.384 li
81.6331 663.384 li
81.6331 667.482 li
83.8169 667.482 li
86.7799 667.482 89.1822 670.419 89.1822 674.041 cv
89.1822 716.668 li
89.1822 720.29 86.7799 723.226 83.8169 723.226 cv
.712886 .65359 .642298 .708797 cmyk
f
230.179 661.935 mo
230.179 666.034 li
229.443 666.034 li
225.686 666.034 222.63 669.626 222.63 674.041 cv
222.63 716.668 li
222.63 721.082 225.686 724.674 229.443 724.674 cv
243.304 724.674 li
247.062 724.674 250.12 721.082 250.12 716.668 cv
250.12 674.041 li
250.12 669.626 247.062 666.034 243.304 666.034 cv
242.569 666.034 li
242.569 661.935 li
230.179 661.935 li
0 0 0 0 cmyk
f
243.304 723.226 mo
229.443 723.226 li
226.48 723.226 224.078 720.29 224.078 716.668 cv
224.078 674.041 li
224.078 670.419 226.48 667.482 229.443 667.482 cv
231.627 667.482 li
231.627 663.384 li
241.12 663.384 li
241.12 667.482 li
243.304 667.482 li
246.268 667.482 248.672 670.419 248.672 674.041 cv
248.672 716.668 li
248.672 720.29 246.268 723.226 243.304 723.226 cv
.712886 .65359 .642298 .708797 cmyk
f
275.772 753.5 mo
43.5647 753.5 li
43.5647 661.862 li
275.772 661.862 li
275.772 753.5 li
156.677 744.69 mo
156.903 746.3 157.934 747.271 159.48 747.271 cv
222.245 747.271 li
225.447 747.271 228.673 743.15 228.673 741.26 cv
228.673 724.623 li
228.926 724.657 229.183 724.674 229.443 724.674 cv
243.304 724.674 li
247.062 724.674 250.12 721.082 250.12 716.668 cv
250.12 674.041 li
250.12 669.626 247.062 666.034 243.304 666.034 cv
242.569 666.034 li
242.569 661.935 li
230.179 661.935 li
230.179 666.034 li
229.443 666.034 li
226.859 666.034 224.607 667.733 223.452 670.231 cv
89.8083 670.231 li
88.6535 667.733 86.4009 666.034 83.8169 666.034 cv
83.0815 666.034 li
83.0815 661.935 li
70.6911 661.935 li
70.6911 666.034 li
69.9557 666.034 li
66.1984 666.034 63.1414 669.626 63.1414 674.041 cv
63.1414 716.668 li
63.1414 721.082 66.1984 724.674 69.9557 724.674 cv
83.8169 724.674 li
84.1088 724.674 84.3967 724.652 84.6791 724.61 cv
84.6791 741.26 li
84.6791 743.15 87.9058 747.271 91.1072 747.271 cv
153.872 747.271 li
155.418 747.271 156.45 746.3 156.677 744.69 cv
156.677 706.725 mo
156.532 705.792 156.056 705.17 155.255 704.865 cv
158.098 704.865 li
157.296 705.17 156.821 705.792 156.677 706.725 cv
90.6305 688.945 mo
90.6305 688.47 li
222.63 688.47 li
222.63 688.812 li
92.2477 688.812 li
91.6786 688.812 91.1391 688.858 90.6305 688.945 cv
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 159.668 753.5 ]ct
clp
/0 /Gradient get_res exec grestore
np
222.63 688.47 mo
90.6305 688.47 li
90.6305 674.041 li
90.6305 672.662 90.3326 671.364 89.8083 670.231 cv
223.452 670.231 li
222.928 671.364 222.63 672.662 222.63 674.041 cv
222.63 688.47 li
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 159.668 753.5 ]ct
clp
/1 /Gradient get_res exec grestore
np
153.872 747.271 mo
91.1072 747.271 li
87.9058 747.271 84.6791 743.15 84.6791 741.26 cv
84.6791 724.61 li
85.0537 724.555 85.4191 724.463 85.7723 724.338 cv
85.7723 741.26 li
85.7723 742.468 88.463 746.179 91.1072 746.179 cv
153.872 746.179 li
155.176 746.179 155.63 745.201 155.63 743.993 cv
155.63 707.377 li
155.63 706.17 155.176 705.738 153.872 705.738 cv
90.6305 705.738 li
90.6305 704.732 li
91.1391 704.819 91.6786 704.865 92.2477 704.865 cv
155.255 704.865 li
156.056 705.17 156.532 705.792 156.677 706.725 cv
156.645 706.928 156.63 707.145 156.63 707.377 cv
156.63 743.993 li
156.63 744.237 156.646 744.47 156.677 744.69 cv
156.45 746.3 155.418 747.271 153.872 747.271 cv
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 159.668 753.5 ]ct
clp
/0 /Gradient get_res exec grestore
np
153.872 746.179 mo
91.1072 746.179 li
88.463 746.179 85.7723 742.468 85.7723 741.26 cv
85.7723 724.338 li
88.5797 723.348 90.6305 720.284 90.6305 716.668 cv
90.6305 705.738 li
153.872 705.738 li
155.176 705.738 155.63 706.17 155.63 707.377 cv
155.63 743.993 li
155.63 745.201 155.176 746.179 153.872 746.179 cv
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 159.668 753.5 ]ct
clp
/1 /Gradient get_res exec grestore
np
222.245 747.271 mo
159.48 747.271 li
157.934 747.271 156.903 746.3 156.677 744.69 cv
156.646 744.47 156.63 744.237 156.63 743.993 cv
156.63 707.377 li
156.63 707.145 156.645 706.928 156.677 706.725 cv
156.821 705.792 157.296 705.17 158.098 704.865 cv
222.63 704.865 li
222.63 705.738 li
159.48 705.738 li
158.176 705.738 157.722 706.17 157.722 707.377 cv
157.722 743.993 li
157.722 745.201 158.176 746.179 159.48 746.179 cv
222.245 746.179 li
224.889 746.179 227.58 742.468 227.58 741.26 cv
227.58 724.37 li
227.934 724.488 228.299 724.574 228.673 724.623 cv
228.673 741.26 li
228.673 743.15 225.447 747.271 222.245 747.271 cv
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 159.668 753.5 ]ct
clp
/0 /Gradient get_res exec grestore
np
222.245 746.179 mo
159.48 746.179 li
158.176 746.179 157.722 745.201 157.722 743.993 cv
157.722 707.377 li
157.722 706.17 158.176 705.738 159.48 705.738 cv
222.63 705.738 li
222.63 716.668 li
222.63 720.323 224.726 723.415 227.58 724.37 cv
227.58 741.26 li
227.58 742.468 224.889 746.179 222.245 746.179 cv
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 159.668 753.5 ]ct
clp
/1 /Gradient get_res exec grestore
np
222.63 704.865 mo
158.098 704.865 li
155.255 704.865 li
92.2477 704.865 li
91.6786 704.865 91.1391 704.819 90.6305 704.732 cv
90.6305 703.622 li
91.1308 703.72 91.6702 703.772 92.2477 703.772 cv
222.63 703.772 li
222.63 704.865 li
90.6305 690.055 mo
90.6305 688.945 li
91.1391 688.858 91.6786 688.812 92.2477 688.812 cv
222.63 688.812 li
222.63 689.905 li
92.2477 689.905 li
91.6702 689.905 91.1308 689.957 90.6305 690.055 cv
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 159.668 753.5 ]ct
clp
/0 /Gradient get_res exec grestore
np
222.63 703.772 mo
92.2477 703.772 li
91.6702 703.772 91.1308 703.72 90.6305 703.622 cv
90.6305 690.055 li
91.1308 689.957 91.6702 689.905 92.2477 689.905 cv
222.63 689.905 li
222.63 703.772 li
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 159.668 753.5 ]ct
clp
/1 /Gradient get_res exec grestore
np
83.8169 724.674 mo
69.9557 724.674 li
66.1984 724.674 63.1414 721.082 63.1414 716.668 cv
63.1414 674.041 li
63.1414 669.626 66.1984 666.034 69.9557 666.034 cv
70.6911 666.034 li
70.6911 661.935 li
83.0815 661.935 li
83.0815 666.034 li
83.8169 666.034 li
86.4009 666.034 88.6535 667.733 89.8083 670.231 cv
90.3326 671.364 90.6305 672.662 90.6305 674.041 cv
90.6305 688.47 li
90.6305 688.945 li
90.6305 690.055 li
90.6305 703.622 li
90.6305 704.732 li
90.6305 705.738 li
90.6305 716.668 li
90.6305 720.284 88.5797 723.348 85.7723 724.338 cv
85.4191 724.463 85.0537 724.555 84.6791 724.61 cv
84.3967 724.652 84.1088 724.674 83.8169 724.674 cv
69.9557 667.482 mo
66.9927 667.482 64.5896 670.419 64.5896 674.041 cv
64.5896 716.668 li
64.5896 720.29 66.9927 723.226 69.9557 723.226 cv
83.8169 723.226 li
86.7799 723.226 89.1822 720.29 89.1822 716.668 cv
89.1822 674.041 li
89.1822 670.419 86.7799 667.482 83.8169 667.482 cv
81.6331 667.482 li
81.6331 663.384 li
72.1395 663.384 li
72.1395 667.482 li
69.9557 667.482 li
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 159.668 753.5 ]ct
clp
/0 /Gradient get_res exec grestore
np
83.8169 723.226 mo
69.9557 723.226 li
66.9927 723.226 64.5896 720.29 64.5896 716.668 cv
64.5896 674.041 li
64.5896 670.419 66.9927 667.482 69.9557 667.482 cv
72.1395 667.482 li
72.1395 663.384 li
81.6331 663.384 li
81.6331 667.482 li
83.8169 667.482 li
86.7799 667.482 89.1822 670.419 89.1822 674.041 cv
89.1822 716.668 li
89.1822 720.29 86.7799 723.226 83.8169 723.226 cv
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 159.668 753.5 ]ct
clp
/1 /Gradient get_res exec grestore
np
243.304 724.674 mo
229.443 724.674 li
229.183 724.674 228.926 724.657 228.673 724.623 cv
228.299 724.574 227.934 724.488 227.58 724.37 cv
224.726 723.415 222.63 720.323 222.63 716.668 cv
222.63 705.738 li
222.63 704.865 li
222.63 703.772 li
222.63 689.905 li
222.63 688.812 li
222.63 688.47 li
222.63 674.041 li
222.63 672.662 222.928 671.364 223.452 670.231 cv
224.607 667.733 226.859 666.034 229.443 666.034 cv
230.179 666.034 li
230.179 661.935 li
242.569 661.935 li
242.569 666.034 li
243.304 666.034 li
247.062 666.034 250.12 669.626 250.12 674.041 cv
250.12 716.668 li
250.12 721.082 247.062 724.674 243.304 724.674 cv
229.443 667.482 mo
226.48 667.482 224.078 670.419 224.078 674.041 cv
224.078 716.668 li
224.078 720.29 226.48 723.226 229.443 723.226 cv
243.304 723.226 li
246.268 723.226 248.672 720.29 248.672 716.668 cv
248.672 674.041 li
248.672 670.419 246.268 667.482 243.304 667.482 cv
241.12 667.482 li
241.12 663.384 li
231.627 663.384 li
231.627 667.482 li
229.443 667.482 li
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 159.668 753.5 ]ct
clp
/0 /Gradient get_res exec grestore
np
243.304 723.226 mo
229.443 723.226 li
226.48 723.226 224.078 720.29 224.078 716.668 cv
224.078 674.041 li
224.078 670.419 226.48 667.482 229.443 667.482 cv
231.627 667.482 li
231.627 663.384 li
241.12 663.384 li
241.12 667.482 li
243.304 667.482 li
246.268 667.482 248.672 670.419 248.672 674.041 cv
248.672 716.668 li
248.672 720.29 246.268 723.226 243.304 723.226 cv
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 159.668 753.5 ]ct
clp
/1 /Gradient get_res exec grestore
np
499.411 622.571 mo
499.411 607.35 480.244 602.224 480.244 602.224 cv
470.515 602.792 li
470.515 602.792 486.31 635.305 484.275 641.092 cv
482.791 640.275 480.902 639.784 478.842 639.784 cv
323.43 639.784 li
321.309 639.784 319.37 640.306 317.866 641.167 cv
315.82 635.363 331.599 602.792 331.599 602.792 cv
321.869 602.224 li
321.869 602.224 302.702 607.35 302.702 622.571 cv
302.702 637.797 310.024 656.521 310.024 656.521 cv
310.087 656.521 li
310.087 660.538 li
310.087 661.166 310.806 661.675 311.694 661.675 cv
321.05 661.675 li
321.938 661.675 322.658 661.166 322.658 660.538 cv
322.658 654.285 li
478.987 654.285 li
478.987 660.538 li
478.987 661.166 479.708 661.675 480.593 661.675 cv
489.952 661.675 li
490.839 661.675 491.558 661.166 491.558 660.538 cv
491.558 656.521 li
492.091 656.521 li
492.091 656.521 499.411 637.797 499.411 622.571 cv
.712886 .65359 .642298 .708797 cmyk
f
328.817 623.769 mo
324.455 623.769 321.166 621.631 321.166 618.792 cv
321.166 585.02 li
321.166 582.18 324.455 580.045 328.817 580.045 cv
471.101 580.045 li
475.461 580.045 478.752 582.18 478.752 585.02 cv
478.752 618.792 li
478.752 621.631 475.461 623.769 471.101 623.769 cv
328.817 623.769 li
cp
0 0 0 0 cmyk
f
477.659 618.792 mo
477.659 620.894 474.721 622.595 471.101 622.595 cv
328.817 622.595 li
325.194 622.595 322.259 620.894 322.259 618.792 cv
322.259 585.02 li
322.259 582.92 325.194 581.219 328.817 581.219 cv
471.101 581.219 li
474.721 581.219 477.659 582.92 477.659 585.02 cv
477.659 618.792 li
cp
.712886 .65359 .642298 .708797 cmyk
f
319.246 642.566 mo
317.268 642.566 315.659 641.33 315.659 639.812 cv
315.659 639.685 li
320.036 626.83 li
320.133 625.377 321.703 624.219 323.618 624.219 cv
369.959 624.219 li
371.778 624.219 372.909 625.274 372.909 626.971 cv
372.909 639.812 li
372.909 641.509 371.778 642.566 369.959 642.566 cv
319.246 642.566 li
cp
0 0 0 0 cmyk
f
371.816 639.812 mo
371.816 640.825 371.336 641.647 369.959 641.647 cv
319.246 641.647 li
317.869 641.647 316.752 640.825 316.752 639.812 cv
321.124 626.971 li
321.124 625.959 322.241 625.137 323.618 625.137 cv
369.959 625.137 li
371.336 625.137 371.816 625.959 371.816 626.971 cv
371.816 639.812 li
cp
.712886 .65359 .642298 .708797 cmyk
f
375.701 642.566 mo
373.881 642.566 372.751 641.509 372.751 639.812 cv
372.751 626.971 li
372.751 625.274 373.881 624.219 375.701 624.219 cv
426.414 624.219 li
428.233 624.219 429.362 625.274 429.362 626.971 cv
429.362 639.812 li
429.362 641.509 428.233 642.566 426.414 642.566 cv
375.701 642.566 li
cp
0 0 0 0 cmyk
f
428.27 639.812 mo
428.27 640.825 427.79 641.647 426.414 641.647 cv
375.701 641.647 li
374.325 641.647 373.844 640.825 373.844 639.812 cv
373.844 626.971 li
373.844 625.959 374.325 625.137 375.701 625.137 cv
426.414 625.137 li
427.79 625.137 428.27 625.959 428.27 626.971 cv
428.27 639.812 li
cp
.712886 .65359 .642298 .708797 cmyk
f
432.156 642.566 mo
430.338 642.566 429.208 641.509 429.208 639.812 cv
429.208 626.971 li
429.208 625.274 430.338 624.219 432.156 624.219 cv
478.495 624.219 li
480.41 624.219 481.982 625.377 482.079 626.83 cv
486.456 639.685 li
486.456 639.812 li
486.456 641.33 484.845 642.566 482.868 642.566 cv
432.156 642.566 li
cp
0 0 0 0 cmyk
f
485.363 639.812 mo
485.363 640.825 484.245 641.647 482.868 641.647 cv
432.156 641.647 li
430.779 641.647 430.301 640.825 430.301 639.812 cv
430.301 626.971 li
430.301 625.959 430.779 625.137 432.156 625.137 cv
478.495 625.137 li
479.874 625.137 480.991 625.959 480.991 626.971 cv
485.363 639.812 li
cp
.712886 .65359 .642298 .708797 cmyk
f
499.411 703.211 mo
499.411 718.433 480.244 723.558 480.244 723.558 cv
470.515 722.991 li
470.515 722.991 486.31 690.478 484.275 684.691 cv
482.791 685.508 480.902 685.999 478.842 685.999 cv
323.43 685.999 li
321.309 685.999 319.37 685.477 317.866 684.616 cv
315.82 690.42 331.599 722.991 331.599 722.991 cv
321.869 723.558 li
321.869 723.558 302.702 718.433 302.702 703.211 cv
302.702 687.986 310.024 669.262 310.024 669.262 cv
310.087 669.262 li
310.087 665.245 li
310.087 664.617 310.806 664.108 311.694 664.108 cv
321.05 664.108 li
321.938 664.108 322.658 664.617 322.658 665.245 cv
322.658 671.498 li
478.987 671.498 li
478.987 665.245 li
478.987 664.617 479.708 664.108 480.593 664.108 cv
489.952 664.108 li
490.839 664.108 491.558 664.617 491.558 665.245 cv
491.558 669.262 li
492.091 669.262 li
492.091 669.262 499.411 687.986 499.411 703.211 cv
f
328.817 702.014 mo
324.455 702.014 321.166 704.152 321.166 706.991 cv
321.166 740.762 li
321.166 743.602 324.455 745.738 328.817 745.738 cv
471.101 745.738 li
475.461 745.738 478.752 743.602 478.752 740.762 cv
478.752 706.991 li
478.752 704.152 475.461 702.014 471.101 702.014 cv
328.817 702.014 li
0 0 0 0 cmyk
f
477.659 706.991 mo
477.659 704.889 474.721 703.187 471.101 703.187 cv
328.817 703.187 li
325.194 703.187 322.259 704.889 322.259 706.991 cv
322.259 740.762 li
322.259 742.863 325.194 744.564 328.817 744.564 cv
471.101 744.564 li
474.721 744.564 477.659 742.863 477.659 740.762 cv
477.659 706.991 li
.712886 .65359 .642298 .708797 cmyk
f
319.246 683.217 mo
317.268 683.217 315.659 684.453 315.659 685.971 cv
315.659 686.098 li
320.036 698.953 li
320.133 700.405 321.703 701.564 323.618 701.564 cv
369.959 701.564 li
371.778 701.564 372.909 700.509 372.909 698.811 cv
372.909 685.971 li
372.909 684.274 371.778 683.217 369.959 683.217 cv
319.246 683.217 li
0 0 0 0 cmyk
f
371.816 685.971 mo
371.816 684.958 371.336 684.136 369.959 684.136 cv
319.246 684.136 li
317.869 684.136 316.752 684.958 316.752 685.971 cv
321.124 698.811 li
321.124 699.824 322.241 700.646 323.618 700.646 cv
369.959 700.646 li
371.336 700.646 371.816 699.824 371.816 698.811 cv
371.816 685.971 li
.712886 .65359 .642298 .708797 cmyk
f
375.701 683.217 mo
373.881 683.217 372.751 684.274 372.751 685.971 cv
372.751 698.811 li
372.751 700.509 373.881 701.564 375.701 701.564 cv
426.414 701.564 li
428.233 701.564 429.362 700.509 429.362 698.811 cv
429.362 685.971 li
429.362 684.274 428.233 683.217 426.414 683.217 cv
375.701 683.217 li
0 0 0 0 cmyk
f
428.27 685.971 mo
428.27 684.958 427.79 684.136 426.414 684.136 cv
375.701 684.136 li
374.325 684.136 373.844 684.958 373.844 685.971 cv
373.844 698.811 li
373.844 699.824 374.325 700.646 375.701 700.646 cv
426.414 700.646 li
427.79 700.646 428.27 699.824 428.27 698.811 cv
428.27 685.971 li
.712886 .65359 .642298 .708797 cmyk
f
432.156 683.217 mo
430.338 683.217 429.208 684.274 429.208 685.971 cv
429.208 698.811 li
429.208 700.509 430.338 701.564 432.156 701.564 cv
478.495 701.564 li
480.41 701.564 481.982 700.405 482.078 698.953 cv
486.456 686.098 li
486.456 685.971 li
486.456 684.453 484.845 683.217 482.868 683.217 cv
432.156 683.217 li
0 0 0 0 cmyk
f
485.363 685.971 mo
485.363 684.958 484.245 684.136 482.868 684.136 cv
432.156 684.136 li
430.779 684.136 430.301 684.958 430.301 685.971 cv
430.301 698.811 li
430.301 699.824 430.779 700.646 432.156 700.646 cv
478.495 700.646 li
479.874 700.646 480.991 699.824 480.991 698.811 cv
485.363 685.971 li
.712886 .65359 .642298 .708797 cmyk
f
513.292 753.5 mo
288.325 753.5 li
288.325 661.862 li
513.292 661.862 li
513.292 753.5 li
321.166 723.347 mo
321.166 740.762 li
321.166 743.602 324.455 745.738 328.817 745.738 cv
471.101 745.738 li
475.461 745.738 478.752 743.602 478.752 740.762 cv
478.752 723.471 li
480.244 723.558 li
480.244 723.558 499.411 718.433 499.411 703.211 cv
499.411 687.986 492.091 669.262 492.091 669.262 cv
491.558 669.262 li
491.558 665.245 li
491.558 664.617 490.839 664.108 489.952 664.108 cv
480.593 664.108 li
479.708 664.108 478.987 664.617 478.987 665.245 cv
478.987 671.498 li
322.658 671.498 li
322.658 665.245 li
322.658 664.617 321.938 664.108 321.05 664.108 cv
311.694 664.108 li
310.806 664.108 310.087 664.617 310.087 665.245 cv
310.087 669.262 li
310.024 669.262 li
310.024 669.262 302.702 687.986 302.702 703.211 cv
302.702 716.681 317.712 722.245 321.166 723.347 cv
478.399 705.433 mo
477.439 703.405 474.618 702.014 471.101 702.014 cv
328.817 702.014 li
326.451 702.014 324.4 702.643 323.018 703.672 cv
322.698 702.879 322.382 702.085 322.074 701.295 cv
322.542 701.467 323.066 701.564 323.618 701.564 cv
369.959 701.564 li
371.498 701.564 372.544 700.809 372.83 699.548 cv
373.116 700.809 374.162 701.564 375.701 701.564 cv
426.414 701.564 li
427.956 701.564 429.002 700.806 429.285 699.541 cv
429.568 700.806 430.615 701.564 432.156 701.564 cv
478.495 701.564 li
479.06 701.564 479.597 701.463 480.073 701.283 cv
479.534 702.661 478.971 704.054 478.399 705.433 cv
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 400.809 753.5 ]ct
clp
/0 /Gradient get_res exec grestore
np
480.244 723.558 mo
478.752 723.471 li
478.752 706.991 li
478.752 706.442 478.629 705.919 478.399 705.433 cv
478.971 704.054 479.534 702.661 480.073 701.283 cv
481.21 700.854 482.011 699.976 482.078 698.953 cv
486.456 686.098 li
486.456 685.971 li
486.456 684.453 484.845 683.217 482.868 683.217 cv
432.156 683.217 li
430.615 683.217 429.568 683.976 429.285 685.241 cv
429.002 683.976 427.956 683.217 426.414 683.217 cv
375.701 683.217 li
374.162 683.217 373.116 683.973 372.83 685.234 cv
372.544 683.973 371.498 683.217 369.959 683.217 cv
319.246 683.217 li
317.268 683.217 315.659 684.453 315.659 685.971 cv
315.659 686.098 li
320.036 698.953 li
320.105 699.986 320.919 700.871 322.074 701.295 cv
322.382 702.085 322.698 702.879 323.018 703.672 cv
321.854 704.54 321.166 705.692 321.166 706.991 cv
321.166 723.347 li
317.712 722.245 302.702 716.681 302.702 703.211 cv
302.702 687.986 310.024 669.262 310.024 669.262 cv
310.087 669.262 li
310.087 665.245 li
310.087 664.617 310.806 664.108 311.694 664.108 cv
321.05 664.108 li
321.938 664.108 322.658 664.617 322.658 665.245 cv
322.658 671.498 li
478.987 671.498 li
478.987 665.245 li
478.987 664.617 479.708 664.108 480.593 664.108 cv
489.952 664.108 li
490.839 664.108 491.558 664.617 491.558 665.245 cv
491.558 669.262 li
492.091 669.262 li
492.091 669.262 499.411 687.986 499.411 703.211 cv
499.411 718.433 480.244 723.558 480.244 723.558 cv
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 400.809 753.5 ]ct
clp
/1 /Gradient get_res exec grestore
np
471.101 745.738 mo
328.817 745.738 li
324.455 745.738 321.166 743.602 321.166 740.762 cv
321.166 723.347 li
321.166 706.991 li
321.166 705.692 321.854 704.54 323.018 703.672 cv
324.4 702.643 326.451 702.014 328.817 702.014 cv
471.101 702.014 li
474.618 702.014 477.439 703.405 478.399 705.433 cv
478.629 705.919 478.752 706.442 478.752 706.991 cv
478.752 723.471 li
478.752 740.762 li
478.752 743.602 475.461 745.738 471.101 745.738 cv
328.817 703.187 mo
325.194 703.187 322.259 704.889 322.259 706.991 cv
322.259 740.762 li
322.259 742.863 325.194 744.564 328.817 744.564 cv
471.101 744.564 li
474.721 744.564 477.659 742.863 477.659 740.762 cv
477.659 706.991 li
477.659 704.889 474.721 703.187 471.101 703.187 cv
328.817 703.187 li
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 400.809 753.5 ]ct
clp
/0 /Gradient get_res exec grestore
np
471.101 744.564 mo
328.817 744.564 li
325.194 744.564 322.259 742.863 322.259 740.762 cv
322.259 706.991 li
322.259 704.889 325.194 703.187 328.817 703.187 cv
471.101 703.187 li
474.721 703.187 477.659 704.889 477.659 706.991 cv
477.659 740.762 li
477.659 742.863 474.721 744.564 471.101 744.564 cv
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 400.809 753.5 ]ct
clp
/1 /Gradient get_res exec grestore
np
369.959 701.564 mo
323.618 701.564 li
323.066 701.564 322.542 701.467 322.074 701.295 cv
320.919 700.871 320.105 699.986 320.036 698.953 cv
315.659 686.098 li
315.659 685.971 li
315.659 684.453 317.268 683.217 319.246 683.217 cv
369.959 683.217 li
371.498 683.217 372.544 683.973 372.83 685.234 cv
372.778 685.463 372.751 685.709 372.751 685.971 cv
372.751 698.811 li
372.751 699.073 372.778 699.319 372.83 699.548 cv
372.544 700.809 371.498 701.564 369.959 701.564 cv
319.246 684.136 mo
317.869 684.136 316.752 684.958 316.752 685.971 cv
321.124 698.811 li
321.124 699.824 322.241 700.646 323.618 700.646 cv
369.959 700.646 li
371.336 700.646 371.816 699.824 371.816 698.811 cv
371.816 685.971 li
371.816 684.958 371.336 684.136 369.959 684.136 cv
319.246 684.136 li
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 400.809 753.5 ]ct
clp
/0 /Gradient get_res exec grestore
np
369.959 700.646 mo
323.618 700.646 li
322.241 700.646 321.124 699.824 321.124 698.811 cv
316.752 685.971 li
316.752 684.958 317.869 684.136 319.246 684.136 cv
369.959 684.136 li
371.336 684.136 371.816 684.958 371.816 685.971 cv
371.816 698.811 li
371.816 699.824 371.336 700.646 369.959 700.646 cv
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 400.809 753.5 ]ct
clp
/1 /Gradient get_res exec grestore
np
426.414 701.564 mo
375.701 701.564 li
374.162 701.564 373.116 700.809 372.83 699.548 cv
372.778 699.319 372.751 699.073 372.751 698.811 cv
372.751 685.971 li
372.751 685.709 372.778 685.463 372.83 685.234 cv
373.116 683.973 374.162 683.217 375.701 683.217 cv
426.414 683.217 li
427.956 683.217 429.002 683.976 429.285 685.241 cv
429.234 685.469 429.208 685.712 429.208 685.971 cv
429.208 698.811 li
429.208 699.07 429.234 699.313 429.285 699.541 cv
429.002 700.806 427.956 701.564 426.414 701.564 cv
375.701 684.136 mo
374.325 684.136 373.844 684.958 373.844 685.971 cv
373.844 698.811 li
373.844 699.824 374.325 700.646 375.701 700.646 cv
426.414 700.646 li
427.79 700.646 428.27 699.824 428.27 698.811 cv
428.27 685.971 li
428.27 684.958 427.79 684.136 426.414 684.136 cv
375.701 684.136 li
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 400.809 753.5 ]ct
clp
/0 /Gradient get_res exec grestore
np
426.414 700.646 mo
375.701 700.646 li
374.325 700.646 373.844 699.824 373.844 698.811 cv
373.844 685.971 li
373.844 684.958 374.325 684.136 375.701 684.136 cv
426.414 684.136 li
427.79 684.136 428.27 684.958 428.27 685.971 cv
428.27 698.811 li
428.27 699.824 427.79 700.646 426.414 700.646 cv
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 400.809 753.5 ]ct
clp
/1 /Gradient get_res exec grestore
np
478.495 701.564 mo
432.156 701.564 li
430.615 701.564 429.568 700.806 429.285 699.541 cv
429.234 699.313 429.208 699.07 429.208 698.811 cv
429.208 685.971 li
429.208 685.712 429.234 685.469 429.285 685.241 cv
429.568 683.976 430.615 683.217 432.156 683.217 cv
482.868 683.217 li
484.845 683.217 486.456 684.453 486.456 685.971 cv
486.456 686.098 li
482.078 698.953 li
482.011 699.976 481.21 700.854 480.073 701.283 cv
479.597 701.463 479.06 701.564 478.495 701.564 cv
432.156 684.136 mo
430.779 684.136 430.301 684.958 430.301 685.971 cv
430.301 698.811 li
430.301 699.824 430.779 700.646 432.156 700.646 cv
478.495 700.646 li
479.874 700.646 480.991 699.824 480.991 698.811 cv
485.363 685.971 li
485.363 684.958 484.245 684.136 482.868 684.136 cv
432.156 684.136 li
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 400.809 753.5 ]ct
clp
/0 /Gradient get_res exec grestore
np
478.495 700.646 mo
432.156 700.646 li
430.779 700.646 430.301 699.824 430.301 698.811 cv
430.301 685.971 li
430.301 684.958 430.779 684.136 432.156 684.136 cv
482.868 684.136 li
484.245 684.136 485.363 684.958 485.363 685.971 cv
480.991 698.811 li
480.991 699.824 479.874 700.646 478.495 700.646 cv
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 400.809 753.5 ]ct
clp
/1 /Gradient get_res exec grestore
np
726.921 652.295 mo
726.921 654.865 725.023 656.947 722.678 656.947 cv
567.614 656.947 li
565.272 656.947 563.371 654.865 563.371 652.295 cv
563.371 639.486 li
563.371 636.917 565.272 634.834 567.614 634.834 cv
722.678 634.834 li
725.023 634.834 726.921 636.917 726.921 639.486 cv
726.921 652.295 li
cp
.712886 .65359 .642298 .708797 cmyk
f
571.318 631.807 mo
571.318 630.714 li
571.318 611.126 588.178 588.647 608.138 581.625 cv
620.27 577.353 629.902 575.039 646.025 575.039 cv
661.553 575.039 670.587 577.124 682.775 581.233 cv
703.705 588.282 720.729 610.48 720.729 630.714 cv
720.729 631.807 li
571.318 631.807 li
cp
0 0 0 0 cmyk
f
719.677 630.714 mo
572.37 630.714 li
572.37 611.885 588.324 589.749 608.474 582.66 cv
620.724 578.349 630.076 576.133 646.025 576.133 cv
661.49 576.133 670.425 578.22 682.45 582.272 cv
703.23 589.272 719.677 611.537 719.677 630.714 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
575.389 647.11 mo
572.643 647.11 570.494 645.444 570.494 643.318 cv
570.494 635.893 li
570.494 633.767 572.643 632.101 575.389 632.101 cv
714.907 632.101 li
717.652 632.101 719.802 633.767 719.802 635.893 cv
719.802 643.318 li
719.802 645.444 717.652 647.11 714.907 647.11 cv
575.389 647.11 li
cp
0 0 0 0 cmyk
f
718.725 643.318 mo
718.725 644.81 717.014 646.017 714.907 646.017 cv
575.389 646.017 li
573.278 646.017 571.57 644.81 571.57 643.318 cv
571.57 635.893 li
571.57 634.402 573.278 633.194 575.389 633.194 cv
714.907 633.194 li
717.014 633.194 718.725 634.402 718.725 635.893 cv
718.725 643.318 li
cp
.712886 .65359 .642298 .708797 cmyk
f
563.604 661.675 mo
563.457 660.392 li
562.584 652.799 560.24 639.91 557.578 636.774 cv
555.731 636.125 548.184 633.006 548.184 625.409 cv
548.184 618.109 554.121 612.172 561.42 612.172 cv
567.198 612.172 572.329 616.003 574.042 621.434 cv
574.379 621.434 li
574.5 622.882 li
574.5 623.457 li
574.605 624.16 574.656 624.799 574.656 625.409 cv
574.656 626.015 574.605 626.655 574.5 627.359 cv
574.5 661.675 li
563.604 661.675 li
0 0 0 0 cmyk
f
573.208 625.408 mo
573.208 624.78 573.145 624.167 573.052 623.567 cv
573.052 622.883 li
572.93 622.883 li
571.775 617.587 567.064 613.62 561.42 613.62 cv
554.909 613.62 549.632 618.897 549.632 625.408 cv
549.632 632.9 558.384 635.515 558.384 635.515 cv
562.524 639.569 564.896 660.227 564.896 660.227 cv
573.052 660.227 li
573.052 627.25 li
573.145 626.647 573.208 626.036 573.208 625.408 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
716.318 661.675 mo
716.318 627.359 li
716.213 626.655 716.163 626.015 716.163 625.409 cv
716.163 624.799 716.213 624.16 716.318 623.457 cv
716.318 621.434 li
716.775 621.434 li
718.489 616.003 723.62 612.172 729.398 612.172 cv
736.697 612.172 742.635 618.109 742.635 625.409 cv
742.635 633.006 735.086 636.125 733.239 636.774 cv
730.577 639.911 728.234 652.799 727.36 660.392 cv
727.213 661.675 li
725.921 661.675 li
716.318 661.675 li
0 0 0 0 cmyk
f
717.611 625.408 mo
717.611 624.78 717.673 624.167 717.766 623.567 cv
717.766 622.883 li
717.887 622.883 li
719.043 617.587 723.752 613.62 729.398 613.62 cv
735.909 613.62 741.186 618.897 741.186 625.408 cv
741.186 632.9 732.433 635.515 732.433 635.515 cv
728.295 639.569 725.922 660.227 725.922 660.227 cv
717.766 660.227 li
717.766 627.25 li
717.673 626.647 717.611 626.036 717.611 625.408 cv
cp
.712886 .65359 .642298 .708797 cmyk
f
726.921 671.315 mo
726.921 668.745 725.023 666.663 722.678 666.663 cv
567.614 666.663 li
565.272 666.663 563.371 668.745 563.371 671.315 cv
563.371 684.125 li
563.371 686.693 565.272 688.777 567.614 688.777 cv
722.678 688.777 li
725.023 688.777 726.921 686.693 726.921 684.125 cv
726.921 671.315 li
f
571.318 691.803 mo
571.318 692.897 li
571.318 712.484 588.178 734.964 608.138 741.986 cv
620.27 746.257 629.902 748.571 646.025 748.571 cv
661.553 748.571 670.587 746.486 682.775 742.378 cv
703.705 735.328 720.729 713.13 720.729 692.897 cv
720.729 691.803 li
571.318 691.803 li
0 0 0 0 cmyk
f
719.677 692.897 mo
572.37 692.897 li
572.37 711.726 588.324 733.862 608.474 740.951 cv
620.724 745.261 630.075 747.478 646.025 747.478 cv
661.49 747.478 670.425 745.39 682.45 741.338 cv
703.23 734.338 719.677 712.074 719.677 692.897 cv
.712886 .65359 .642298 .708797 cmyk
f
575.388 676.5 mo
572.643 676.5 570.493 678.166 570.493 680.292 cv
570.493 687.717 li
570.493 689.843 572.643 691.509 575.388 691.509 cv
714.906 691.509 li
717.652 691.509 719.802 689.843 719.802 687.717 cv
719.802 680.292 li
719.802 678.166 717.652 676.5 714.906 676.5 cv
575.388 676.5 li
0 0 0 0 cmyk
f
718.725 680.292 mo
718.725 678.8 717.014 677.594 714.906 677.594 cv
575.388 677.594 li
573.278 677.594 571.57 678.8 571.57 680.292 cv
571.57 687.717 li
571.57 689.208 573.278 690.416 575.388 690.416 cv
714.906 690.416 li
717.014 690.416 718.725 689.208 718.725 687.717 cv
718.725 680.292 li
.712886 .65359 .642298 .708797 cmyk
f
563.604 661.935 mo
563.457 663.218 li
562.584 670.812 560.24 683.701 557.578 686.836 cv
555.731 687.485 548.184 690.604 548.184 698.202 cv
548.184 705.501 554.121 711.439 561.42 711.439 cv
567.198 711.439 572.329 707.607 574.042 702.176 cv
574.379 702.176 li
574.5 700.728 li
574.5 700.154 li
574.605 699.451 574.656 698.811 574.656 698.202 cv
574.656 697.595 574.605 696.956 574.5 696.252 cv
574.5 661.935 li
563.604 661.935 li
0 0 0 0 cmyk
f
573.208 698.202 mo
573.208 698.83 573.145 699.444 573.052 700.043 cv
573.052 700.728 li
572.93 700.728 li
571.775 706.023 567.064 709.99 561.42 709.99 cv
554.909 709.99 549.632 704.714 549.632 698.202 cv
549.632 690.71 558.384 688.095 558.384 688.095 cv
562.524 684.041 564.896 663.384 564.896 663.384 cv
573.052 663.384 li
573.052 696.361 li
573.145 696.963 573.208 697.574 573.208 698.202 cv
.712886 .65359 .642298 .708797 cmyk
f
716.318 661.935 mo
716.318 696.252 li
716.213 696.956 716.163 697.595 716.163 698.202 cv
716.163 698.811 716.213 699.451 716.318 700.154 cv
716.318 702.176 li
716.775 702.176 li
718.489 707.607 723.62 711.439 729.398 711.439 cv
736.697 711.439 742.635 705.501 742.635 698.202 cv
742.635 690.604 735.086 687.485 733.239 686.836 cv
730.577 683.699 728.234 670.812 727.36 663.218 cv
727.213 661.935 li
725.921 661.935 li
716.318 661.935 li
0 0 0 0 cmyk
f
717.611 698.202 mo
717.611 698.83 717.673 699.444 717.766 700.043 cv
717.766 700.728 li
717.887 700.728 li
719.044 706.023 723.752 709.99 729.398 709.99 cv
735.909 709.99 741.186 704.714 741.186 698.202 cv
741.186 690.71 732.433 688.095 732.433 688.095 cv
728.295 684.041 725.921 663.384 725.921 663.384 cv
717.766 663.384 li
717.766 696.361 li
717.673 696.963 717.611 697.574 717.611 698.202 cv
.712886 .65359 .642298 .708797 cmyk
f
755.388 753.5 mo
532.855 753.5 li
532.855 661.862 li
755.388 661.862 li
755.388 753.5 li
573.099 704.414 mo
577.933 720.576 592.026 736.317 608.138 741.986 cv
620.27 746.257 629.902 748.571 646.025 748.571 cv
661.553 748.571 670.587 746.486 682.775 742.378 cv
699.289 736.816 713.372 721.822 718.579 705.805 cv
721.009 709.237 725.018 711.439 729.398 711.439 cv
736.697 711.439 742.635 705.501 742.635 698.202 cv
742.635 690.604 735.086 687.485 733.239 686.836 cv
730.577 683.699 728.234 670.812 727.36 663.218 cv
727.213 661.935 li
725.921 661.935 li
716.318 661.935 li
716.318 666.663 li
574.5 666.663 li
574.5 661.935 li
563.604 661.935 li
563.457 663.218 li
562.584 670.812 560.24 683.701 557.578 686.836 cv
555.731 687.485 548.184 690.604 548.184 698.202 cv
548.184 705.501 554.121 711.439 561.42 711.439 cv
566.367 711.439 570.839 708.631 573.099 704.414 cv
716.318 691.803 mo
574.5 691.803 li
574.5 691.45 li
574.788 691.489 575.084 691.509 575.388 691.509 cv
714.906 691.509 li
715.399 691.509 715.873 691.456 716.318 691.355 cv
716.318 691.803 li
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 644.121 753.5 ]ct
clp
/0 /Gradient get_res exec grestore
np
716.318 676.654 mo
715.873 676.554 715.399 676.5 714.906 676.5 cv
575.388 676.5 li
575.084 676.5 574.788 676.521 574.5 676.56 cv
574.5 666.663 li
716.318 666.663 li
716.318 676.654 li
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 644.121 753.5 ]ct
clp
/1 /Gradient get_res exec grestore
np
646.025 748.571 mo
629.902 748.571 620.27 746.257 608.138 741.986 cv
592.026 736.317 577.933 720.576 573.099 704.414 cv
573.349 703.947 573.573 703.462 573.766 702.962 cv
578.068 718.996 591.841 735.099 608.474 740.951 cv
620.724 745.261 630.075 747.478 646.025 747.478 cv
661.49 747.478 670.425 745.39 682.45 741.338 cv
699.087 735.734 712.948 720.343 717.813 704.587 cv
718.047 705.008 718.303 705.414 718.579 705.805 cv
713.372 721.822 699.289 736.816 682.775 742.378 cv
670.587 746.486 661.553 748.571 646.025 748.571 cv
716.318 692.897 mo
574.5 692.897 li
574.5 691.803 li
716.318 691.803 li
716.318 692.897 li
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 644.121 753.5 ]ct
clp
/0 /Gradient get_res exec grestore
np
646.025 747.478 mo
630.075 747.478 620.724 745.261 608.474 740.951 cv
591.841 735.099 578.068 718.996 573.766 702.962 cv
573.866 702.704 573.958 702.442 574.042 702.176 cv
574.379 702.176 li
574.5 700.728 li
574.5 700.154 li
574.605 699.451 574.656 698.811 574.656 698.202 cv
574.656 697.595 574.605 696.956 574.5 696.252 cv
574.5 692.897 li
716.318 692.897 li
716.318 696.252 li
716.213 696.956 716.163 697.595 716.163 698.202 cv
716.163 698.811 716.213 699.451 716.318 700.154 cv
716.318 702.176 li
716.775 702.176 li
717.042 703.021 717.391 703.828 717.813 704.587 cv
712.948 720.343 699.087 735.734 682.45 741.338 cv
670.425 745.39 661.49 747.478 646.025 747.478 cv
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 644.121 753.5 ]ct
clp
/1 /Gradient get_res exec grestore
np
714.906 691.509 mo
575.388 691.509 li
575.084 691.509 574.788 691.489 574.5 691.45 cv
574.5 690.343 li
574.785 690.391 575.083 690.416 575.388 690.416 cv
714.906 690.416 li
715.405 690.416 715.881 690.348 716.318 690.226 cv
716.318 691.355 li
715.873 691.456 715.399 691.509 714.906 691.509 cv
716.318 677.784 mo
715.881 677.661 715.405 677.594 714.906 677.594 cv
575.388 677.594 li
575.083 677.594 574.785 677.619 574.5 677.667 cv
574.5 676.56 li
574.788 676.521 575.084 676.5 575.388 676.5 cv
714.906 676.5 li
715.399 676.5 715.873 676.554 716.318 676.654 cv
716.318 677.784 li
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 644.121 753.5 ]ct
clp
/0 /Gradient get_res exec grestore
np
714.906 690.416 mo
575.388 690.416 li
575.083 690.416 574.785 690.391 574.5 690.343 cv
574.5 677.667 li
574.785 677.619 575.083 677.594 575.388 677.594 cv
714.906 677.594 li
715.405 677.594 715.881 677.661 716.318 677.784 cv
716.318 690.226 li
715.881 690.348 715.405 690.416 714.906 690.416 cv
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 644.121 753.5 ]ct
clp
/1 /Gradient get_res exec grestore
np
561.42 711.439 mo
554.121 711.439 548.184 705.501 548.184 698.202 cv
548.184 690.604 555.731 687.485 557.578 686.836 cv
560.24 683.701 562.584 670.812 563.457 663.218 cv
563.604 661.935 li
574.5 661.935 li
574.5 666.663 li
574.5 676.56 li
574.5 677.667 li
574.5 690.343 li
574.5 691.45 li
574.5 691.803 li
574.5 692.897 li
574.5 696.252 li
574.605 696.956 574.656 697.595 574.656 698.202 cv
574.656 698.811 574.605 699.451 574.5 700.154 cv
574.5 700.728 li
574.379 702.176 li
574.042 702.176 li
573.958 702.442 573.866 702.704 573.766 702.962 cv
573.573 703.462 573.349 703.947 573.099 704.414 cv
570.839 708.631 566.367 711.439 561.42 711.439 cv
564.896 663.384 mo
564.896 663.384 562.524 684.041 558.384 688.095 cv
558.384 688.095 549.632 690.71 549.632 698.202 cv
549.632 704.714 554.909 709.99 561.42 709.99 cv
567.064 709.99 571.775 706.023 572.93 700.728 cv
573.052 700.728 li
573.052 700.043 li
573.145 699.444 573.208 698.83 573.208 698.202 cv
573.208 697.574 573.145 696.963 573.052 696.361 cv
573.052 663.384 li
564.896 663.384 li
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 644.121 753.5 ]ct
clp
/0 /Gradient get_res exec grestore
np
561.42 709.99 mo
554.909 709.99 549.632 704.714 549.632 698.202 cv
549.632 690.71 558.384 688.095 558.384 688.095 cv
562.524 684.041 564.896 663.384 564.896 663.384 cv
573.052 663.384 li
573.052 696.361 li
573.145 696.963 573.208 697.574 573.208 698.202 cv
573.208 698.83 573.145 699.444 573.052 700.043 cv
573.052 700.728 li
572.93 700.728 li
571.775 706.023 567.064 709.99 561.42 709.99 cv
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 644.121 753.5 ]ct
clp
/1 /Gradient get_res exec grestore
np
729.398 711.439 mo
725.018 711.439 721.009 709.237 718.579 705.805 cv
718.303 705.414 718.047 705.008 717.813 704.587 cv
717.391 703.828 717.042 703.021 716.775 702.176 cv
716.318 702.176 li
716.318 700.154 li
716.213 699.451 716.163 698.811 716.163 698.202 cv
716.163 697.595 716.213 696.956 716.318 696.252 cv
716.318 692.897 li
716.318 691.803 li
716.318 691.355 li
716.318 690.226 li
716.318 677.784 li
716.318 676.654 li
716.318 666.663 li
716.318 661.935 li
725.921 661.935 li
727.213 661.935 li
727.36 663.218 li
728.234 670.812 730.577 683.699 733.239 686.836 cv
735.086 687.485 742.635 690.604 742.635 698.202 cv
742.635 705.501 736.697 711.439 729.398 711.439 cv
717.766 663.384 mo
717.766 696.361 li
717.673 696.963 717.611 697.574 717.611 698.202 cv
717.611 698.83 717.673 699.444 717.766 700.043 cv
717.766 700.728 li
717.887 700.728 li
719.044 706.023 723.752 709.99 729.398 709.99 cv
735.909 709.99 741.186 704.714 741.186 698.202 cv
741.186 690.71 732.433 688.095 732.433 688.095 cv
728.295 684.041 725.921 663.384 725.921 663.384 cv
717.766 663.384 li
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 644.121 753.5 ]ct
clp
/0 /Gradient get_res exec grestore
np
729.398 709.99 mo
723.752 709.99 719.044 706.023 717.887 700.728 cv
717.766 700.728 li
717.766 700.043 li
717.673 699.444 717.611 698.83 717.611 698.202 cv
717.611 697.574 717.673 696.963 717.766 696.361 cv
717.766 663.384 li
725.921 663.384 li
725.921 663.384 728.295 684.041 732.433 688.095 cv
732.433 688.095 741.186 690.71 741.186 698.202 cv
741.186 704.714 735.909 709.99 729.398 709.99 cv
gsave
[5.61122e-15 -91.6381 91.6381 5.61122e-15 644.121 753.5 ]ct
clp
/1 /Gradient get_res exec grestore
np
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 20.1.0
%%For: ( ) ()
%%Title: (2402.i019.048.eps)
%%CreationDate: 11/16/2016 7:16 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",KB7$Z"qsa3'YNpQ@94BP^D_Zi,C,BZ^h4UJT;%2C94o=7=fq4\K!X_Opfk>hPY4\a;bWU/';`m8l\bWVY9SXnf:X%b:_a/o:
%j9lhl^7YK;#JU.ZIU6FI['7;JL?m)3oMhp^>`TYR1rjXL&2U,3:fB`8)M0?$iLXXamV`3L;S=gK6PP0D*5g2bNh9.B!V^jnoI]Ls
%OE60D?dC**RZB$C&4M'RNI!+*iP<P(4o.@t.8IZ[%9aI^'EM#ib^$d??]n1hI-h4FU1#,RhLraC4;pJ'0^p*-'?0H+0PmsVf'+>&
%Lcct=h"9:6"O(qn$,qr/FmNP#-9[d%PXm#3q0YI=B]\i>^d%B#bJjPL,qX+h46ZEid;VGU><H7kPQ&kSJ&_s$Rd/B"JnP9?2OJsp
%%IcU__kbo'U\^LWq:d>CJshA?G>X33's:?=TZ;A7*(qGaTg*qt\nocip`V3jhK/$'dNSm-[tFfB;l5#jOMU\n89IBtRp6=qef>3R
%%"W?tN9A+:5N((B7jJX*GRGQG_;ae4`Sb\\36i.'(ilqe(gQ0j+Z#*L$jc]]$g-VtVSD8AfOp"20*ik"7.u+Pq>XpLJ-)H9:R=TP
%\P$"7;M9<F%1#$WmAIK$A;:.LP!D:05dFL0\9PUaJ=_<8k-G4Hk_m_D#<FP;3:ODlY,,cn:5tfsLO#J\c\g0Pp['UQdHA*JU!-2E
%KCmN@T%XW3oGto/IrkN)Hn=u*C99N<MOE/l%,)QI@W/V6m,Hc,)7W-07#hN3fJcdADr:^;"mVkVa\t?Q1&/CrULuj-'n2!(k_hVW
%s4,R_6P$unf)nS$AuFO#QCGu#QJ1R@Z,T[?MI-s4aeeIa#mIiM*YLB,`B.@8!nj.GZCk'Z9\J/cp.,uJ8fRl,92GH%C38_#HKGbX
%krW1foOH>2=@S[Z`fkmN"6.8k=M"#i&8>DQ:/`^e%!cSG@X86AT*ll2PN1<GkUOn[1RC<nO'kbSA.`O)>+J:XfnR(OYR(l.:8uP?
%6X04]K*35:'9krs;+;"Lo$Ifiip-]"Z=J!acN&TrU%g_(2#aA&`@`t&4c0Tg4CG$/BJ;:*N(C-pM4;^s1hUK\W#:TEFkO(**\u@K
%ISK7>h!T*1i<F<PpM5&Gl8-4-`XK<1l'.V:(GK*AAaj2;+P!ZH>P9#WrjTW`^\sGmp/cbMOF_Kr"9,TW>S%!th&d%.K>CA<!r`Jp
%7g:ccC^:F-+R8NQ!hiF=*/]ED+X0=/d\0>_)p3jhn:udI@K3gO_Z"Ks*"7V>iG^%^%23/*S.92Kfl/Qq7IZ*Dr:qQ<3-Z\_!DOc#
%#QaqG832ojA0\WU/rG5Lcj0RJd6JDa):;hK'FdPWi%Gup^`OFg7l0'VMuI`"#`OoP)aE:/rFp`cr+5i;!#E?P^48EZ#Qt5Q&.nrI
%#[`DR)VZRP@5+N+_D_r'!7&F9\%dMTK_Z8TTF?/RrriQ;%1i\RfL,Sg'L4MMp(sG)Ni4)J+b]%Zs,/'^O=P,m>d=]AJh()^'eVLs
%$bkQS2D,jRQOoh<MMk,4p0k;G7ue2"B>IN^m3Q,K0p6c#?"/G7j?HoCk?Il[(OprL(gn@$0o,j`T]fer/;b%tO2TIK#0UI9e.p#P
%\/u7>6,:8iQspaWE"Yt,)*A92`-jgV^_[,E7XTlMoVK>$jidL@IbaD`qghk&!'3um"2Fq*I7X7^&fX)f&/c_o"%YZ@,B4>@E^Z57
%&8?_A#UlK6W5F.e6,4g3i?N:CMroPsAq962i,KH%Eu;u@&BM@Gl2srP"&b0\q9K+*8-:jpJ364"%7>Z?!C0d0TJ75-!K(LiogurS
%-m3LHE$bj8j9N?7_\h<;(@X!u!`B/G)?m2J""jfZ^\r]SGR+]>J2Cee>`_82K[#'X'/5r#87&G`37<J6%Nt"kZ6*An^*NN;gdB1b
%auu!e*)\-=#:q`qrXb1k.$/qW!?!0_(m=n!dX^gR#LYAc.^u=oQ?Fo=G-.a;eL]f#WmoEJ/HtQ[TrG(1qgACnN$E#]5\F/>`YYrk
%5i];?pWq0'8O^2gOAQY7DETp`0fM(uk_bhO\Lf7fk2r#s4GG2MbN6%?9J2k\F$pMZ,4L1m@"j6KZMS^W*1k'R\SO0naelCTQ2k5E
%Opu%kfc]coIK0Pt@[UIJS&o3h))=QiJC2V0JB%rsgE-FPd$MR)=?;eoVDIIYRS4CZBKD:d"+)+`#L`UY&'+rEk/]*A+k%].&nD^O
%U%"4mVqM%0m$?oE@P,e+<'1la)))Rt*agqb)h/\Q'R8XGLG2[4o*9\@oZcM;T)gm($pi*i!@]k`(^<Kboo[O<+.*c#Cjj+3@;#og
%:_,N6&Fi<0O30LK)1_^e]NL2JKC5CR`9.FsK43G4J*3bLSl5Lobs1LfLCM(u#6ZN-'h#1eYV2DIa4e^=H>hUFa/"KM<^+R.+tO(I
%=76SQnEI)R^?58KHCnVlY]r\.5P@3s)f5OJfI;(/#5JMMFQXi"fF9I[OPkD!ZV>AVY^N+7U)#qF[g6I?eO0*Urd`)oG\@1!4guBC
%%5@!fW,2*s@crYMIkuLmUsTV5&?$>2^nRCcTTL,>b]"im^h29hZd9kQ*J0iAW"-N`.Aj9N+kZ"bOO:t6+$+B9ES)];UB?4"4q@f,
%'nKp(7f+nY+PVTN/TfpJB^O6'b+[KVER&dk/3WCJql(h5g.Ra^i1GVJP\Z)6f[I.a13<ZK%PE:r@CDp'VeMt4$gpNd9*o^#Vr-Zf
%Xa8487f1LucF4n%l$QCrM:?`T*0W>\/=`AZm73)4KfQ3S9.q7L1cANY`co[Q^QG=]qi$8GcFYNT^eA16=otZ/1LR90P-,!JkBh;W
%>&r&DOY2;N%j0%&b)kOn1f&rJY61&4dneO2[*g+j[1=;CnqUh.JsH9Jn7Lm8+b!&F%M"oe9B?5Q<:6!nSPm#uMF[i@!oYbYbq['a
%R6-:::.MGP896d3VZ2n(ST;8>/pGJ"::]0[H7g$/9"CHEA<&+*,O+YRgDEe9mdDg639U!`JXfIW')JrGA'B.=`0c//cd:PeFG*7f
%=s.b_\WHkATmVDNTZbWg4Ok$6c$=%V#RiR:[BVg[\64UXo_"T4r[1a#oSM/8CPX$4k]',k:\704?m*hU%W+17?*>I-N`+&'(d5_l
%1HfjLq!X>ghP0M.5?L(V_*tu"qYq0H3];'cF+-CIkXLW]`tq29cb^&2%'@g_o]?tW_'cA6l!P7AHHoE9p7E3]V5JXdg@"NG#jTG`
%btSA(q@J,A/k;@L\8cb2iqRT8TIqc*Hq=l[^q.nf<sKZDIX6rMj-ZfJelNQ+rOHW!(91PE`!o3SoR&?B55:BDh2_-c6_1Cs&tDu_
%%ab@AE!p0XXBWs[f]_79jTmE)Njs,rf>A.!kMbp\en=[F7#t`85>eRc7RZtlI3FB?a)l%#:;I_Do5L@I7N>-9;3.=H:HQU,9S,K,
%l2?DMr(MiGBRWK>8fhQNUYcE-9n*#f=e'[2r2t8H5OJ$h_WCiAq4p$2-$bsY=3(0aiG\86`L_]8e*=a-^l,RtEuV\HbHJ5/7h6)b
%DEi*$NjIs=R[go0)-o-_@#c4$HJE/kc/r@hXfQL>C]s4qf&;u+0Fdgb`_4WTP*>Ds0TMZ^f?&:9(Q*_3`p69fcM.aY@J+U!ZjZSL
%0`L64qU,W/FW%K;\&LJ'Y_0F)R%@FN8?XGgZ1%PQXshXAFN<NgNr4J1?$>/q\+"bSS#j$>ka61l*[Ham-.[X*T_HsZk8niHlWC5[
%O/V<-AfERbIYLVDg<EZbcbbaiZ(Uf1r3j4bZF@q0_Mk=;2#NKT$8jn;QSY>NE&s<=NZus"A[;p(nU-%k&G7/c1l_es/H6,_DfNbN
%rCE]mH;]E-_b[^\da.FN1(o@Zht.me4N<:DFBOHQ2g%1PlGGQ'3fs,8H1[eEgHar)YQ;YIqKD50T>t&krL<YWAZD$>'e*H:GGUUt
%Ki1_P3dj0#e4?]*bouC<UIu,?ftTtfcU*>`;$sQM+0+42i,<8o5\]'He)X1m6G_nX-b.L?5tBuii44[c1PV?H(*5"_V(!Di0R=Gf
%X)NCYdE@u-(/d2&2S&6,JR9WIp+)61rF[96jed>46a&G@b]iCh;.(_dr2H(f2.\,GVX4.X1\_"fZ[IOu.(q:='.*2QG,"3Z`3Cm"
%Sp$hJ;LS73mmPQ7a:@&FIuU!I?hfruois%lFF-mWLu#>HSg3-NU<=/hra(hm@?nUE?5,On*6jY>Nd1T2(Zi"?jg5icIs*K&/t7:Y
%NoqqZ7F?b+d5[^\)c0:V;%D6mIFZ"Z\u`idS%>f-(I\iIa-K6qc;g<Cgf't@0L)49T?5::^-#3CG-qu2Nplt/j'fkJS],6ei(Mm5
%8/+-'FFQgD2](nBd=6SPbHUZ(0otG9SC9&G-bK(NFtIgACL>>hl!WbtY+=q5(U\$]*di#9f=mhZqb#fc%>FFbeP904@oht2XF3+0
%p6C6;P>s\I[1?Ctq2/#32t'R&7cU@u"M_ONHrLK(-T1b1)MLt%Uk8dt2*._aVAe!PIqZ:1;Em3Li?VnE1B_i:*L"!8f<os!f(QGS
%3rQLK%O1H8K[[S@icKIhVdJ;4lac`MFF22\X"n&Pp(h8oV[(FFqaYE:qD4lq0r%D,A8OP*LCAF_LDfS(Gf:*Ls#>66rf)O8L-N"S
%qK)'pRDEZGp*4ZYQbMeo3_hWJW*sk.2ng88B_3CBL7_Q`s!g5\g"#gaj+j4XksOK\GoQd'/0Q&3fm'(aEp.8qj!HQW!7>P(Y2a`n
%O6371-Ja`19e<tgf25]P*OW/Wep<:F*O*qRGl<9(@linXA$'T5$D.$R`J>PI:"I2p4`WFZbc>5a/GVY7iuP3-e&#2&)uT;HTQipG
%9k[C",kaIi,`cpgie*,43pCiLl$!^)^L,sf`7+Rd!lNL`Y:=*YlbB@jhp_GjC&Reiepig/K.F`$/?[IP*R1&AQi*P<e!f_,\^R#9
%C!HC]i,r5p4i"Gj[,u^s2W0LpOS5*Y@'8Zo6k3O!FPOYYbkV9qaW#Q0hc;T6/A-GY/Be"*+$#W)N^V70h1KpFl9K9o_nh8hd4D'V
%?4t[:M2KjhN7ENFBl5DVe5QsZ[X.0098DX>:)1&:YE5<(htC"m4&s@N6R39dnh`LhKD:dn"([fC(]Vd"/1nke\f^*[C9"h#GUf7)
%8EifLXE^b;Sa'j;L+a\j[<7oAT6+,[A8OO_^52!gM>ER,bXJYk\5\:;ZK3I#Beg)(bKJ7=I-TRQN0G]S(P_6(`Vtd[N:=#SB`[bI
%(G<$"1V*f2(]Un'6Kf'%"m4KfAfr5C<L2;*nnABpn12]8I\?,7h;qU\3>Gm"Lk;3*0:Rcf$86l/X"R_&=d3'b_TSY\KBb+f_TSqJ
%E[n_l$83J6^FuhBIjuS3$:l8/87ReO*-DGLWu]Oc:efs-$Y*PM_K*5(iXd]X=1E'5s5(Z2[q'g[ETe35I'm=ud)2&7^M/:2`#?U.
%Q?828U$0#ejE/M^aZ9?=43%kd`WtrT^VW]=qMk$]qo5gY$e(7ZV]2!ucLE<Rj"[^GImE6n[kF:i?hu<.-&S85M!B&2Iu0fS3F,OY
%K1J&kfK,SGs7F+uFI`:P;e@%7'\V*D3f6((ruAU`*P@-j@>0^`NCAgjc!_%c!\H`Ui9@sNdrfIf?UZsR0BN7!_qhMa$lg0urnnF7
%nM''hTcHLTL'OsSr=\rce(;"bC!l@Tr#P4WK?T/&[gd*&n?^JEB?srDiaOhfeA3+f+k7r0<;M^'';BtcKRTq2kTEde<6$tM/F?EW
%362(ZEiNUhMMC>'`Mnmfq)X#*A";g$LW5`\*TL,>30H<,b`tUhf4LA%c]h6$R1:DMGcE,hlnuiI3P-F,gImpan=Of/[imM9:TMj>
%a?3nC-H#+06`t,$=ig8bo2_^66/jC/i\6FRgNpGq5j*CgI83RbHI@G*p7I&.SpPd\o19[aNpjQ$8)F$&V=%-U4,7GA:DXK-j6l):
%2"X6))*2'KF(CX/?lg=Q#:+>9@R0@s?1WU0-@/?)CA(etI*$_foE7U\CP1+j42u&gr`%jS3Tn"q(5U<l(BqS!m3fJc\jK7e:Y16s
%6&kh@Ki/of8fPKd+`g<r^=LT'UNI(DW+o$ffQ5tT^@\(;g@07_$OYn-YjA`ei&[Ci"O)LHh(#jn4Zc/8`.mRMolf_mEk/;cj"ka:
%I6r,"k"aUb.@WD1F8or4V^#A*ATNWX_C:s9rbV#04m^hl3?8ng*,.I3"1(oeG=q$nl.d_Y4/I#ugZ_u4/#@<uO?'1[Y0Ctb+]%@M
%kC_+Bh"V],k4Bg:b3+dLT@4B>+7XI^?g$$)FInpcFR+1_=5k>9SC@G(#G^M<Y58Qd8_$TQI3+16qE5X*HqlDb"c7m(A&GQ(9D-;E
%KCfm;UO%mo,GqO<.>U2j4]Uc9]?cX/S\M.On9.)F*lk-I3@K,BWC9$q:X$Wk3VD[\Ta(]%\uIOa7C<*0nu/I<oVWG"&'_h:Oi0Nb
%n&ZW^%FD@k8!rlMW^f!oPePL<dJU??qKo%("?=$gNHY%K%jf86ZbsUPi6`BXh7p(i<tH+K%iD>N/(<9Q&1PkrHrQp#RltliUdO_X
%8=@3/F[I;m=7X]hpnY6605LH!K'V%I)Q8.Ra^!FYmAf7qLJJclWD$IPJun96:'Bg#H/VOodG-/T3lO?+bf2m<_pud@#O1_(9?aaB
%bd]+(.q[H%EkijGEj?dCM71#9F&6t9M,#eQs'ACK=Qo6O#=W!:KCXf1m(p_g?Sc:R'tY"(''O:bA$%V.3BLWDc]TjXQ0uQ!A:"$E
%FWlm!+9'U(iN)@BeADq_Ji3Nq\RHG]7PU?7atYpk*BDhUX,V]_pugU$nVfGrd(4ZZj5_0j;=P1Q3IWY=5'R=38*^]A60^DK#O`W)
%YiFd`&(5KhI,c%5NQ5-e55j-lTa!Z0`]5%M5Q9jtN`%&rGPE00*BmirVo?FA"g_S,B@?K[hK-W5G)lK0U'V!XdrDS-;:tB!aP"C6
%\NK(-m+AjkN(GF8^_VE7moJ?4`u)M?A,_c'5<Z>_3PMdlf+-P/I-jQj^.Mf*[?$^tr>cdDYAd(QT.A99%Sq2B&dNp.7.kZD`$+IF
%c`lR<f%iM$TH:``J<b?"T]R?.4SQ5#mLU1,4sp`do39(%),>ZTNK2.2kW&'WCbGDE"7!)PJaN_!T4@XlXHFVCLIJ5DLV$&RSb*eA
%eFjKk/\T[d7I*aX-FrrZ=$K;5ns+mP'/j6QY:aG_PF-d,R,ME0R$"#P3<Z0<nAo[7Vl%<rcS$^eTZho\i5`Z84['XZ*C\U01$R!f
%Su:#WWV!H_5MGZtYj<gVq,mk`D6a!p>:fg$$pOG28EWAQa#_mfJ+[;Bkdqu8WcQEZCL@iuM2clP4\60PWVjlI^TM55=[[R:A*;dX
%MLNYM9ShnR?.qR7F(&UX:fD+"o7eaP#BS\pclbJG;_6*#-&93Jg>k6E$XW#0Oih1;h;DF0#U#h2c6#;G@t"skXVoh/4&^M-"--gR
%J,&2j[\Nd"ksqR_">;[kL#<#/a3p4LH\t!QS[:N]EM.h^HNoXS%AX-+CkJ/"=F/L'1K<>VEYAo[];+:CFn"As#GPWK5fs`I8+C6m
%]tqL.i(Xp'"2XK$iuJ04/GJ)XrICNC^q2Pph;<_sL5Os[))Lp"JVSBH%00!B9Eo>>LCu*Rh'aP'%'BL#WDP2uMR8%-Xo"6KgE,Zg
%"@;*Gbo9IdU2fo\Un7.n\%cZ@2+lQUkbb>uA,R+:cmh$*)_\eVl5,g2&,mq0Yf0[$EfKu(`K*SZ).9,!KP_&h9n#tGJXJe7)a>ZT
%NeKk!5IpUCpf7d>@aZ-s2kPV*,t!N>3p.OPnd?kEn>!jgWdFiKmqN:#a:%H`i_`$5#QcRb-!FJY#@1n9>(%M&QNnG4SDJ`Qb\r*-
%jdXOW4(F3?Nm0<o3o;AmM!kd(5\'RsDkat7NM-2ooVCb-;tqkMq_oUK[Xb._>.d<]d6TC1oA;"85EG/qS*l=p5s(CuNTn-#G+k<T
%S,Q0VpiSpi%,]>lqKU7M6_m@2oPjQRRK%9%&GrWf/AS]L+lj3\hHUW&aT7dD5:WB^JV(-MFMGW<ka0g!6>me>GA[<1oD)Ri/.DMA
%!;Se[9.mGBn*?A2#Y7n-Fdcc`@'&\gLs[3n^IW_lR-FKf@PeDEcP(dlDXNT>Zkp9dqi/u+IWJ!No-iSVi*MZADJPRcE$-P0>=3Gd
%/pt7##i^^s4V4YV1Yc?%7?cEmF>+j@ZAha&)ZAO_D_mSa,sAo@Ab.pBT2>Eg5le"l$qp&*XV;1ho7Kj>9]`M\6':/^Zj:+i=:>h"
%)-ponGPXoH"B[V>6acYK`A4/Oo=esd-j$Zo_S`!G+==mIkS&5eo7Oj*B#`2IHINl^W^uUT5s6Nso&^1.l[JjljXM@i;;'nNYf-6E
%8Pcp>^R.dJGRg0M?&3Ck3=&maF-N/Nb_5dnB/NK9qB5:^cc[3P%=)+gR.'nHW+^Z7ES0,%j1d17-p@8i9PGZ<BQ<L6-700#5)=JX
%BT_RYU=LL*O%^nsbEF[T(X%-9FAg[n&V^oe*&jtM'EQhK1IIS!%d2?'2Uo7iI'soiO=X-#@A_S<bsqN9aj%17emZfgrcj^fk#ni[
%Z#t@NB8,GUX7]084?"L0RNd91>T";G&A)X;_r3"]5VEC.NFSh0,-J%3B5(\7.5%<)(h(E^5:R@3?4r^b`@a[NI087jGroS`J@J7(
%b>t5(,oSY8^A'2=$Q@T-#mA"<ZV@STJX5FrK6tnZ[*`BU4S-V2!W>1O9m9SOQ4mUVFC2)*kHYPkj+bGoMG]!3pW1W.*o>^`)"LAX
%+9:<,Ti&$;[A6\r*iEhZA3"g_`cr8Y!fO6I7t)*X@E'lFf"\6Qbc#u?br2Q[KG):ohgm1_<bj"=#%B3*L,pW:1quLheJtR*;G@RY
%^p0+p)nIS[<\Lpd7h%7h7e;-QP<$6=*XLC>%/PUFUbUeXNqCI*"FU;X7(]]79OPSIWoGP[)fp'4N6A?qFmgUN<<TUO$L=R98!V>B
%n$$gfi!RtK+FKjXn$Jc[s!&GfI7C$DN%AVZ6iMmk2>#=EV5`^'8nb;/CO</0I:bYte7l_Cq-l;+b$(gu^)RMjm3uEnRY,:8CNsf0
%aWNb^=r=B;$1V@,B.:3TU.]V]c2aL1F:,3#N+7UYC.:>Nk5J-M6pNtE.OfH]dh_oCI:c,EEo1S[#.Ks*H[><dAd2??=2"S6S0*?.
%$!QW,ou5W/1idG#Tiif`8?+V'JiW3;:^U]GLm5F:kL=hm-ccfqWsZF3"]k#/"a\RX&7h>5Z4[Y&I<]`2biH3!XjK0V;Puul)oT%?
%TeW<g1bTP&^ijTF;XB/.gX2ofo-2XfotYbC5ZF[YZfZGE8JM6Z9r9>"q/hR%k'D&hVo&%*QY**(QTkiJK`X+IXubXS1@X^NlRi1b
%AT_E)OXWA[M*KEFbGkiX$80dK47>O%;#0bl\5,\h#5'!/D[rSDaANjULJ&&;#DU;h\@8XX^h.Gt66?7D=E6+bTl*.r0(/%Zr>`&g
%cZKVr$Ko-0b?,,'973_.IgHP\:cEdNHL,%F.`jL<)%4q6KH0;1,Wu4(BSTNUW55;7m3t5-(p:]*]cI(:19&f"+ibZ/(/WQX4oL\^
%+s-sMqq5*V[lCN^%<[Snk%6idrKWgIQ1nGk9o4T_1[T75$gNIHhQT?>eE7rm"EKu]2K=mCB+uMVNIfqOY]"i,aUpJoh#YRi5rbR^
%OQ<(dDL9o;*Kc&X2V_;IS'saC?>/&IHf""!!:4g&U$D,+L06[(#DtV$8Gd03:!TsIYfV)+@=\X+ge/s)&'4l.C+:tCONUJS?:n?e
%CX?mK'#AsH37E70,KQ'1XgZTUZ]J=If('SN\Ani+<__mOZiVc(lYSi0K6uZZs"RBpbuo3]8J'Oi4<H]A$AP:u5TKL0Ok+:VAbnL5
%DNe$3]n/(sAYuh#&:&.eX7/Zf[0Y3>mD=[_dfAX1FMT6S?_oWB(#h*$^l1bULce4f40U2trC:*o=a%/@AIq:??Vn*!,&C53;1?d@
%0F3i0?Tbj!@9U*9UcDnEjZ%^7:RHgg:*NY'8@CDk0POcg<NU7hSVTb0&U[)AE\1N[NFn'hf,\+n?aAD3(*dL[]RQgkN\,"g#U:I6
%W5F?\W3WW3Z7rl/#RfrH:Mq@9X?T,Ug[ur]Odb'!%N5cg$%-Cl8J;i6KYh+2>br"/3f5C!_U0JC_iKTHNWD.o-3D.Z+lSlC>aOK.
%dm!_+KC3a.rWbOH(g^;f*:W9am$_b%B8Zn(#MZZ_Xm#>Vd]seTVhJ\>_R?P!_miHEO_VZ]U>cRVnA#MXjQ5L,4Z5f=8Gp2@.(kHg
%CK%OJWQ^Y2Js!:gHr4,DKXJ;tJu9pon/0Y=i\dOTPs38J-nibqmrJ!Q/uHV7Ifn7m5Ngg+A%Tp)k<LXo9S`!6ejsj?Rqo>D2;e*8
%_-OKlc-Dk,=N8KhCe&@(XGk'-p,Kc^pJh8FKD1fJQ-V\-BX78.AP*N#dGAVZNh5NH[as):P*ABc#,5e0m\o\F%9%.M"uJ#4<97>S
%GZQ?26J*\c9eVBTF[\#]hAF)cd<7aSBEXln8lOJ2<>e$=E^'u&#oGY*lhBu(.Y9,"@_F@mW(JOsW]K3,&pE_i<SKU)nK*o6GslOM
%N!HRDR``)EX,be!XZ1Uq[?SSRZ(rT^)[+o3e<a3g<c22aAeGa)cH?*f7iNa<%7CoTC`.O!_XG44qnnNSJY)Ge.r:\oABUE'W%-&_
%Qc"uYr7qCKa0@1T\?7$'nqMb;/np0\E0\,jFp!9n(*-qqm%DuXlZZd]!Y`:88H,$&\64<qUIC4I@`1tA.n$o@-KrKA'#*&#YENS!
%L3i&@lVG<+<^s;V^#$9%7nMR>ahT6Z&X:XR`!J<MdoO1=8W/%]FgC5c2-+q+*I&s]4tSJ+WP%)j@8(kV"0d3b>F9aNq5dR.K0k;n
%K6Nsm!"&67>]UPWL.B%i>r:[?]\j[OV`fGJ7EqgrPhRMBW"D1HQ&;D_Xkh3%6\W5/@=2W5)HU]#@BsiY_MUTe<BB]!&'3m!i#q3^
%<m(O5W?[H'G6dF6c/FiADQR9E[&hQH2:Ote;>Fa&5gU>_mda7Ymo4)FD`(Okj@l;CN/B-@]eQ1#q,>fg$6ES62hodpaPo?^j4rGt
%&4]./HZq?9dR-X86Uc'p#uZuSA[IGO>m?$*3sHWt7A+bY<UT2)^ee&odi,+0cM.FLNi6Khf:.F6;14n"f@NuD#>+d=ZTGa$1g1r;
%<T>uR1L'3g=V=AUB!<Sm[T3l;9mU2APu:)+H\_O57otE$N:$Sr_+gn+D^t)d1Y>6/=N-:6%C-"'AZ=?X<+j+jGf(Tj*H)acBKQ;J
%)s]<6W4c_RAWB\b-fFki7U5goO"[F]Mm+c=.:=$;,Eu6$Hl!R!pGM7+4$=Bp1B[._1ECF]a+F!E0#d:d5d2Cb]3AiZ['r@(7"uWm
%hnIYc\$_i(]<OJG%V[hn;#FGJR#-jSl^=]NMI_]W+c23kjjR3;:-aa?U[E9h6mE7HDOK``IZ/J"lFJ8hNn2VXXf(,4[-926KddVp
%2G^bN]39Qe)nrB>+5@cR?[R\SG[Xq^]#sTUkVetp_tA2p0T8;on9E-/lOY4.p8EV!MY=%k;).uRTJKg`XZn8cld-D&=QCTj4Un]N
%X*n]qHGkWVG'J!C2'%,g$!H\BPBTqm%(6njbRAH,3o8=\b$*G'mMn.FJ]m3[Rc>,5X/\m&ek:ksk-p#U`(?N^='W3?m%U$0nu@UI
%^"HD/_7%K_e\sRT;mB(FX7j=uC?;%h,1U_0L15RM]C;ZR%au=k@q*8sQ*A:+6aJY=+4)O<./"<Hj5kQd%s%gT2=3%T)"-0W..o(-
%.1j/A$Z2<elD9.[iV6hh;E#WC]Hji5/u"I\(*gX(%@%&Z%9upcO3U/j_A]??>ZZAIeP2q9r+$K\:5r=8UW[7D1R(Bh$f)T(+`f2W
%Rnm&dQa-+F[?BP4]l5UiX$k8'5er=e6KTjUFCAg]pl!1T9"8J"8gsMJ!)+kK2Y,$l=!BXUglt`o!8U1%(Wg"'j09*'@$UW`!+7dM
%4-,(;nm^bKR1)3f?,VCH$Uh6CNh"4QH(N1^cJ%=uCMa/-R/qK]<?:HX*$']:2iga&1[Smj6^>-=4f8qQgiFqlGUC^pl[5;1jnf,[
%#14sqg8W@RKBIEFA5hi#Cd=$!oI0Wf.k't'an5)nHRa#LD+at^8IOdLi<onI=l(sRIaL]t,B%3__eku;PIRCaEr[Q`Aom[O^#4l%
%4UQ;j$0'`YEK\qV=(a""^!3D<\Kfe=16:G.*]8]@(h\"g*_E#EbY*Y8k3OtF]Nk,$pAEA(k+,:hU>2uc6NlbTpsmFr^kC^Lk7fZ<
%=XVLQ9&(AW4C'Z"YZD\:$,0KZS`:R$)R>^?&mBg+@4N@9qltU/8UDo%A@uqkF1Z+K%G)p>%eo)V<4\GN\$N5N&71Nd.6`L1a`*\q
%E@+lfa-a&GIR`?EVrn&VAB826Cj?Gs6T7q7W['U5LYN7<D=u'hrbS`J]Mub21HHV&#UTZr]V&+u'*&7&RYh.<_3rLn(@Mn'Ce8B6
%G%G$Wd<t]&,*:_EbaD.:?,"PEn7"+Kq]ZX@^KnSsDQ[R[`iG9=,oG!d]NS%gGs)>dG#=$skQ(H3BI#AS7.(I8>R!M*Tsl)jbe,ql
%")mEe92X7r1=X"NM:Tu@DM`+sXCVSFjurD:*#er5ADk2TOU1dpl9Af@\?eU.mYGU1o@E?*RCA8:5+%iNF6S5X#;f,gL;W[J[g![`
%]MD-f[Ho='1A6/gU<\qQOpXGd&8.RRk@KQtQV^;/,#g&K'MV!e8t9fE[m=7:-'lcbj,M6U)F/qTBt/tbIH[:6IBSLN%$l64q2lXB
%?5'jXO:d8k8TN4F9n"OJ.qe:5)3Xc"NeBEe'?!@8WiL03kZm(;DA(5tr&&++PWT)7BKl4XB.jR*-;'/Kk4L-nZWUo6oI*Z\B:WU0
%DCr%W&+2GgC`:tj'\!iDY)*<)B==^nUT>#epMT:bpqbS=j?p&b[M4@`nl`H&)c^B@FA/%L!"@8VoUWeM,bl6_Hp:Z$05;tPQbO%A
%JF[6!QnKP[Cl=?VbLpZI4I6@<pmfJ(/%jq^N>fU52ooPd_(ZaI='Nc>Gjn&CKqN%jY;6FZ-MAf44)Jt*F*)U1`[EiK"3e&'mb4#6
%\AO@qI5%sYDU0(Rj=H?-VUM+S=:69+?Z%-W`,+bBYdETo6Ku&Fc_Z@4GL53]B"EOjS%(WM$-IE,U>C9.,B'YFJZRV[00h5W#2BrZ
%+NLo.P=stVS'9AHe/adD/ASa99K.uSk?6QYH[G.*2P*6d[Y`rdQlt5;C(PZ5`f%\6f^GCl8E+^aO_DC6V&)q&`+pi"8:*Ucf+tRq
%AIF>ZbWA4&h@-KXU;kQWJSuka^)++H/<_TapHES"9i&\"_9dp\?Z$1b`H[]&U7K<ql#I-F94CtJquWY*YtNk`94+j99<NUA0^GV"
%C\X$FFtnu&U5u!;flmOj?:`n=&CU&0;AtNc\9$W%4&blr*bJR-,_6lONu7q02*hk`\m>mmJUmfdA#*/S:Tf#^;%kp[)Of+^@04[V
%J3fPp35]HaCP>@oIMYMLXhgYb2Q='RoHmQ0EA_'4$"h^.Fc+'@#a*:f2,S]W6&C]P@Jj_+KE`Xb$;=o]I8C'2gf!,":G?:2'2(#W
%-V1H6i!9o_.O@M9&74[`BXAN<]ZMKtlI[BVZUL<>HFFejJu\_saTchi>2l5))mF=-L"BL7<9])X5_7dhf7el1d\%mT0%O.B``4n-
%DQ)oZL)15lD.&7B&lXg1WLQ_0"^2Q+%B-5q>5OsXY?@`1D/q5@W')C1TqX=4eJ)dL1EqZ*HEaaXB\\Z4Hah?EWZsj)OdD6.Ado>m
%.inSU0M6.al-dFjU06&7&_p\]mj&Z67*tSbbC_PsF:c\tBpq[tkpFIR#!TTtL_<YE4br.SCZRaG1HIYFX[1G\b6Yn3#3)&p37TqE
%%b&Wp-^F(Yh^t"0PJnA)Z)4)[aC>fp)l5VM>>o,rBW@JogO:TjKXIQQC$kO,q&!^=[B-fMH8MfiA4i\B;N;CCTo&V&;b],Upautm
%g!g.+JoRO7,'JsNSV6kta)+$5Rd?(X;/OR`4]g**L0QpO/@EF<mP%!iZA!GBK`\3RH#ucM7<J5;WQMM.H"6sH=-rtXfc2r4_R?QI
%mK0&NS+B\G:B[1)%%oj:++3jKj@)T$Jc_lX9O;gO0$A3Q-)b^;S<R,+1?=el3eN9n*knl:_sR8E&N8HNOXS(PPA381QV0G;^:hb#
%$;['&)6s;Lp+CWSH?>6-kKb=ZQ(c_6X,orFWZ^P%L.\%2nL[G:.0gLs8A#*6LhS$f@`qK?H<UG[&(FRAdIg2?EXmr%a\^'`dXs[(
%L5(a;2ZR7:l,!'ml"VP05,Wt'h'?D(UBfYd`;Ij/NCKK/^pS4<Z:5=fYV(l/SnP>W-g3aAa*[L&W\8L1N%WQ3VLo*F)@,sM#CI%l
%F*dIhN.Djj3_L'0p&Kb/cjGlpMA%6b[6\2s-o%)J]T?X\KlR'!-1b6?5@H:fW[gLb*?oQ]m#u'>8iZS9lnIV.dlCB'hg';VOlX].
%k'`2AHfZdKVNq;?j*l$^R-OVKS@H+IZsZM?I*d?60?D@?YjcnoX^U=ZLWp3,Rbn+Y<6l$;^Df!0Z]`O;MW[L=JQSasM'0aAbP3S]
%!7TRCRP)_eYKk2j)46U)m^a-l$9gSd&CGaE]mA$6]R(J^b1<l$'Q:Q4j;`>E!19oI8:XtD.<&A]>cqQqNZbM(<207F9sno0QIs:3
%@":1p^*.K_g$5\;8&:b,iZ5318_]OM@l>bn?"pTR1js-*$P=08&lHncT-jHeFirNT/=QrF@ur9_K/=f,+]No05M!*?m!F%g80-4\
%fsit1i67O&lj#gNM+(-JGf0kDJt2eR-5*/%]J&gGU3,5;oI!Mf;?Uh`ONq3BR<67r3@?au9R<LdJQ-K%?Nam2X+alAW_i;MXJ_)2
%5oW`:MZ>FDbj4$)F11[\rWoAc1oB-O(Yd)dNE4I4CiJV)*"X>uKKa(:m<TikARpG[pEN<#(G<?_KE5&^?(!R7r`j1V:AD/;p8-L1
%J;>K]D9p"hm5_F!,%->c!)qO18FaLt^>GGQ>i&X>`<l-,#$Z9mil4h7'(r+8-6E!Sr,\5Fj*b5T^dnst_ODu<Q5qX\WM:fU<[Sf#
%duQ=;B8p0:Cq7k#!6IbiEotMLg$CU2nuSqn$87.s@iuXd;g`Q8(o]b0!4Q,JZ;*o'+SU)A?aC7<P%pPEiX0cFY^'mjM<.t_$?WN:
%E@[V`NEG^*T3.&WEk/-O>Bq.r@Z9uW!b+;/OiuMr*,<PDg'+#I9`1<*I+m,NjTo5fimj#8EVdX<7Wl2moe=[%?/,Mlb[_84)St3M
%INghSYhe'VfPJZm=TH1416TMDbKsNYI@Y7]D@"<mm=R>]JroiB%QL#*Q\CEWTeI"ME#\fK#[0GiiI_@`C+0k.aLrB&)7CMi#KR9B
%^6jnJ60"5'1T%K$ORGH"QmR`]RNNd15hW2Y]ih]tnDZhnQ7\rmj@gV\0BSS)V0I3+%P;d[#XA'e1P=nl2u>juQ49!HhfroM_u_Ud
%"?3>A+OQDtZ\kL(a/AV&_6bhQ1/UVLK`#R_&fhY=-4u9h;*<OR$uQ43Ua<(HQuBg29,#Xh>WOaD(X=Z&+qaL.$2#Wuj"8er(9(O_
%,Kckcm'></MRD\W.Pg$GW0F7_#3:.A`%N6+[?4d#V>*hH8g;S^-I--]?\&.<r?6X)ig(Zgc)^n<r&6l1hCPYWTK/>JSd\oL1S/pM
%SVg^fNFe56G\Mn+\S6ApFL0EMG64VNj956F"UhE5G=93Y0$-fmj:j%BkF'2F+Cna5>W-"T421q3H2gW7Wla2-d+k"=3u^DW!%O#`
%JC+apK,CcUbm^%'a9Sud7&Gi1iV>?\Shl[1]_P"?$om+=,.CG-7u)8t3-:K[%kdfr2-T-$0Ob=*nuWUPjj*;N(sEd9O#$Ol3=Xu.
%BLo/Yp0&!DC>='Z<p[;(!r<&%`Ee3n]YHpEmTeq2X(<Ki_e+r4q03h]9DLN@MN`LNNF.]EM<)l3=3>)r"Q&gb1.#H%lQMM*%:k<g
%]6"-L#-J"3[6df?an_C*:<JeO:U@am'S(@RlmhY5'&c;+#P`7F,<0.?df9KK?]&NV@08e12N1Y+Ic+G"(8ELI<Cm.A2d-QmWnV#-
%;!6u*^jMKZ)^&=f=LNG"#;`?rm![R>`PFem,Y:r65/j8Xa(<?N]XW9tOq@u0TkBMtVp8,9YuhPH_3Kk]@h)4'4m!e2p_Bt&>",8q
%a%2Me]l)p,1.d\?nntmo-*6\4IPGA(H9e\K%G*G\E3TWml<IK9\>o#rAH4TZYGSGk2[G?ggG=PT6)J/QF4j*tYSi#)([>Rr:<*SQ
%MZmYcDkV<0U_4DAJGmc>&AoZY*J$\mSTRu8:-c]5pTA\]$IHiA)$$6!W.>.\<m]U#"Ila@"8'jc)VPN(Fnn1KSW1?-#NJJb&(.eY
%KVfDlF^_nehnolbg<5jnM++MXCmF=jh@MB.+Z:(L)eOpt?4c'^\iXQ:EjsKlm6lcZ1!9]-?+8!C-f6:"]L3P3Z:?E>kF@?MB1&)B
%5j%h"L+7]rOMg(13R)I\@a:,+b'L/?R$$IF.`XUlD1H$,OisSU5hI%IAq.Q4LJVTA-ipZ-$BUsi%g4><$INgh!,mUPW<*Kkd;3`=
%l4=Q:`rncKd"[V_s"pRo^pr84[;MU@OmlqnO<-RY9eZ`,V%P`dQV=BC0Wios2nQmc/OrsLWVH':Le,EB:<_mImfB3`0EuE>0I,k!
%YcTV$e6P\NhjH6r.mK,E1HAC?Y00N>[>/_-1P^2>JYq[ibV0kh-!^$h-Brn%A3l[FGg@[V]nK:cCt6[%/^;b]V?r0NULnLPUr&u;
%g5H#Dnsg1KqHO)VlEdf5pUVOelh>bNR#c:;8CibZo61^h;ns?7>hB"O-J'p,H1(?N5(YjUX=/@7:L23F@YUE3)#C?oM'E,+]+)9"
%CEo_4Ts1hDMBQ>S'BBm>q_f/K[Qn*p1']YK56iP'B"i`*OL-pn]F?gOjGT$sDe4IsUoc%d6;##$J^9cn!eDZ#B<jiRU).N<1c#W]
%gIo'E9-b*h(#aBQ#%E4lFqlB=;1H]\7Hg'A0c&FeWhfc%G9,O-9)'*A\hO4m5sNAg2YRDS>]9?'4I;%J9_RRcF:2oGqd-,tCZr5'
%ppMk7jkQ'^i&SCdkH_d_4\/W?Fs]='hDeBL^0/Ii!O4m9B*D1]p5jFS7ttQIm<?`AJ9c,DM.T4rK\fAOjTW_uD'8^Ji(AO#;&jQR
%-Jj`A0/Ckt]ic\"X+=+D%t)_lCCL5;HBd^,1IX4Xh?X3;hp%?FB.K)VaICn9Mj'8g;*b_pC]ji]e6o`>bQc[2;??Up"qu\SWcTnP
%.1]9TIR0C/+6tHC1U/M(qW9!!Qc<4seb8?^9(A.V1(LP]"IFab?K/q=TcT*Ih0&fWFD_[P!eFS.N@PDQLgg3o#8!KfFoG4]r2a\c
%;D?gEAh2.Tcp"?8kYb@#p6#S5e?*;*(;7sVSjeEOQq;q@'jsbno0P9(4V?!1s,u^(PWlU<dSQLN?$1`BK5R6Fp7+ai``gRH(8k^%
%<d@GT[s=iO5/akg1u.@[)X9CiRBn(n@qfC^>A#ps4=r'*9m4:m^?r;9a!/^PdEZoq2ona&rmL=0\/c1.TX-Z`]Hg9o"GgN[GhO:#
%BZ&i:Tg;f;r:BZ=Sf.ar`ZT#2J5`eLI`i&7%G1kWJ.L7r?J`*S6+7Vd#_X>n;[iSVRi>rjkfQU/FJ"+[cnqOaLD2O%0N4sC5t2TU
%!<?F80Vng76k0^VUC@VmW_F@59'Z-QhXjCaUs$X5rK.0Zm9L'*BpV+u"kSAuO;IC7eh@?8jp(,X0nNgt*Q&u?ok:Q3nf:UGN83H]
%ftP_g9;X7Y!T(*IGhFoD$"BCl_Rg.sO'J%=o\Ur6dT+91FOq#tA_T7/KU;]+3i0)t>,-goEIICff*p)c@pVF.G..r(.PLM$lQubF
%DnGq1IgqO/p(^Y'Bhl4\1Qr8?m$U:fpS$X/*1B!Og7;kpel6->Sm3A*fnGi9V(-]uZubcT!RPl:31qA:_cWpO#X<:=Wqr^7j_QI&
%Pj=<RDF.ud-:trg\@qogQTQj[OiRqt<jE`[C*m56bKtS=F6A6cWWt1X"r&(2c[klo+oRnja*ND2'Cc^A]!t8joUu21E7N:*.YQk1
%.A#_%+6iG)bT"M3_J"&HJ'6Is0jTS^]#mc5=1H?4o4.]$gXUg,k/\+!EG)bof?gN.#W'lg\Lo1oW?:b)O*s2$79hQYbtiF;+OT;b
%lN)lR6'J"S_/@?A(>Os*8)]n[b-)H6/b.B/T/8LoUJnG:52[)1?rlH<66@>99IP"=rf6<<"$?%,!kEs-H`i0%%38JN"A477IL5\h
%n;$2^[kps*9P2acl+-6ZA$ViXDh<cY*NX"u:Bg3oDNI_[82j'18U!c]X<%HI,!=e'(=u2.D3J9^\mLQK'Md4Pl]CRIB[W2R,4csH
%dHMTLB=Bfd?IJ:gpUqee98P9PJI'A8/bB5@l7NVN\tSm""24\+G5oHtD!KGOj<$-VeF"'5LUilj`8Wk2VT-7VQ%>E^F\";oa@"8:
%_d..$R^-;)=J&Xt%4%^2?6u+&doePi+N7^ldF4<8V7A]%=e(K]AO&oaECfooAo(]s2P[/(GFWPV"#jLk<o_4&lW[:RNkR\q.!]Yu
%U;#qmT$_5qcD.ctZ=COC-N+g#[1J>\W,qriC^_fUZ9NeT2"GM-BF,C<WE;#(7[[NCl/,&)IQknWo&\Q>s8Hdjg0ZX*UVgh%)JrP&
%=M,01ZdjQWrrFfC?])TIio&'!%mMt/nFM_FDpE::M^af:;fl?7O_"Y7"B2GcG<:%Z[A&`8f3[tSIZ1%_Ud#L,KHI6mj5r]^#!_h.
%7j<!6T7JpZ'-',#6u$WBnBQI`5;lq-f'4D`i.D-?1=c!Zj(gl(kIQE(ZY;mBHJq@NeR6BqG73>g)b3\FBpsO,+)g+.GP3oiDM)jU
%n.H1n^/:4e+!k`t?uD[rADJAp*^!g-)gVe77bMYm1Z]7;3T9Lp0-,Mil`LiEGMtZN,oo07Dqf?AHPUs]k?-"cV7HU0;%:ndY$N4\
%3!lp2jNA89'jp+i0o!BMnG9p">%VDp.MTI'L7tLArkXpY\k2@(P&r=%!kQ:!&>LBVD[-Xc3lV]YQa3N%4J7_f"DR8iTJ'_tnGO(e
%eQR8"hiF1:@oEfAW7h8JMY6Xq_anI^S&T$Xs)dYEoAoj;SZ)99/S*FJ%\O]m4N$n0B-oXQaBH)88"P)8]oqDXhj&N&B1SFYXbX#F
%H%R?b8C4i)hh_XuSECNq@PniLp#&Ec6Hkk"P]=2K'6\!2\a,@WCu5'`?gmciA99.e5.mQ:oI@:Sq<5_%S`.[hdK9l1iU"H)8"t-I
%De\,<KI;iUmDaN'nY/jYB"OFG:6b1k"2N5A-g?ZJ4JDoV2maTnooj4]]W7tU7\?BKQu9&,lnV'fk/NOIbk_Nh!pAD/,\D6tgNPmX
%1M!>Fggoc'U]2NHrmthlj)1XFgRB$SrPG&OQtZeUnFC:gna];*1Gpa$Ap6A,N:uSLGG?AuFWb+Z\-n`V[+G![5FHRN/qX$@C:dV]
%9!AgNn<"Xs\^=kC=e9+mZR^*64S(SF`q(n2@`q1t#dqGd_t$:O-2VA_B,dAg;2T^Zc5RF2FL>FY7e]jTc04E'm7-Q+\M.KVg5Q[\
%_R.^/(=.s=q/+1iZm;f5+d`#D(reYM0p8R3NR;"(@#Wn[?]=M]&$j<%@;1LValHIPGhKYF)H0SiBd@2KN%t9EmMN8Grlgb1]r-gC
%o@]>4=Ikk>-23o`QDsJ9nbU[J2qBORU@G*R0ZHSe&hr0OGIPTCr68cbj'5aI6g"M'k8Ku\DSsJ\)tqDKg'kQOh,_3tm,-(5N.ZSb
%C`IGZBH16\JoMF8IlDCJ:Ytm'CVLfWQ`jdP(9+jd4<l@'$Yd&:CnnUHP;@WDRG>[TWsPh'EK_KJ9E5o.n1AfpMHjA&VKcqRA4g%)
%KIOmt^RNZHHGbto.0WDak9=[k58C2qC;1B8e_-FkkuMUX:%oJAk_W\AVG>%]0m+iDoH7K4R@%24^r/?^2U-!!+p9,oDaS,8K0M.r
%!gb.<Sa!T-mRF-_`r5WDF3rojRNiJ<0IL2e"*:LAp0c0N?WG@)#*q'3gZ&Z_mHGs*DSBDdc1bh^ebgDXRESWiim%,"0epH=8oTL'
%4KYMOB#-eBcV2m4_3ri=*hGB!ntRul?@"[@)K.!9dAP:e=gBk?Su"6QorR(!gh.@74*XeM#o@5k:Fq"hjDEGmW0mDNCeuR?cGm')
%r+m_B4m0i[*%lZ0>OJZ;kK^X2ko@I8VWT+bE1SG[/]i&H)`5k3URTYVV0$-1DhL9Qo6Z[GGQ,I>hp;1<9^)DVo3+5J%=/\GYtkNS
%eoC`0iiu0hQ9a(:\&<%VUF!kj2?:a[&%,#qb2%;WBj+aXQA:rWf0Wn>^bV^<O-XLWmBOmkp9rKq[,"bAmCfh1>0e7*r$MDR,thLY
%>-'XYf%O'ndb8;L1[E53<3Zp"pJ1%M>jPS3E=/;!Z!!8,7[n$%]sEEeTpY6,/L&oS\bM_t!c4[73Ghl7:JXs9f"[Z=D(LNtCa*";
%frZOUZ[:0HRQXn.-gd6RK#aI4cNs65BABuR?)?<L=3apR1W^sH@t/,96-"95h<FE2*mK_lF6;:u=U9s,"ofJ-\?U";j.<#Q**nkV
%Ef?FL7u,0.*h@KOnCd&aE#iT(@-Td/YLpX9mE2ZYG3+a.;C:AXq,W>sS>)u(#%1]ENgY"bElDfq_Tb6TZ9jRk<I9>NFoP_<]6^[[
%XD?6)\)!oqF6n(B-_9[EbY>U(lh@j"`""bN/,81L^HT%Um]iZREmKLOR)_c^<]hNuQh@.D1C2!!C>%=4<]P0^Th;ct%sp0F]r!<0
%_X"AV]A?*9*;$,kKbnYb-MkCd[oY4h+HAbVHgRYffka%XoA?"WfO^/e@96p_N4"D.2V,S3#I,]XN1Uo'E/P'`?e`9h7Dh=+M\K4.
%Dn3(_n)A$kT,)/nht]?$pj<lYV_?/'=^NWVEppV]Gk/R4h$Eo7b@[g4SnUmsTn**lT+8TlqJ0O1b5WGE9DRJf_aqSmY$qB)^al:Q
%JVuqK'"GMsRK@\n1GM/PT*YP7IjP;h@ttn[[_ntM5+OkJhKl6r@*_!SK't<^395%?Q_=]a=pX4\D^3c52`dWbCL]a#d<eO=nIu7_
%U\6n,7iK[fPjZDjUi.7@o:.$VoV&Uj<83O'TeMChdUXKkOGmO:Qr<3$C9FF];'0)D77g-f(;7hM'%'eW$tt)8iJKX_qjU\=B/0P[
%Fd\<He"^')BjST]=Ri^1bJaSJHnM#4=G:uUo3@=MgK2t987ClgAhsZ*WUq-nW/Z,B";Q3f-f,(=Y8?WMqt*>*dC3If;kr2<Vfc%O
%QsBmo8QWXE-SI72kN$d-;+u-S.Sp821M170FM$#^bN(P\Hs*#*CR8#GQ+>sg<&E^=k.N2fm'ii1[W>rY58hcQj3.%]n5GAVOmV$:
%M>"/:+Ps3LLpSMKDe/KP4s<QTN$huR]U>;[4h.#Op09]WBu3qHVAl7SPob&=Xj#JS]UoL3YD(2#e`4b6[mrhup0)0@]p9q-,pNnH
%p@cU!A/WGK5%e`I$+[Qi'[9q4j4dhJ.LLH2b^PZb\g&m(UAZ!^aZlEl.f":dSM+Bu;S%shn`.LB.%;b]*:0onC6k#O_JXiRhELY]
%`OBNP^Tu16f2kPtm(@'i8'b83(7d#0WfKL2io-_6!i^>W(f*UPgEQQDq4co%a&pLo/)_n;>*!S:4)Sk7Opmb]1iF7=jc,3<YFXY2
%kaDcg+0XEboC_c%nW^#!._0d]o7He<O/BIgqOS^3CVCBlXq`U^k-^6E,2O0/#P4EUN\fKjUUG4Dk%<N[g$:P7%BEk4hno%e`-YXZ
%>i/jF]X6e/On[G=NL-YnehiheSBXUr1=<2BCt7ZE*-?*>]pAJ[Hn<6S*u_,J>J:ss[t67LGcNSl<a#Sup8r0Z)t6s,RhuWQgCKEf
%;k"jSZZi+[o@mR$BoCjXa-GMpoCXY^T6\0<hEO7$+qI/#)*Gi,ji`FV/&j_GZM*i64qJ]p-3*JrZ2`6H51qT8`i&GhoC2D%SL'nf
%cQ9SUr>`S4Fe<Sj)WbV7abF.(<64u82*MFTR'>VZj12kJG)A1?h!*XSS?MWOEW2DuioAXW8$PRT't[8kAZF:X*`BBM2)!Nu]((*K
%ent(a[4^q3epENpYm%r8)?Tojj%;b?+*%hJqDUQrmn[,JFujSr"mOa["%fi`G^\L']_;W\p>(*M*i/^$^X$7,<Z@@ME%GtJOoK#3
%+4\#feqb@<4;2tFa-iFOfHW2c0#PKs/QD$Nh\o;9akLW6]GO-jCk(6_&E0n`2P\nmp*RZ5cZ+8?\sjrmWC15OH1C"!VH-pN3mCju
%VeOJ8?#ZsN8*$f[r\c_#-5/0W<]/3<NR$jKEuM4^R.n[;1AK]Y;C:8apX"<1oA&=eNc8=/T+@[=jm]Cr<jj?8BkGL4mdC4`\j\0Q
%P0_&%\KDLQA>fAP#WOU9(<8K^4_1GZQCI!RDh"GfKD[7mN7s[.^4r2FXf`K33\,+2j[f$]GJ6?%-K\Yu\66L4&*!T3VFY;'dJUL^
%Y$Y"EVegDHeE=KCLIObF^MmV'H`_7f4NLUD#nXI.7#e>]".m195Y+&!22n]\?,l*J.R)('EGn56K>t:s-6W):$CG+2*4W)a-N.Jn
%*s"ssj8kej6+\]!:U*6AL3GuR^q+[qfBi>`<Jh.*80QCSjLBt1/'C.?@$uf*I5?(5>kDt?&Y<Ig.XgVVhEUnAX'.ZG'jcN!hlF"Y
%`Eh%l962E[N/l$Lr2"C.^/jA2U(HTiA!SS(a9T[V$;@2E89mWT(ON;s\EI_G9n9rZ'9ECSB3%iA&o[>W10QYa6\C"_GI&e`=A[K-
%bat2qmL.B@SQrgS]t-Vf4C03+%c0'T>>6B;$'F#Ml*EhIcbL7a.>2#5Z]T_ML(TO88*8*-hIp%*",n2@qqH,^!6oR>I;*k9J`l(1
%"90@E<AAEb!J=3*h_efg)1N"KNQNkRW6[i:TF!L:Hh/0+THXu($XNbNlYIf]>>VLp]D6WiQIVW8k*HXY"gsH)#u=b2.KHf/DSU_a
%N;'=e<N%&=$"uZEEb$Vq"r0U_?6NiCS+?7\FWq(Y?a/>D\tKTkDbO:&X%lS.C;/VA,,e&\[Ya?t82afe</'7%XDRQ)o4/_*[;YZe
%G40okEBA[hi7:^J(l>Y3Ce<]Ve[bc=(n>\[>#7<Yo4Zk-J=<3!iS5;'nO=!jK)0N`>1\@03:kna:[1ai`b3+MU?`ap+W(OT:"l1d
%5F[nfTK;+L/?&Y-A2_3K+2[;>"8@jYY*>kN0P]g?Eg,^4i&YqS"r5=$b`sMS9;P8D2kV?K$c"Tb^G.sO'D]5!SWCId#(RV`D(:T(
%hsi@mhRdVD:kS5s7X]""nEeU`Va0u"M3Wur5D8=S_R2(H%gU2!J/VCg4;lKb:aIe'^l_7_V5jdm"fnrZL-!hIoqCI:E4d[M7`CFO
%2_B-pq*6C%!VJ0t22_pU#1U39.-D\iCT&qf=p&YN,,5IP8RHg7>#:,Zlc#;lLK]_TGcG=2?=0_,gNL%WRS_al/T0-kb$Ya_MjH<N
%Ds1rL(#\C%rFYCVCoU=(];CH4e8^GT?>2ZQJn5#Mjb3u=UK_l0Ae(K(W_d($G;`0oVY_0bG7>:t27]hCnpISuL/=FFb#@u0S>JiO
%#GB)n2pKekT=,M3a&0k]<#C:3_@mskp0!TfK$s8?S2!d_6E%&(Q#1inX%]?"TVdB:>dN$<C]RPKKZVu'>s-0Q3g0(/T#K?IdR)bt
%g$EPc6M5.[jl`i17Or<`hZKgfq$'gZ#e]T6"S`T_\Mp1MRTI`pK'L+`/XPQqIH&c?98bq=(#-U5jaVTgb9S&-l4lG$YXrAscT7DQ
%[Plf`C@jrQ"7<#c?I>nKFQqAHaU=-ZljaH/L"C^0AJ9LDnnDUW;jUF:a0i1o\$kXO\_c]>GhRZ7Bg8^:g#;el2USa$i67tP]fI7M
%Bg6IAU/A=r9;5jS;3o`"hQ1cuc)85<nh%O[rdIM">IWR8):>$62%FC2drXoSmBbO"Ni/Qug\RlVdFs:O7_AObnBn66oQb8RW]aW"
%mDTjNe*d2jI%`Ei!gfNQC-N07cn_8;K+$#`<r4<`%0X&1?75^,/u%=TpK1\,Hd"8*3grj((2#\<I+mPgM.SlN,fe(4h+^7MoO4/E
%k#5p0=3g/W)R&=77$AP5jS<<$Ku1mA7e0TJmS)IE(JU"hV+L+j]#rPs?SsU*c:0VL2Ho8$?+pNk8S^A2pQXtGk?uH*SmVu5<@*,R
%H^Tep*QWd\$_5+G?"$-HPL"PPF"`@sQs9;B)7iDGhhmRk.3FGD+7IgYgKTM.XWWJ8S"jL"OCOAKK*n,9%,[!I(4[4[/*<dD5R#8+
%\8HfIJ9q6k"r11R&\=jpbccch+s/R)ghK0`(;$0s&o+#'6VSEb#jOGd#W0if7'6]A18oVZ`OppT=MpH4[/(M6K-S"qnr_aYMF-t>
%Oe:b!.\W;OPXcB:8hDlmL<M?TGa65L8ot10SK1PuB-D,j0X',Z.Y[-qJV%kKV$490%5i03C2$%h6&O+C!5N6OJSXr(]a2Ip(LCD7
%r+Sj,*Pt:n'ROu@#TZ:,!,cX4?nEoPp"7i'lZQtj)9q'8IF_&m#\i>VXPG1.=dSJ$m<5:,-%R#F133Q4X08o<co$Uhc]Xf;/^4C1
%bJ5l!(4k<r;ZQf6%=GOuUj2<06BHfb"U*M#C6mPY8L(Xef%)_j]*b.%Y@!GK>JI]S`mI%e%0hg.<)`6`'1I`jc'\-`kfc&7JMHeS
%5Rt3]*l-_hK2ZF6_MX(gl6heKo>QWg_J.:%eHMa_jb02R1?5NAg]_%+jgCYu`2YSm?eVf^%B;(<-7:p%U$a]%e6NMNs&m!6hM38%
%JII^!.@P([Rau<)j<7LP[QIFA`_`[#eL!?0W.TjBrC49GU_GGhC!^YIBYq:X+dl[S)`=n`nEdKCrtY?5$<J5(G4g3\O!5oFdK;0F
%U])D'H2P135lO6l&7qJs%]'o_DH`_Kr]7-B/7F;j^N]2T)QkEhZpJlZA!)AND=V7H_Hu#bcA$Xgk#PmT/$9W_<7a,qj-Qk9Gts[T
%NOY:#9(fr9EP$FaIN>uBfM,rADg%6>eS[[aUbNP7Co(k"GY(r/A6F_=MV)R61@AL=8HNrtP=tgG*u2f8!ak5]XMP1Ol!BQ-a:[X2
%bq@%2g(oim;=Q89Q`<Oo!^6.;&(.GM*,SXO-r\uZZu8rt"<V[!U4Dh!FFE`iDQYdI,t$W#(G>?c0SsJ:6:Ed\;oc8;V<DJrLR&;*
%>;DAr15YSL;A_"BHFG6Pp"Ql`!QnC3C!*Q%`&TKZUU(tWOTNUh;-_%Rq0gYYDCa5_istW3\)F3[2$/3RUl<FULq)26D%La$)R[h#
%0`@@6D[EH7#`R2NDpulQpVkj-U.ng4JrX4r,<aLRMtNBWWn(7o]?.s5aJ!#%^0"/i&#4/pUPk,Dkga_BQ3\=JHseeWLZE56eAdsL
%@PmOLNi"QGp03B.s&PliIOihD^I#;]Vd>1KCZu*=g$Q"oorV3eQQp,bH.SBcOG-EXc8=&D6+f&>%_XaMF')98rL[.ena^M"UhusW
%BOP#.5iVV-4D^,llm@hU6Ng;^%`F+!3k%.k$.XhD@+3f(ck+G#aa>?A<1O=H5CglB;.;[Efn_\S1Kd5=qoH'5AN,fCas?-$%SIiQ
%(/W9Q,H8:rUGaarJX<eR%lF5>XU(SIcb`NV#R%:#a'2Cm!FJ>TC6h7\;4`Jc9u!kmVkrWWS(;L5"X&+Nf2id8@g\erS)o9F!H#^N
%03c\YIf$gKPD[,#(.NXmH;f&G_YbT]<a8(a^FEF>_"rMhgI=`GL=VcT7d:Jj5l>"9;Sb^h)?o@?phfYdC\hB+\OE\2A]M!-[BcRl
%ps5\@q*s?i2`;bW"AZ+ab-"T8=]QMC'e#ogq9NNYZ^lrLhONU5"o!>#.67gHP:L3`^PNp3UVKY-\Ua'K$6`;=F`OnSWBX]7!l?Wm
%VO]K,f%B1O.JiJa9X]-]M<'hCKpJ-VYt,!'1Pj^*G#no-b9`%i?V-n2[@M00JA<S5'$<c"]=j"W.k/C&4V1GWXedtC[ncNJP&FB)
%qo&_W[V)Df29'O83lGJF%dnM"!4ga#d$n00knWqp.#jXbj-k3EZ.WJ"/ZjH[a&/!+1m"@>2u"&`+Eh6o\j*rAS@4J:+WW]&#]o*I
%RZ]qY0NXf1]#%^^fX9Ac>F4q$I/S$g<'q\[A*7H%p_21uGUaoAgBpR@Dc,`Pm/c0Z0c`*8WjHNGLtk>7d4W@E1bj1`[)AZU6LQPe
%6dC,4#Hgea`^%[Wo-[RDi$^*=>_Rep44(-QNqFeu[^L7MD.!'X8%;eThHXalctLRR3a=DJD+(+sr:!1&G2!P@,r[dtVDcpZ`ViVF
%#"Nb$=>eN1.Fa/)i1<kQe<C38Wn)$`T$WmA>;u'-Dm=292o>?Vf)jE*]/13;A6J-E);i?Zb+$M2%dU"[Dr>:dj0)XqgU22$,qAsT
%Vpi6EYl\m;?ajodU[kSn)JD1HAJH!jUpP#sV43tI.Zdh]T\+NCnSM?)9sFc!?D<q2<T_j"<3<1X[=6_*DZ5*n::<#Iot:qVA>uSs
%<3s(GS)$OMN2F;VWn675/2S42B+mq+<bJ%r<7@S\.^!*sDJa6XdUsW0,d$_iJ\PY.q3Hn,E;O\Ykteq!9<)Zu*S[%V`TrDTUlaWG
%'tGKBgWgCJM>p;t5HnkYhiJPLJPE]0mEr;3UN4]J@Pn%11j2nDiD<hO7cj>V`3$-WrVqOT!t>.i$J85ZIY3+Qe(Nt*Fh9LjOM9pc
%D3T1[NX#?*s1$1X4a#tLqa^C(/aVnC_`934=$Psl48b+J[!Z5H9>48+P6?*6Z<,C\Mk$5Oc.oRWQNhuP]44Rk5qj-jACfiJo]S:P
%D7mLW^:h.*#LW/lqlU'$-I<c>QcAJtL4pQ);6+uc[T`(SZ)8;A?.uldA..8\oMf+)gJ`6K&%O.M4Z,B&g7qrfe?_#MUFsn.e1-5g
%HF@0emXOEN?81*QhQECup,Df`J+_4Y;Y`6d;n@R`3qPK$f\Yr(ihfdoVm#4i]11QV2^iA&!=H)ncUhUq!_l=c=R=`W]?lO+$sa@D
%-Q\/?Hf;g$+M>AXKe-m4Q]'/c38a/1I)r2`NoPN!cglKO[uC6>j*YT<f4Xp1V4h6YcF<[%hm_\jfj?nf\+2JXBDH)WP[?Mt\,.`6
%\+S.f?TZQBq^e@%LAn%0I*S9qq7`tl0)jRE4saPp&(E1"i0TMrm68_f9m51XQ]C[:KV%Gal^g=`S8\.)4t.`/\H,n20[dpVIqH?u
%o3V;Jd_.`GOX94`PGC/%h<D[W@ILVM.LMW6B@_D7FWOH5/.h7oe\2*)AhsM`C%aDXqt<;>,o*>"r[Rft.NI0@XQND`A,7oX.>O)L
%2jpcdf?[s:Z%6lSr65jGI2G085.E)3e$n-<0eM2;%>;=TUoVkMK2alBn*Ss6V,M9<:IWMQ3f8p>H]E+5>=[G[^LSA?hRec^>]*jl
%GJ@90;r7eg#J#oa0A53$$'3n&J&=!4KaRfqJJ]H?qnTM`2m'ErpTE20N'Q98"XM=C)%U#0MUlHf;IQ@[]1,_:n8`>8(0#0YlE8`*
%kL>[T%qWbd9Ua+PkhPKa6a'eQqh@FU=Qkgr!!']U/<%b&.Z+Zh]5!=VmFqS"_J@..+'nL?Ghm'e*9o\Gp2+rLE*kT%s%K-/L?=K,
%JH#.RHd:M6n[5L^UqKIOcRZJ(.NIWlc8eA=]6<&73N2CsQEoeT[e!i";9-q]VbS:^;a43jmnD"3,Q_9$TSs&'Bs_/9F;?t,ooHOo
%1]I]:[e%kk#:C:n4o@L<mC]Pe#LPHp`FACd@ipts]R/<F:SL1BNp'\@cLn3NB!$.CdCn@G^]F.6H@ieBm1)W>Hh<i@He6j?h$YN5
%bGtgFq4N%i<_tRd>NP:$A*gnLAXu$+Jh#l=Q2RWSp2VT2lor=i9T%?M"!4o*B*D8VnSR<2SF/N.A#Ju6HO#fg:Fi#f..+a@AL%*+
%XK!cq9U02<\)P,c]#muO>G-lrX9IiMW400:XHM%I*m;]pIp\`>/=u;jBWGX*F:kDc5?J<A54RgCWm+,L3CtTt189e4d"WO=(V5JG
%XkrD*<<oQ`b1opnG](iAT2omA[2m`ms2;V6G$DT(0)U3[iHqemXMg,NH1mD9>IN"fdX//Ja\$c?IEqh5Y5Q6?Oru_A,u'Y`Ds[5C
%Z6)^j+@#uN!7'`?)'9LKbg;i=<2'%54]-^_*iUo8F]u^k2t'Ieiln[Y:nZLYi4`HedsKOVGu#&pE]MtqRTt5Tn_g2r=1`csXPkll
%+)X\Aj`Kt9<>T_gKRC;/hA^MN0f<$O;==s:"5;hB-O>\T:j[B4#X`gZK0OGK=#2`-ik<+Ha69Tq;24=m1oYc@kMuo^fj%b6"6;ZD
%rE@,;e)j[!kQ.F"X`p<U1\A2)\;l,kPLJ0+/B8q`IU*#93Hf@6MVl9^cb<cHaSYdC!^1BIDquq,niPBC$3HK6MQt\m)rZ>5/U+LE
%(-20lqo1#H/NYb,jGomSf\T;iH#eg)/o5GdR<cFQ/1QA&1\3X4__.7CVd]mREo'.SC6?Dg_;;Sn=YoZh?E>\:1N16CiAHhjQCXGq
%o\@`oqG#8Zo6X[40O&:(?GkUT%-a981N2me\_UF.N"ffo05jR,Mj8:-CY_?2mr\oLoXho'ar>#r6g3Y(?/Y^kKsUfa+)Q01\=D:"
%f^]t;>S`f`AuWBtIQ4(\\&CVWd*Mp]3XG[`]>.No7%W:\#MSf4"qnr&d06(W<#u@8=WZ='6\>l"&tRIV`p!7L;H19?4Pl\Z'Uj_q
%r"U8VRpR4"_-%Tk<7PuiDmd\sUQq*YV2i*[g#[5'`&.uU/<AT/3/bCgXA*Q1;s*qTf&*ddE,4JeE2SGnLYhAr>jlp6q<S-Fc%]/3
%@!&up](GX8EfstnA)dY[Al"SLO*+'1m?f.<+3PEXD2@-=>-iZio+#f8fM[lC+"S^0p;+%tA03?Q8bPIE6J'[K@#0@P/T`"d5YR5n
%C<0n[d'`1oi-UY`[#X]:+Xt`j>0W?d1e1H8+^-rnQ^F"MM"[N04g'L%o"+ZY(JMsjDgO)o.;u:?YhZ%e'jW#r>Pe+W8U6&a]0lZ1
%)F]f:C^Qrfn(S?:6%?0)pYdrOlJfH"];i8qEJL6"1F;Z)Blk#(1<u]K%/TS,1e1X=7DE%UYXuYBaG-4("tI%e_ac'`X!:iUT,$@u
%pQCK5oNJfZXolE]qXaYhn*@(lCKpP*+0>-Ye)tM[X7ZK7W#srq7r)<Nrk45>G1JS/oWM.OCKp\F#P\O"QI[Eo<DPLWD1;m*i/W9+
%IiW7^%C2e8A'(-"#_iddd>jcfP]k[IBr22_h)q%:^X^p$MLAABO-)XEQZi+J;VKsAPEPnD\UGp=-43]!n/1tjEP9)WPS(?J8+e>L
%@4UnDiJ2W+LMWi^iH9%+CGYAGdF_c^_WN9nqaH9_FF?id`UOVN^Eh.GV;4j=pA:8c:"Q8uD8!SH[T>T&qdE`=@t/O)hr4(SfNsVf
%hRg!M[b%pXB>(pn]"Y6$*<H3"(LptEq!FEf7pA4Pr:cP];a4od7XfgUnA`t=jrZ/Kfu"M\:JZ0R.]W+(XFFq(YWSDmhrA(%l4Dhl
%.^q!29MbG\E2Miun]=3Y:E>I8;?]!#S_cW$p1i9J0o\SCm5Gd@\Pq&hVj=#_k]sj"?e!5JQLVUo=1@#boVh/;UcNk6bp&Vg4#k:(
%HK3e(VoRP`dpL\l5/Z6QaSXY&3;muRm_e<0_qGr+e,;!!;8)C-;N<!"Ec_Vim?lNbbsB"<`4difRjB?R[:T"g,4Ck\f[i#A)pYe6
%`4jW]lu.'[pREP7DuN/KL$us*D3g[Df1$UKc#OKpVA:sj:1@S.6[J:@5!LB4>u,Wfc^!/7k)uu(\'%J3CWl!YN>btOZ*-l3%'q.D
%P1\BPe[Nt1qdH2:^:&GjD)TR0lt[Q(3H(4PfJcBQ>%1rJS(_V)2G6d2CKn]Al&T]+Rb66Ce/Xgodh;Q3RMrAPcCNTHNbD'\lrtOY
%VJ;&gLpi8\^:%75QH8ql'DpLhqSId+V'PcBAbE14<ubEiYqHf3PL\:33gYu]f@I`jGj'DdqZ<5!fP^PZQ^-4TVW`ur"m/SH$clap
%@!/RIOqRZGaKa/kXDu(p^+gcU(fihU4GGb'o'GQ*IV9s4nM[*XcZsU.^92Td7\t-acfpoKp0-Qkp&(0tHE"+C:%d0jk7tb?N3I<R
%X#-nV$^8_DLdKYU\u/9]K+D8E`U,XdcC;]7QpOfDL=KG2Vi<.P$JJMQY,(>6eLQiaO()5/m-2akB4rrhs0XWY";4VEVStH9ETQH*
%s5jj"Rd'?,a3`l=orGDh4c\E9VS3#=nDf!Kl@$um3IM:"5*nOrM=:Hrr:jXBei>>>ELt5NRSLrtp]!]r1[F(NP8Ur1CfQhBs0QAo
%e+M1tB'0(t27c=mS`64,C3HKkn!0eO\n&!fd)`Cb%Q@_YQ;'c2gK;DeC9NJsbo,KmaQXY5fApepNmIFD(MOkZSk/&1P*J*dfl8:C
%EM^'rhXhpJ4DHiC9%1rH@p>XEN",C.84q@3(K3;fEUlh[lb#$;!00e7>%X]J[C4"MX.*JY4T8BMM3q3cWOjHcDDY:P8)4[r)`g.2
%E&7qZ)Hoabl,Hc5^p3,5Fa:$i>Mp?%S!*Y-0f2X]k4I#[NR>*%iSA(22l,#jUAEPo"WQ3L+EDmtNMYdlPKETtK#YN_4#)Y&[+[@"
%!maQS,TJPka$sq's0cl1bDLRWB?J0)Vi^oUe@LX`A[%r;:9TsXgBDt9k65lAmWet'#EI'\:o>"b.9GE^d)'?&*ZFdji\,]NE5oXK
%[_nUn6P]i71nq6eqE1+`VcofPO;'[A9Z,0$qr$_R"nKjdXN(HHFI't-n,>3<ZuPZHkdu<p4qY."l+\)L0uk^?,KUbN)k&.NWG1@P
%4T.5=]X0@f37arceG\4<.:..7D$f\1q0;*X:]E#:mAj-hDKi&>0f?^^P4Gq7;_;"^YrA$?ZdMlI's0'ZmJHO2O.Vlu4,D);?AE@S
%WAV8sTnT%Eg^7.kn_G&"R2A?RXgP,;Fj7X=o7/\\;#H4/K%]np;B*/L&B8<@"><1bBjOSa:"[pljALt6o?;NI33j9#-%:/Pg*.]'
%UI8<e%<lR0>PE473^]VV9=$cq619$&AB-#p)1NPh/_MS>WoKJ8C_=0!k/b0jHhaPkcko9i4^-$'Fj%CFrNkg"R%4`O7ghP9)<bck
%dnc1pVXBLR2WI'B3[$THh<mH(e\R$s9s],Pn7.hLjqc(:Ms&pUOhPgJi(>dGH[=O#NG4^!0UZ&10i22M7kF,uB1n"\-Uauag?EBc
%A'PiXMW(,6XVYpEY+<;=>MuEKS7bCKXS&a0aJ8-XT1XGGScACT&((-H_@3U?nX4[Qc0\&coYo34'+?Bee"-:->p"O3draoZ:Ybq+
%md\&KcgX*d2>h0JPeaul`gC(jj!VR<B4$V@#CPCleaCfT1u2>!^=Q#ENZLcqc$[=e5Dn>oa5tB*UM_D(,2V&$0._i<Egp]+h]%mm
%R"%*/oAK7bh^`:P9Qtk.+qaX!1q)$"nCcoC\W<7%pXc>1qle$d,/0Mml_WghfNsVf^;#!LpUXhj_UBrb:QH=d`Y!K3dTiuGCof-t
%[)`-KQrNmQb6n4HG3h`lkAD8hfB%(oDOb'Lg_#M@kgAi8TDh^n-Y>N9N]IKDmr#6d%TBg>68(j53SeR%4#-!QKpsI)1p3%T_mNEj
%g>kcM^/'b.Blg/1:I3_!r9.;<Qm?!gL,Cis^0AlaRt9S2RH^%'k/f''X:6O2ZbX(MU!pV4]>V3R?+s7XPZN:LoXK`4i[_@3a)0*i
%.c44c]WnSU/STqP"4f=tEP`.]*QGI\?7qj,X>.QM?,u$/+t!2RB-c#@%%+Wu\oFqPJW7\#ok<Z,F6f:_RpP@S@a(ULnJU*;4gtYh
%bD:Inct4L]2Ogj]ntY'HR3pO79m!Um'"a45^3_fkr;JMub&stlVq(3!=GB<aq1rQFN'F,Me#%KKg/P*WXT`uEZP=hX:.Rt<7EN/<
%4#pR@M$M^M?6+AP[ZJj0QLnUT%p<a-1Yn`LpMYFYhMB(bZ+r=0bi.4.s':&#?9IUYDN713]Y-/01.3K9KkL"V)ZQc+X9i`>I^LUR
%qDPAN96F1V6d1_X2:J<M'?9\1immS(lI/c+E(n+Ahb6WVcY^/(`"R4SQB!Fk2#OP@+![4_%7fF^(2@^/1XODqm+C%!LP3Z*[F39_
%^,0lQ/2YT]fgIX'2WY-b7\WV(;J7t_]kcFX>-jU:X,TD/U-!;U9M+T>Nu3QAbastW<m;\$im*gPfJOajDEmc0%h5s_SXi[l]B1?@
%9R53+8kNRE<GDnlR3<krbdfEjO16r"c"Cc`icOT1=2'*[Pf0a#Lg;Us0irU`o+CA/I-feYL0c1E=OL]5m0p]#`sOo?m1t&MOM0r.
%e\"<m/(C'5++1//b(\o^*\1LS8pt1k#$f_hKd3iBJ*+#QQ+!U.QN((GLb>pa@tfms2%.Z^WjN_lP`4_DK82&iCcPLt`]eW,CI6^;
%W`k+[*KCH9SGg:AKgL-u5Bo.B!O1m*51:T9>eI(:V[!a1=1)5SK85Xt4*:3U$U8kq3AAkdoe#ssiFHdh$r1!a_*dIkosM\l#AX5C
%%k#CiRJ`O#4Erj][DPF]Sat^tjE[k$Hi0]*K85YgA@bp\K85Xt4'_$?mlBLG_oWL-/'SLE7B2!$J*g&eoO8=Pl?noFf+(mE9TL-<
%n8PZX@V'rWXP"XWS>]a'$k"WF_8FAr0c`8kqLaR0]MgdB0mKQXd^Cs9eTjC*K85XpC!BbJkJ>%B@j4"D_q*N._8FBu*Ni(,`9a(t
%p@#UB%mgN4^pIpc8Ilk;IdO@^D<?-5E)MKN5?g:>E\YmmLMa?c"'W@[0kVD-[l\1B0<ifULQh2LoKf_.K86&VD9@:]eb<;Z*_pTa
%eBp/:K86S2/E9I.GJSoeP?XHB9(HkS#7nG"p+G=?_a#85?9<7Tg61N:>kMcY+h>sPLQclZQ.Db-3?C:&5HrOeJFgjWIIM2A<P@^N
%LXX_WQh'(njOXlCApgLq:5_25DFYd2SF)0MAlHqu5`7jOfLu_a?TVM,9uNR^_8?HMZrnG4S?2XiR$+S05BnRYCOPS(\1(\D_8@.3
%ET_c>E:Re"m49s3K85Xp)'@$Vj+E,N>'Y+pnt30G)7(Vq9n)JKV,NZS%M'UUIdOAiGsBW-LQc(,Cd6M5Gjo\CCPOE=C34So]UJWL
%iJOXP\'Tb_?%&7O5'T&12-UE%cB3A5*^!\&LuQnh%ju.O]Vd@A_8FA5UV80^keY.KC'Lj^NaAg2q;C5m)]oA+RoY5Yg4P0EUQ7dG
%q>q0K[LfR27'nrr4Igf7YP`$\T'h;8*^#rTVA5_(]%DXjc*JTFYUnTmqtY]B-Z[6un?g?>)pr>t`5<th%N`C<9SrKSP:-q\*jC3=
%H+j.AF*Li(ZoJFq2VYU8_hOo1L&C'l:XY!*MCcE`<H%9cmt1jl&(V#uoA-J40A[.uNm9#!([aG5[(c7cf.pPlFXB.S48nQlXgR66
%S\I,0IQk*IH/\\KcK;fU+&560f>"62@=>?n*U[2pLb<QC^)[[+]dM4sal>>-hktttUH<*ajjBV8(Kp(:p[@FWdJ[!N5=G7$nW2o5
%pT#[9#8^b98'c(#\e[I+eUJFL\C16m]f^`?YNY)Yk8Qo]f6aEUIdTBMNdcF=H0+8aR9ra=*ritK:Hok#^MU"8qenDH'W9O]^:3i<
%;GoI>Y>2dCH2R[%],+4i4k`(^R:ItRT6beG9Qf^ieMk1d]8&=@?+>%F?*Pi(M5Mu@H[=$hLF<+uA_B16!a]g4ki9#:^M\Gsq_fAq
%m1*Tro"+A]F1o$X3P-"gOGW-YZ].JEkK`bG[*jlS5ncF"^&36U<b&;^9k1c(BA[7lp#tChkj\"m_s#P=D`<`+<Y+&-DQBS6hVC</
%h;bCoO-pEuK7eZ_O+':kFr&a#dDF-t>.iF/iV[nr<uW0tH>//B^=*B'8@'Md%Y*O/d"gb3dB1/*4Bu+Z]g<&A;Lbn0T<icco]B=q
%qrDfpmK25iI>Z'7CCJR.YpYNkoBt4*`Tsr/jkK:fm^391So=%8rUp&,rUQ4(A>=U!HMCt0aYa^u8%I/d:11CO]DUd\T!;*FjA19b
%f58,GkEeud:[<8Yn1u%SGZX,"Bp4HK8,*jKh6Od*qL/:qpO7\ko(M4^rJ-^oU8R7pqqq,P+(&m*dIr91?&&2,HFpn?`r4l?C&`t`
%i;&d^mLMB`rXX,-%572mR+!Z-p=8&lrI2K@^,1fH+*@OLc>6mk)nP?.4.Dgh]'E"E87;.@@s+:!iO1`q[P-Hm:sj.ofB4$rqRT8L
%NaG$Nlda;6iS"lP[l-5O1Of9c7[2T.Sugn-jOAm+W5uIE9Jh.^9ef1h6jR'YMVh[Q_8"]Ih`Q?#ZaCWe5<@TTrqk!=Pl?!\X@'9j
%S9aFH^"YL%6lRMR./A8RYCis'j#M7gF#LUZ6JEaUTVZ(OOb6uscb6sHemr!3i`2W)A>GZQ[u^PO[s@H/;/tQ$G($iIp3*!fKOj-5
%S[F)/T759HlR.N?a%P\E4`ToF9>fa.^YaK\Z[]4@V'+I+HlhYMTPpd9s7f3&jC&#4NSOO*q-IN[qYfJ8+$.N[`iBpD@O4$*hWJPs
%2f63P]RqOQp[Rt,\)bM@dW>3L07MfeNPF7npq[F&EMA3Zo'G+\jU[bMam3n(0-@8)Y]ZI10AcYMHgc%UrTW.-DuLXB?b<Ue`ueQL
%5WfSkpS>*"jB,.VqL.HGpM.Y<feuVO4dk*KGeE:_ZVPW=e,HD/DLg&2qmlT2G+6C[0t@,IE<#O72nQQf5!=&X]!q82]AP\KPM_[A
%U?u=FMo12.n#CBqLJ%Hci2"*eA+E3>U%iEmHiNWp]8+n\rpdJ4%gL?4h0sV2fo9q9FFaC>F`6=3dES6L?cD-?K;a:om,R'V$^X'7
%J,"-[Ej>>,O*@d'?mMXpl6OR'.Gc-$#'fa/>^C6Or3Y_^cf\h[Hofj9rcmel8Ws$*^S5DTs3pOPhD[l$=@&fkZOO'`8OqtSIQb"T
%PNm8+m%:RRdPpSaG3`\`D$PD[T3\kpV<@ftAl!9YJ%co1YQ4ZAD4RH\j/qP29=L_K\2Z0\-X25<^=ts&/rPS(S@e`PI_E$-jfbk=
%k1BIp7+qE#M"\$Dq\IRLDT%!:1^esoUeUCWBqD#dc1Oe;A>@r-7'Ho&n!W#!de>Pr21D+q.IUUb]_o/6NgSu]&bj^jeTcE1hV.F3
%qrZ2gcjKfeBeT$W6N-#42[=@GT:^-HDscFWkbpXeI;STGq@8aS6PSOiMI/<dKAUeA?=2GZ%_444`p(1=[9hC!*6f'*mYaQJd@(,<
%m7:!?ap>EY_V\_:$pD#c76g7UgUVh$r0>/9^[At^EU^9Dn_ruVf&br(2r:/GmbZdG:@/"%lfW-97";@&41-0DrTic5l(jB$2iX>f
%]n2rQTDN!iDVX"j+jT\G]6DU#]=rdV8TAnIcL:F946J4;p-mti0VqqG[Qj]_on[kg:=c+S_ZHTS:>WWC]lWo3LDTjdgFnTls.',c
%](:U&*k(Kp,?h"oM/JpB,_b]L/I;K26Ahc3r^BGriQ7jcqkkM7f_K^dkY]s7h/(NqUUC'IIdYq_Xo3`EIQr9.*ULO)GkLXPM`.TI
%ld[_CIp11/k)434`A=u>>n1EQR]UYe<Tr(!Jc>PJa,jnSCnCq%ZJsOOa+#.HIXM'%p[7tb7q^`08"XJ+CEL\@QZ!BF?G/DM5C!,"
%fEW27^k2CX=5.c)&U`\)$dlVHi"tgp3.2?T+26A;*d=,gp2`tLRuPYkc`nG=_5Xb:P.aBU'mi-J^O;pH:V,qmR#Tj$UU@3Gh]J5&
%Fn=1hZe/#kXI]3:mf`W/"$>`Rm'h1H#@5,0Dokh%G^59bhQ=2f[?mdF_u";8i*G7OLjamZ[A0eoN^M;\ppBYca7`0ks7W2t/4eSV
%Z2_6ihs,ER0],?ZRI^K=f:4P=W(D%WG.W5*pVaOj*??H@:A(s:H`(KE)ERLA.ufPUB%r>%H0Wj<D;H;2Z,JXA?(H38)38pZC#)SY
%%L5\fFC>s["0,%)_UCJ]8LGu<:fHQ4L#")!^#Fr_/[WqXo!S@+;,3T`MrPAfEE`hjh0TZ>rG&js[1i8nqsqt;Rt'%#`YCT-caga&
%Qe.:*k?mP-l?@7truL!JB(KF!cB&IMMq<,*kA*S?B34irll@@<nYnHO#=m+d4P*&2rZp4NrqZKp>D@\dEVpN@(n9l%Z\?O3?YfoV
%icM@rX5`oBiU*0l#OakEI9L!mF`@0=a*?dfme6)JPqO5/P*m<Y3NqWF8%/smY8^9u`Np@U2J2?g2X93kn%.iRK>HEB;dZ0bpWHK"
%40)G4I=!jh%I0EFBA`%.CFAhJmU*PIrY)DUqI:;c"s#WZMe+D=@"F.aj`8X)-r:r1F0AQ&?0STsa0E&Qc'NRS/a6@X$17[9>1@-Y
%"dYl^9KpjDhTWXirc*ShnqAlP-Wcl/G5cYdStBC[bsqYDs.f=[J)Z]d^<2pOgqWtU:4*q6KJsrAJ*5_O@3"Y,UP',>8(Vso^.18s
%Df/iFgqU@e?esQ7Ft_SLrT_9&3cn\7htcI'GA*NP8'bN!3.!Bo?a2\5s5N9qo^M:fo$O'jDs#j_gto)Jg;`!]ibPMGeY[2*h$CX\
%]^qaT6)X(1V[u:[_SPiAPE/mg(#_sCH!D0oS2X)#lL]a4\Xbiqg2)(BHe%:J*&g>'QuSs:QiDMDZN";B:4&)hp\X+pOE1:NhDorU
%e*YgGX3jbE5GI2>E,jh(E],;k;)\l@GR'gmAi#@8bpd0C34>oJAMHrLARcT&AFo5'1CBP.ZfrrPEs`de?k*R!n+L)dLmj3]$N*GD
%'l+c?+4kH6mVqg9S,OJAIb,IR4\N*3H[9W9Nl3)gK%KLI5(Y0Mi7GlSNH<^t+H.N0l7AIqNaQ00%L6,fm\lbTkl%bJJl(3rDRs3#
%(b(hacMe\S\s%l^ibI='9@mu=EaZ"$?sRq5ZDa6Qh3ToPrXAe5(0u8.J(d#oP$P\kkYGEudV/:Qa$$oO^@M91(),$jdlneAe"9[:
%)nl7/g!pH"d"M=<F,@>a').<n:I![KHgb;E-Zp&Frorpk)WLR!)f:3:\fgWd4M0?M%aX[WLG(i>5(0s<q:35#p,W,oKL;o5J,F/7
%bpGXImapAaq<VBW-NCoai287.rd8^)B("EP3@;CjE`6SqcUP4)](5Uf$/;M:[Q/iir09G?4l;j^S1ke+.>p=EB=!gkSigGf2G705
%aXbT)bq^&[nd<_1*Lpu`L`g$H,#=eL]:Lq$,#=daFgJk-)i%O?c/0H2/9_4D[E=MR4g6sCh_Yd&8\pr[-JVVAIu^=aWsY1G/61F6
%5Bi@#F#*c=W;9uifO4H@fI$?F=+X*J)rXf8afUU/NA`["-S?J8P<E'P+/ODrN#b!'iSl/-PP+=MSj*L0m-mghBUI&VA,1;CNJA$_
%mReE?f7Wig>(+?KR391qVe:@4cA]l8hqpa+SOq1@$t4d:`c0csqtU<`^e]HKJBJ>rMdO^2R:gasH%/IRih-$[ps$-`DYtMlhfs@(
%KCcuNQ;2:sb@5q+k`pSck2lEW$h;75`@&uFW7`Kn6ei2sA+Qa*S)8#FFj2I@p@HBt3RJph+?hc%o\Cee,QnctDr]QKb>c"LXFKTo
%Hd(3n/&rL`r$K>Wgam/XLp6pNNk+]L03JT%IQt@dFEeYN@8iKc_s&O=l"`eB1U/.@i:5RbNX5UG.p+IJUT&>pIDR6Tn8KuiIV>]I
%m%beVmFA(L:cDuhVUNB21ZVlko#<%MK]I@4JJkO8^$Su#iS(d."%.j=]gkj\*Un1'dkT'S91p-hrcN,GAV6HlVbLu;@r`O;)`Xsj
%.<Dqk3F\L\:cFR`@q0<%61dM6S?%WuLPbLO<qnE.ei'rQSOaH2Sb'*e4;2YMOre=ICL_NJ%i[LaBOHNE_p6iQ&iQ5]XYF[7?'26q
%>6BUn!GCV91u%5<=HR^gf(uspi75dcc%+!>79OCV)V]cMm@E*'gjto(-/E5m>D[-j3:>npkHR\3#!lVNVu>fJ*9']e%,R<rr*5FY
%`c0Y-H#:m4!AulS]9Q6*@/'%h/n%7OBA)16QV/$jD+BLZAGcY]RFAU.70[0[D*+:@G*fQ,Ih+G3)b1_81`/V9AHQu9bp6aD>Diuc
%(EV#rX@Ue.^_YGEU_QJ4W'"pdQo#B!In6nC7Y]O?cY,C)^SSVg(N+^b]R01mj+F,irPuO:MsH]7YMNXbQS%H4Qm[6Amp3:<NVT5c
%;IoF+PkLOohY^@4*R71$?)l9/?R6$AKqp33gq7Ut1KlfQ-.R8njH#=;?K/0]4rYP$q^_--E^.P/S?56o0$+UEbL:9icnqqRk:,r)
%AC*G!1?5`K45=F``cQ8^d`G%X5.luYV@EKZqNn!b?JEtZ(iI'M5P4RiSsMK$mb2iOoCQA''WXH'gA?FAqYFoch-5Br5(%cOs5AAQ
%adLb??f:GJkP4V)*KrN$?g\q$>-H!//c4p.pC^;UW:]@VD3p;!%do*(9>d6#HB&MbT=3ES2huh\#hb"EJ$Q)'o6,e5!3o8#](s^[
%RpNa#gr9Y;)^kJ$0!4aQY6/o'LsOd]+5Q.]47RO@2uX\B-k:1^IBJT3@;1/M1HG,=?s3s()Grl2[jO*k\J9>F:dat$j[$V)rledE
%hT<)W#9V*(hfnPWIcWu93n\k#qRK<1IIg9U)XjPpQZ['4l_-m,L3JaYp56Afs+TCcL=u(uh1kaieZo!7reZGYkHt&!mr<ZAo-9E2
%^X$3ET1ikTp?VH5B3SS3qfK"P.l9/>[)k8n;<,:Sk,29.#3YB05/$O?Y-55MIsR_I'E<(?;b5AqpC<<]ba5o%Hi)R$c9XS=]`3<C
%hVl"tm,*OPO4"KHCc+3DO0(2#Xpg'J2#$rpZAg#Z^NNDBT+7H!h;k3\,4HiWofcqHfmC)OckoXMprhdFqu?TeoBso7M\!/MCC_Wm
%"$atcnSbPa*7U%!S`J!_<tsZMhPPE,gPZ6!T6^*fh'Qg'N>T>iG*Q-Cds^<V%r==UlrEA@51a'q0<IB4gQP4X4M?+@43NW;U$e9n
%=d6i"iNbRiHL.$:9:(\u05TH/Enjii1K>t)\Td1-CZ1M-T'nf7>:6=>gIcGfltP3+gY&IWakWP]fj43dTP(Pg8\RFVI6RAtd-kN?
%7`:.K\A`mlC%lHh%iuAU2\rqL!`^Ra)>dK(;Y^6GftZ/A79`j=]9`8X[]F>8"+'3$`9FSlM6lYpd>`!J[]Ysd[bAs7s$nP1=Vo%,
%rKFF&hu<TMh9h4WO7,;^?/8][ce4T`D!t\ej*P.jIQKZ<p[7I]s8-U3gRI)-hL5@1H=h;HpWh^>Pq([@pZC5bGH4q+5cGHHmb*T9
%mNK0o9TZ'gNmk]?J*K\!/g%iVrmh!4dA%'o'e@_Uk7MuYHc6\23+mgX[Q])7^V0QC^UEt8bT-g)m'$)V^CqTTXjpJ&(A534o(ZJY
%jl*]>5oRGm%.E.W_7agep$UE*lW8;5eNY]dQd7hY++AR,h*3lFqDd2YI/)pniVD=$DsYJnj5%Dn$]gl*dFF_q;6;n::0t)/^&dZ4
%5;phk+s=7n;%fS#VHWjZlf.d!mBN5L?g"T[D#\m0p96a[l/og7S^^mP;E$nA[3TfHW+RrO%)W.if/"=;#55GhTk?3H%.<6gkSXgU
%"5RWRj2:?IkSXgU_l+U!f/'LSJ;PUK&(n4Kes^_!B@f+JPAT]hr$Q=O&*Y,cWm\s1e3/cVmS`t<FV!bl&,SSmHWY]hs2T5Bi,.7]
%,q<96$5%3APg[/"'(L,X+_qsUQ2<O>p=E(+=6HCGcUIa4nJik`QMu&)KsR?LEVrAqro@[3qkUnO14%7'?gUU3j5"DoDSdO?h^H[q
%K?-M7qEDUfi8>@A-u&p+$(l>M%RduP0(@oerG3kY]dK;^J''\&j.]kmM5&#A6d]I'\<<XbU(4Zeb8BDDU(J1!5?u:\;*Lc4-k=1:
%N=VVqIDR5K(>Im*e]fGtH@Of9,sbfZgi\!&b#.WG'e.:GI7"gJ(`r"t).)%MoU:mog0k<h@=sJSJIL$.Z3<"d7oh8mL;%Y7#cQ@c
%n;6g)[1i^\DGri0ZL*.T>GCM^nZV<Ur[i?CGdQ.CG&\Ja0&BHB>^<p2&)6keUJ1'olFiLAe`6L<p2P+1XJBNED4S;tgUK,p`p]R[
%b9nrYq9&,q1A\^6ca%[VTs_E2(;.:o+s8N1"l<i.5LJ2$h>%)2iQ*G8d<bh4j/Ten1T'i:J?Pq4/BQ\CY1_RKZX7UnS`V/>Qe/ms
%KXc^PRasXOrD&QRH$]1r4<6H3]W.@L]9`C,,!=IF8D`65L:22KXQ_tpdWFD;>:3eE^,gJo'-Vep3NbIVXEaFT\DZdq75;bK\F[>u
%"a<$ai5lNe^_VL7P&=d.M/D&D.Z6$XJ[)]NW9iEHNA1l].=Wi`-8T+Ca^?dS%"l?37bW*,[,=?^]W@E;+^4Vs]_aS`+;uE!XK!ql
%>+aF#)M#uX\W**Q^Q+TNa[5DYKJt!$S$NRU^sh`[D`0O]N7kGHYm%0J2d[Y$Dr^@5C;0R*GtH750I[Xq_T`U4YZB,dVr'"f+uaEZ
%hq"Z'ifW%#`jKgIijQ-_?[Ng?jhDnN$0$H+$Muq`K8gA5?,#.QZpudh1J4Qj4aK8?"4E\tZ&Ns;\>1(U1T*D40SNB$%cYqO0!XTa
%`&>@/?;,5Y*NaT^Rs-'kO*):-K@:b!G^TGaZp>s%TDAcC:>Pqh-\uJarEUMnEtRI*],t;`iQdq?EI:lE[A\XPrbQpBiK0Y<,-Sc\
%R_#;@#@jmBZ&-0nnU%tZkdr]TTf`6pB"doH#*-+a-`8cMSU(R2H3d1?L<C@BXF,&-i,;gEj8>Z'%0#(iFWnG^lL9N&!cR)o0P:jP
%q+_.Xq[;Q'_>(N:+d+tqY!V3X\O@WNHen\nmlR\Q]4(*n;a94(^V"914gX#*_)`6rLMC`Om[a18DBc6^>.<3uEhV8b-$@`X/tCfu
%Ih:3<Ms#d[:R0F0I\.!L[^AhXpAM/k6_b2<*)2dFT2m7\<S*QAJYVPAG2-?6dYI#Z1n"A>q,V3^<;M)oF#?K^GWWWenMYc]\$ROT
%p%qHsm^MOo`L@P&)8C<3rVatXphtKA@E[H[[UjV8?GWAlMX?aJh;`\CTB#*pZX].Lj!.b]H)$^7*UYDS8N&3hSCJp`\s@"MH!E[.
%ZmH`Y&'p4eq.^mT1H0SpGhueSjM,T(G^&E*j6HU2S_keY*^"mu'*/D`A+,Ul1Wl%]Ie5aFr-^NQ-$:l,ino43ZZUD/%<-C]@,#tm
%+&M"$T-90]60t+@&(j,?brG/6V#1ULb"N`ZB>:,;pg`(>M`:"&IOpb`+%Pm#X@qh*cc*fu3"<OcaijWY-`itgqDT5:A^RoOYqBSR
%rs9#MS(To&F]-\P)`L%9BCsNF#Inr)(<]L1rnQE";)e>SehWb"LG/*\)XMBC)i'1RJ)@I-p%PXCH1^OtR=a7b;De/'H`WZM"NDg6
%rfPlR`7K@i&b=4kqiOrEH@3\@]^"1]&*4@Xh^Pn^d]TulG:e%me?8K.>Mn5=SD%+mAiu"O$ohSljqdik[m*(SeX-$E5Am%FjL>uZ
%:(FG84g1)V]RTmK%g0&@!:+Rlfj!4N(<<m![(Ej\?eb/._0^1Z>e7FKZYtKPD&>j\gW&&B+nq\.AVR]AI_+hPhX[7Mi)ds**&BYo
%mpCDP+8ot[O-b3KZ+5&JNVi*:lH\FY'RL0>6XLg\IB,"f$3#jU47@XsrluV-?gPIQs7,FEec4LRZGim,IhDVis-E=mS5cO\T$o>Q
%d,F;Us/bgi=6#:j+elGPD!rGDgAgs1f>hf:?QK)`oaJ'LFaNT3\'M,@]3"D?5$0uC^YcdHrE;'c]`7Nba4Hs@Xks#b3k06DKC<8V
%Cd7iEGjifSlBtZ$r!R9=/A</q0;s<qPPsF8Q@fr=K,6'<M,nijcbod8l0Wr?cSt>hA7pc!4a[DY[b/LtiO>l[e%^S7T@Go)rHn4Z
%ZY9%!$N6+Zp*.U[HUUi6ITcJB0.uWF6i0M]B)!5c;EqaRr3Psdhu%td),.dj$<P2]e1^ALYOUL$8a;1^.&3fD9DTgWij^OCI_`I?
%7GUb&1o6K&Vg4EoTZWuN8',L!m?`)<VlRKdm`/=mHfVs:B$jDs/6*e8X*u(#Q*g5!QM*Q7,grK\<E[[a>5-Ji;9bq?5Ki>bc_U!X
%1t=RKU`UD,m]bBMkqB+6786]5idRKJpX!:$YOa4ZM#'p,10p`;-JX$scf2T>:%Nh&VWI(^r^p5<8!:Ah<`MU^gJ?!L=\[=n<7f*(
%e^'s^I\SP1rOT.h;P7@Lca,[74V6fTU*rn?#0[;MMFQnr7/]Pcm(W_h'.Mp%nmC`p7$EiPa9+FSZiXo']r^S@E>#;Q7K"J]AOa?g
%mDhU)4mQFB';\;E%),*H.tr#W.dq"<#QaFkR^aRm1B/L&A2UJp>-'nc+,[&^R^S)['beQ"SVSgg$Jm85IT2OdQEuC2g5IEF=!^Rm
%aIcH=plpT%&QPgl3Wkj4K%9LiR+_dF4dP86`fekFU4-'Q"gB1#YT+B4+c-^1,Wlf?3\Et5Z:',^Y*j&31\$jsOi<`%SCP.Y/$8Yf
%$;n%fcJj;A<2lH.X]^fg1B!`SLp/=1qRGE'%;B,YEcc2>qL=q57lMtqZ)m4!UFO*T?S#c&W/q0,<R.qDeW4cTJLp%UGlebT_.>J)
%=[.n6LVPE?]p][a'$Aqu9UQI@jMX,[L2Rh*1lH'Q;89!31".C^_FtWj@Ub0D@Y`J&9U*PoHc"2jiq_(=$&-?U.O,-KqGg.)j*Od0
%X\p5QaT-HaP9a%=<D)gopp$K+Q:-cpV^3^^+UNt2S:2hWaKY%CIj@nQJN&lZ@[`^4.'Dfi4CKA+&MV+%"Yi\;N(ZiRjgRoS55^0C
%=t[%I1m8S+&QNp[ES@<b^(MuN.+C"[,(G_E[@.^_!>_%M9cF-3>(cZFPdnU!H!83S\,h((.u;ReI>M5b@Q:t*6f*RhJsP8q'<t%:
%<c\X?^ZPd*$SQ\C]-9+0(,b\N63BeF&m>HNR$:gJ/LM.-)Xph&33S&1L+W=:::nJ@36X(OPI."A'K"#e%$`]4Le*du%d=WaX]%f`
%!2W4=/(u"8Ij(,S]b#61,0!`/C`#0u1a/.eqp9ia4B7>*T?Kp6j3Rg=H,G#aGd+-&^SM\!h<5,:F\aP)"c_>t#!cLj[2U]I+JIiK
%9aG%PLZpAP/\+VL,GYq?(rXt3Hh#*^7AQ'n.TBMOX?oKpOJN!fH!sU@#OZB7ZfY+i9=mo-%`[if[)J.mjuB!tlb'dX&.k!r#M%Hi
%Eq>EX86aK8#<'Hf&2BnJKf(4Y#=QJFq+>]Xc0mK.)Jku*ngaus6a+:fCpB\M&iq*;"->f&?+U)o[*!LJ4_!o:Fu_KDr*C/L+$\'!
%!c6irHmpG>ToR?YOsjhbWQ]-Y$L#R*D3*=3aWab9@bPbUJX.VEd&i5SI#.PALCR3nHn:J#&AuqRJR&J'X0)eq2UX>8iXscI84h#r
%7i$T83\sT$5B4jlnapUZj%JSSs".rC^ffcS7s\9CQ)..tAiWUthT`GL/4je`(F^T4Jaj%8qFZ>sG7"^7R\Ys2[AQhn)6Y@Y7G>De
%7RbI+PZOQ9<E4&./a-W)h`t>FHn.2N8YIB+nD>IMNu"lr.\U9Jh^k!].&IK+;OPp^h2H#Y;GnD8]os_VWd)pSW*n/_9IjGNW/C@o
%@KgA)g8Y<!?3.c_f[+"dfYDnG5[)N8iYij]q&<Y`HR-;*lPll8+0b,U3^!sMRU'S`JCS>2;+?1*!i&%Fk)9LYm!ik8KP#l)=R67D
%U9be<[ph9Ubh<N;c]PY'bCN4eO]J?3@*WrZOZ$7o'k-,']1*eeJb@Bb+4;-4SM_L81ua)s#&?HEYKDA,9IpI137Uq=D+")Z3W3"j
%D+45\3AWuFerJ,;&jntpbZGK54#&$<%@f!nKG%c]BIVMc+PN@T*ttH#)P)Nc"X[7bM)Qi/$-<HijPHWHnJkV%?r?Rk7"D])9F?k5
%/aO"&IL5d1.KcGt_'I8-X29C/6ASd\#k=cM/(CKP6Ft1D@3OHAb<e\]9FI8=ZRsZXX_f5GE0c-OQ2L%UWiQROqhR4*[4chd2S?[4
%%#c5A%%Ig]_W^)XJ`GOT(d6;./*qXm@plpA]dkopH3HkD2EA#tTFgY8m]6g$lG1OB<('RqQl3P,k2u:M3s.U/JQ\P;dAomDLGq&9
%UntC[BN(Zr%H;L&`WdS(%)gqj)]mE3L\dZ"3>fnAoUW.!+PPr[ZU95h)BQIMCO1[43oe,QcMWbq3!2QEeX@USNjSL<L`om]N=[86
%Z9gDHXVkSL8XU`>+e9Jp9C;'W_[pO`/J5lYFY9PIiN0uP,/SiP(_K4X[W1cAbn5"^(YTkfXbl6h#"al7]csYm7FEF(ToQHQRj>@+
%0m8`6)^PWL[\*%=HWIuA?c7M,U-@dW'@iVZ:3<[KT#fR&5*=f^L#V6n/JR?#W5uZ/dN`7RbkT'0-s.K&.rD%@8D,E^4_LQ]dnL`V
%ZVkaSZ%Agr'Z$<1!hb@*$I2IV+?$[<ZW%?6-Xs)0OJJ:C"QaiEX9bc,'`l9YOiG@Hd6hjWMi:Rc(7C&I/:qQ)`IKL\enDlKR+.8(
%>0pkYeY1ZJB!%;%];:8t@+VhE>^@[fBk?*_c?+VRjfisAm1M\8GiA+WFfh_]dsgZ.(Gg`cgFmlGc@D&A3"&3s0Z")g[p_Z2dRK2I
%Q(/R&C0cNo%^d=PZoW!DKR+[jRGa"KPR4b;9!tIS)$-9cUGPrn`P-2%cNrYA)O[/&BEDbTn17_.\[Q:WZpe#.@anf]o-C::X%#?k
%f#Uq3Y*%:*f4!171&!b$E04(.Eop&lh'sq7WIlcXiaYC7@/uK?<0S8mCskWhVSBk>)FIWAp\!jQ0CRc#^-?r:p*5_2dqFAh;b+[c
%)ZJQ>O'Slb%10*Q6V!k<MuLZlH=MU=^Ym"@NME^#NNiBA,\JABE-(K]_<4C^X@SZpo4`#$FMP'IESJEB;+t2,qe)T)O^RX#)MTKf
%hAa(Ln*Q+%U&GgDb&(BWIAJ7eKPDJ;?PJ_:EQk[3&2XpO;W<9k5O8_KYoAjW7iQ9dRnf-tX>n0q!98sMQ>)l9F=PuYdt76+dN=9a
%24mdS!;*B=U'!8M(l9s6p!a58.>`&.QqmC]B$X0YAJO)HqN?;/Z>j%00Oj9?`O5rl@ttJY"(+Z>?,2p]m8gTNAc*/,NsVoJP%5P!
%=i*s#e"o3%:F`'OVns&,-C)r\N%IJQ94gIf)IKVjM%hb9!V.-'0?`.s#V'8G"V[oWn;%ILE)sf_7]]j,E0o'"aRIde@+P]@'$Muk
%E--f#V6"+P8Y.`[bDL0:UkE1s0c.WUj`rYO5V7PV9G*$\b`iB8QUZrl+6(2LB!RcUQP0"P;n"4$Xch!^XAr.5XPhGk^5B>BEqjaL
%[$>gNTra>.R)`3E(7Z(N3:c8h(#3382-FKq3YcOp_-.RI*BPY28(+'9>c'pU=k.u*RYBRV^um^o0DQ/N6BUH!bR!3k^qHFR"IU`4
%bUA+m-X2RO@RjN:1po0Z-7/^I/.OS0&lC=!KrDtFTFL68Z?S6-_^_^NG)U+$J;D-c&XK$P&LD_6g0EYsmZr9C>=n)]/e&^)BuX;p
%f>n8d6WKRq#CQ?cS^J+;dJufLCZm:UMI`?sqd.&JM7M*6@e$VMa9W>3<g?[tF4;(I.l`Gf\:AcP.jE5@(3#dD)(3/o:^._,b5=e&
%4#7X$FiJW!#IS%mq@5S$CGJoS6cA\AYCkgE`Zg[3`WW<kXTFk!>a!Ip1-W$8M4q6sgE/VG)N'^[;H\aLmni&LojY8^1!>seMp1r>
%AbO&o)9uf]4Y^AJ`I>+a$iTF[$e*g>i5-,PD``;"+XnYDSiuI#Zs@:F@?B!cifXU>Acg;eNqrMdG(*J[29f7+@U+HBU>@LcmlE9L
%GR@Y0&r4V7WX&h#(`/KX6/8&qapes!*D]pK\3uI:eDE$*B*;(o/.(<7Cnq@d>'+A@X(6$Zk%92\KG6<FGjC)i9ARaGEaIE3bp6E)
%"NMGJ%-WS542VSo[D\bF'bD!U!ar_&]Q7-E]:0LQ_\Vfa*taQFD8UfQJ^tXBSL45.(;\d_=(OlG'#Xgg35AB+GLmUN4!,A4p"kLO
%r6h.IB)dPI/#u`_K;Ir:p9`_1ZT_>eHg$oXR`("8#M_dDKW-K0g"Z>lb1RHEbt$%f)64F#4WenEaG8R@jCT[LS"EO]4g!Z@4iX%8
%;Ub,[MkL+@2+\7l&X7<J3HsbO)4W["W$#\,CrI,kMtS>G(VEiqrM7r@b\O"rQt_]ljCHK_C),)[^p&pt$C_0->_K.0^hXKi5?/dL
%9q)W`)Qi)132PJf_WZd92).u=`<Lsg,:C<!PEL_6(F"$S<!E*RcOh?rgH_n')!<m'!5XXe]GhY)>VVllH_!W.Zh;>6oe_dC`,HpO
%7PE"AfJ9F61!Cc=7O<Gfngh/sXCU<M#hFGr.kXQC8P8,Ilt>S`V@G%KE;7P18o+`pC;p:c.u1[_\5m.IbpaMl3aP^g)QtU&\Sb)J
%'LnQ%ffB<&m<JnZ,Z0>^-%g4<AcaUn#@b4S6'$jXeVjS3;Hk\>0EeI$f*leai-b:+[X_A(GX1gC2e6X"3NlI1)JADm*%F,r3[9NV
%(5r_,#\i[l:4?8M$KcRu>&dg,7Gb?`=V\;PV4QRB6na+gXr.7>?\6u$81QIRk,all8ne]@A"@C9'$Tl2)Ne^l9&"?B$qdc;'["),
%S\P%5D1d,Q1cESa&CB-?NX)?ta!I>.Ss<hO%[/'JAk(o?b"DMC_c&"TK!j#'TZj<G-_eMk:.i@,)oDVSRQ(Vn@Q:4u2Ar/$<Z[&I
%F.-NA'b%]EP*hOd7]'u6a&RX]F=0?-DsJTCg-OB+Bk_[,3n7[Z12WEXEXFt0:0KA0)@*6-$Y8Ft+?0<WU)bH&EhUhcBa=%"h0(cn
%U@#5!Sep*p_3^?^mZchfK)u#T?ecF`kt3Ge[t&seXHCkL!Dcl&0>D`ai.K8]W2WOC&k)UL";L#&R\J%\oA0lI=@[Z#^&T!]<g."m
%"brH[M0E@Cd7IP6U-0>VB#n/d0]:cf1YBOhM4nQ1?4<6qF(>!-4,k_WTQOf?:K^JJT:U1:"LE0`$k/#tb53fq1eF2epP(5lG%\lg
%%pN(akme/]4j?QLd4PmgBueN\e4QTDNMnBOPs_o__gfmEZ.p%Z;KQ4:R,mt!:*BhL9SAb_R,Re:Y@V%B"u"?Y!p9bpM<$YgST^$J
%Z8=2I$8427%Lt]hCBqqr4g1p^M+QYjk,]&\T.#59IcBMjdh7GuhQP>Mi68-aVkZ`h>jUTc4WP$]Sdp`?Y=:$s*h^f:Wro-<@I]@1
%Ii!#.)N9f;T\UUgM>=0ehpI)ER<s,_\qtDQkklGD)k#_hi:,Yt+,!(=`rif!&boO$W(")>_gflj4]lBkQ]'UNH_ciZn9\PJGuc?6
%#@EdZFEuICk)r/Yi;*Eh@4ekT_gF/;"6Tou=2V`4]H;M_Of,%"Ig!]/rXVd5k5^WIWr:Q`6X1c5A'P<'`"4SX-AK#rGX&?MRQE_>
%cNsL\EJ0_0:'4:JY_@7?Muecho-e^8oJf/XBeI[Md\Ed@3DM-g%dDB"ae"=kLBrKZEX8"V7!c4qen([_,(aL#M#Wi`MP)CZ)3e2*
%4m%#(\j]:,8acO"\9^m]:EY1WU%4.U;N/cHdX<@Qr`*5/cB0/F42tY+<gLWE%_9\*b!.);m$n4*c`u22Es*a+)o-C07+h^Z!.LiK
%9MC&lc_1riESr8(O/7tZQ(Xt@;eOn]iT@&/,r.]7'ZnGpetM4R#Fg*7%R6ATCm'+!c=m=l.LVW1c>/"<<=,;denkJ+W8Lh.NY;H$
%lNBON7\i\5mfYsRE[7Z+Sq&,^/.]B@-I<3n>N\3OF(]J["9<-8M1!D?:XDiVBAu2@e_$@M+s\3D%#ME;j[nAAYtP77`o9J81DWIf
%W's)e7geH_+Kg-WOlp\[oMVnZ<<g/O!M-9ea-Tan#6D%fa$no^6"!QY--Dpu_5lKp70e`aQ\tg1F-l[!"OS4s.)V4FAE4sKr'R%j
%)45TLo\_h_E?7)@7Ltgc8MDb!B]"\paLP#m4+[TgG@6FJ0BC_V9?\qUXXS0#m9oH+PEAL:,86Tna.aGFg`llX#=Xs,,H>)]3l^Y`
%3Ta1CK]b)[OpEIb'PY]7W^dT2Jbc0Rn0<#P6S92"@ifa)+[-CV5&+?>A)])&%lo,s[,[:!nd]c#iEL?HUF>SVb`BntIcRZ2d0\+Z
%HpPD="k,tg?NemH(BKfEK['k;"VCl]2+<c7*Z0P8kBS&Y?k=P"V,7>:On+&6VA8/p>=1Xq0!1fC\p.Z;0JsuheAsdbV\jZ$/0VqF
%,K(KHoVaF?/I%#S@cD@j$p"YB:;Q[M(rISk$MO!sDZuIG!X/0JMB_-9PHZsbB**V!`:u^JqV`n)O$V/(_ggB(gE-:Ap;nHLBCZ&6
%#6$0d)hfG%)%EF@+E%S+@Bp">__!GhqZ*?M;CUj@G9OP(3>2W'AL&QRJU^4;(h&?SSDE/<>B,U4+jGALNe,rj=Gb,<ddW:;keo^r
%QYRN[T6$a3*J"=>OrLF=L1Z0&+c"1(?.0-7r=<(FAP<u):>-75D,3KZffA17GHJQ^3K-p*L2.FaXOTe6j#55F0,#eGk1K!8:8tMC
%$fFT)Qm/6@bWM_=7gU&a,,#EFO\dAM?Z]54VEH%I*2/WF@03?CJNUa';37Ik>()58]@%OmLik%+Oq]#5>26<odaWD;aX9':*W_D6
%6bje"`HH+0hefigLOgQL4=Xg\_15ode9j]&g5H[YRO-cNJCi0Wc9]+#G5Mi6)7kP+E1IM/.:]LC1"r')V1JkN=!gY#8<$@$@1]1H
%]+5>r0/=!P;4ZfDrYS:A?Rb9aae-E?ITAej>gisfM@kO.qKIH6KnGa,UhCGh2Mn[Y-7Id*gQk!1]4Y#DbRJWl0fp1cg<J2kmsZ@c
%:hdF=FjI7l*N/&^(o'CBOlM1b24Idhl$h7EFI6NN#75J*G3*q]PQhIqdR&aZj+T=ldUA@SLk_(8[")IQ$YboMQqYsdliFe[%Jjb0
%`blg599sWKQJl3i/_TD(%cnZ:EWRAF$+A*.eVE'P9M0u%&2+bD<Crg!fRbn"allMD760.,[%s<+=O/u@[<taMh71B##a![Sb:*DB
%13/RJM>af_dpPM85fk&`gRJ8D:Vki%EfS2:]i30(cT()Ddkf.g.STY)eU>gG\oif(+XDjh9D+N=`r:6W5"QO;Qh-I%<tj(oi-bj.
%F^5<>,(GIpAPnfq=hFeYa"9jkcWdK()r#1RJlQpH6,Rgs=7F7NaH,`F!IX`D8C>Q_@t%.2A&i"<4BO$]f=#8dh=]'@D_X2nTuQFu
%Uh)Jfl.uGn(+Ln]hoXeAbAnKa(QDjQj;I!4&n+XZm`,lA2c'bCJN@U\QErLCZb[bX0ld>$diQlZBsD&+/I!jalq,fLPp(7S;Tid*
%?o]es2!i>*EL=u$[Of/ubLrQ:Yg"3J<BVTjV/[+4`Gk4-SZ<H7ah\b3fHGfTXGoD@N9.[G#J9[e@YURVA!i0SDU'm=f)6$.M/T#J
%RPu$#L-r=o/>1RT"nZk[m46*bA'd]SVN.bAWBi=IY9c9!GV*(Gdqd'_SmG'Umtt!om41Tgks7a6"kreKp)Qm*0GH\KJ/(6G]]?[[
%GA5qZSt;^!CFIF%E/rk10*-lBlWi\uaEi^T9(,Mp!OSFATMdTLF#nq1mK#BPV/%3G2pU\d.iTg()[`NZ3^LV(EWK\N%T3(W?s;M#
%d*LCQXq3[L5o[Ku.ahuUNRB*!U]hHlR'Y$tWlu\&Y$?lMR>-nP9oT1M5`Sqr]K2%a1>_R"0H?enj"RT4$RhIK1p7HP$E[:NG_Z<5
%VrcZW;tnIFJO(7*rfC_DK+5>^#"ok/Wjj*M!j]+2K=*s(=:8lHGF3#LgUIL\qH>FP?AB[8U@^KiO/ib%9$%i:0<W1oY'6P2ZYNhi
%H?#GHC/qYbd8_3RJZat<S2_uRYAA8R6PP=02D0Y->`(Uc]2t))Q:\#n_eWUJZmfaD>JBA7h1L6,+@bO[iVp#t%LoOEcV662C!n6+
%B+MQSMWV#g-`XYIS>b!;]7T6!"S<qDlF3A@kU`S\i%4o-M1l[-=[:B1&R1L_n:5`dq4ZB%-X[s);2[[In'r:._Nc2!,>QOH`Tr<<
%&?WMMW)[g<7AlIF'k2rleSuJr0ECLQI/@gLIM`P4[*e7Ol/XVR0*.H.lt=^Vq;rM?<7GS5&rtOp=tpgi'PqJj+aTCo(p(#n).F;n
%G)dM_K_)-"2F+dj#1M;:_u-lYdgFIfgSEK#Jf\5sj99SF:"^,.9p).W;\Bo*7>"+\SV1pS'jPXZEfE*fi#o>FlfJK?9grZoFl_q^
%7Sm)LL8r_D<,VU&Qpg&EO+ru9PK0oW1hEi'_LY'/YmN(.AWt@N"3S2)[[tpGd^JcU=8a7*.Z;5GC,,Bi;"9'o,hZ_r?<ie<#+D1l
%0HRhB#t=fcdM,t:&3`Zi/0Y15-(HOK)^L"pGAMe?q\X3TZrgkYGDuY:"d`0'I=94K+&HC>ip/2G0dnhVmik0!5;Nu&b2@)\TQue.
%aqZdQ'q3(GTP9gkc-IT=0Qlb,!bW3!:!$HF+cl7tEV,K-k&s)\%qSTU:)l]+MBl4*b+Xh<S62`2"\B7CVl<rE?DuAS66]FZC#rD+
%5a2stKrIE@1G2<FggCFr!dB0lQ*#!bauRWP0.T$64>C?JMjuY\&j]S]#h3QUJ-M0p3T+,'qhXZl7%+i9V;>JD-E1-3/8Cd8@h$po
%dI:%(>f"4LVMpi"+3P<LD">Sn2ok<,pq`I.K*9F6*#0dH^jK4W(aDM&H=][=lcC9S/2Ln8SMSm`MGUL5$TgA9lPcR(Q;"7PaH!R+
%'!pq=RYWpK<E+Y8kVD?()LN@+?CrA4MUtC-.#gP9._9X'"/>4HRM[bL3b"cp&:j(.+TP,2%#abA%+d?X`TE?S*L?"W+_D_LSASfP
%=D$V$,Rok$M>?jT_ka>J+:c9)-t@ECa<OW)TV&sa5p:CoK,2T=I6;WKSukM:n@"R()$JMZ*"=&>XZAQjDYu5U,?%]t+:#f($:OB%
%m"F*/Ug0(af-Z+"F9=f^PHn4g'$,*5_A,lM*GSPC3Gb86Z??aA\C))hqkA@-:gjVLZVeZAmo[NU,[_rd]mu@l7!Kku2.38d@&6T(
%&ju@T,&K>=kYS$0\manuL1?1((+OeO[j&]6)FRtT(9Aq;>Eu0Clo79B9caI!np&7GTX6>H;^,e8_)Pb($<O/t/#L*>=Cb/b7<Uui
%&d<W4"+rae5qh#R2&,&G:I/=\";H$Den&ruZPX-!C1@a,8i-9?+!IsD/pJ(J`A4kl+R,V7S],3eM@(C:&gh,,L11X4apOTSBQ^GC
%k>?nYk:tQhK]A=TN=#i<fklT*<uEMR%c_K&?6!&%o,jfc7^]3e(nn;sb8"aXQ!r4sHBOt/k12t;d:%htJ%"J#To3q>,Y%rV]eb8!
%]7cs,=h#4--`Ff`MF"MI>D!id)9?oh7%g5n#q=@U_m"9'QFRZ0EF/JZHjRUpNs(h;YMs*+`*>J?CcFn(A[sP;gfEXd9'W0k4SK,9
%`1W'U/OlV//J)$'L!@+o2FSPTJUs0tLgas8M>gn7`&^qqlBG6K<r3"-3RFP0CaWX>/m#?KU=^An?HEsMN=3`c.E1^?*_oWX:FT4!
%'-DirW6ST]DV''],^r"AMl(cOWh.c+kh<ZeZaJtp+qchff7RJ8g^kLG6(O@&&YX$77],3G>dCruV+X+iol/jc2BWq2Wq=4BPa\Wb
%O*Okq/9'AY^]INV1,$<0f>VPb3WUnmL!,Wu-`EDO[/t+X.4Or(,)D\I_QZhT'rj2,>S,QSAi\!kYiR1#*mI2/-%Vh%?^=epFsk^9
%.@@>``JgN:6P2pYKudD<!GmPMaC$OH8R7?,Y,"nB3T(7V8]fM4Q,kGZ2CVB*N;5rfljWCH,JUESh=a-^Xq8o[*lC*2#ZXN"gmD;$
%*O><J<>#^7$X-,0d?Hg*3r('5Kko[/;hD0NNU6]HMG<r.M96o'7\.MfP_cTdS%b$g[=L,TEM.\*$*'6QD#?;+8V/@HZqcjl"Sn!F
%D+j_`ZNPPZ\U/nD3(q[*Qi=D`PlS'DFP^#Li:-s@l<P]MP2!ViEJa`G1K/+hJYG2Gi$r0BYYV'N%@m"V9Nd+QP45g'.:UXTBgFOR
%3_N^(10/C[aFqK3U?4&!&k<s^PR%H3;5,KkNY5J,EKnPMM5Nbm=*mPm(BRA=coe^Zr$^GRh,BJUNH=-n'2M2WWk+%4:<IfR"Ata'
%/7>%`V=Kk<29eKY$%pAH`dSO*H8g]M6OSeTDN`q1`_E131]@r@"ATRg]YI%sV]e5:R;M.4&Qnj"KRSK5"DD,,_XYW9U=%?lB_RX"
%\]HoBS0V6p9$tdOP4>E?.-&AlTo[-cTo[-chE&%b.)6<;0PbBP8F=J5=J=;[@+`meM7HQ%fK(GMOZ5&!Nu[@rms7fd*QXn5EjI_s
%E7RG.b4/4>LMG^:_6K,JLaAp[GJd-Q7X-Au<F,9:Jig>3\Odq*0l@EML`@*I\IK)),]9-iei>>>9p2/E/S[r^DA#5u:EXG<?_$VA
%V+JHuNd_!n+aMPl%VU<K&\T7V;euQnQ(u9kJYPWQ2f,$X#=jX5P1DM\/?M2+b&F"tG;ro*LaS8h'nI'43RP>)`oi-9OMNo*=g"eN
%?juK<d=h7m>,5OVE+#mb0^**'0o&*.%!k`ATE6]DqY&b?7cuM<Z_T"?-V_r-A]^K]dlU3CS&)0'+t1N@,0ps(RmQ\>Z\5Bk7!u9%
%S0_!&b1],+8/<auQM?MuZ\2('PbKRk[ff[//*j5.XpBdm6PRoY%:;\`-D<\M+%V5i8'44eH@cL+n8;[9SL('tPpiE*HA-L/gXA?*
%QLHYg3(k7&ChJTo6Kg"p\]1T(WpKVG/#Oe.$0YES<PqtVqZ?&k-tc,-3G1o]\pFqU/4liM8kKsVK#L'#M>F1FJs7S2s#Rq^0(^hs
%A9REdLImNc"`-GMcNk`OP<9_&R$?`j]&>>W7:E_B[[+KP.!U=WVU],u]HIe*->N2%4XNpU4igl?c!0^]0K7R^GY"31&Yn`BpO,)Y
%R6T.Q':'2N95FEV**"oJeUq2h`+br3k;3bo(9`Qc\i9faQ69KI!PL_9D(m#.1K#@(XKkfC'Ah=rjYq2V?c-gAKQ37ObP.JS!VN,G
%F)d_+1algYYn>TEJBi?_67BP]&_=``Td3`k0uDhKd!*A(6sM6<$#_0?Zpus*GnA2,Q-+Bh&lL19$0He:AYJS2bFJ-o["1u:"5es!
%Gsu`>%!9XPY/.(.Ub/2V$?Kq*GSFJn)<\[mNDUrH<U_\m'3);tboNd%UE.lZ/=tD9cdS0W69ptt#MFLVT_6bK(OF6qB!>+tLZ**k
%.cU(iAom9Nq.1_+/=J=&+kDm.Tp]4GW(PdX=`[.AF+\%>GEf&Zi_e3:M5&_[o0k&C-kLcsV1$$STa4dMNBXC>Pj-?#XqV/\(V-Kt
%K#`8k2i5C\*dWG?1`=TC7"5cYE?$!NE\XH^<fXYH@KWm-BOGUojlXrq6oQ$Unu,6#fLh$4D0UA5$*"&p1.rqMD65pVJm#IEV1qND
%M8s3jjJ^0W(=Z31W)5*CJpR*g%[42$bQZ$r<6+R91^K;eP1*i,KqVWZ#9DNpL_;S-dAd)RRhM)(Tnp%:o/t`3YVP1i*OiP;dQX&)
%7O)/g#9n3>hM"sMc=off4B96+bFq/k5uQS'F=@o^.S*EDTo/[f'`gV6&:U`bAsa9SJn;"`3,$Z2MPY<aR_<Y]$sjlQk#RW;\QEpE
%JqCN@)U.$2_Ki(X_keK/VtAaZk@"hk]YSn(%!W;d1W>3>b37nUH*:EQVuk;]fnE&X1,];73Cej[L'L+C?5Ob@%c@K_k6b/KNcYZS
%G/2dK*Z'dg"3/k.@^k052*@IZN&N6^\I&k@.R>QA[4#dbQAMRT?(c:"?^aunkCl6$Zpg;g_KWQOB2SpU6paQeRh^jl.X9apC)d$f
%iM"hR.6\BB-G(`^O/raaH[0/E]N"#ZmPmSdI;,nYX30"5b0;R)TJraP;S`lDq%"8=ZIp^7-5@ppirQg,(T6DR%ZIroI)-n_$56Eo
%VQ^aC`E&-GA9JC*=(qp#K<$hi.,0_9:L,qa=r*BriMnP(l6&LWd41R9QOlkbq9'UM+qCoWT`#T+.1H?1A4Tb(@eDJ*U9lS/f-od?
%<J>=Zg=)FD@SR803%?p"",5ZJrZH56;KK6J`d$Z5nWJU_QmtFuPU?6ZcmR#:19;?^>T[:FJ;6;1QS'_:YdEI<%a(f?Tu+=RYQC5p
%!65jdA]*fs#Vnhc4n4=Yps,Ufb$E=7g<lXp<*]"5JpES1NZ)(Xe!ub(r6T,RpesJ9O#:\)*Ta"N]IW/6!qi;Y,*\TSW_l_=;eQLn
%g/(a!LhVIr!#(c/,o-dn$#sb);Wjj&L]U(CnrqjI!o.0!kq*'M^/?SEVRI8pen'R7**7,S9^%GkTG4335biMG"&s;X8_Fp]'d_U&
%C'Op2=)@35XVOaQ03$)Kbb*n8)F]Acm^o1"O"U7VN`ae9N;7p)$+i[/YU?[#q/L*r`d[GHekq;Sin(OXLm:SQ'5Cre4luEF9t6[Z
%FY%RLNdd+5?KKVR"'ZYoX6bN\jfL$(aK.a+U9[J!6j^JWJn=YS'm;iVAsURH4.qNqLK`?hi.sC"<suVaSeLf5.ZXp`qpA.hDPK$E
%k_NTi(/r_^%AnsJ"#QZp@3Y##Lg(@<?Wk*-Ci*20(+t093)J@c(lD)Cf.'U+Qa[Jkh9Hkf0!M6)A2^drAHNrifA3X;>DoEuQguZ?
%3bV*YCAoYESV7HBD*_2"9hW+AV'*V[86]UH"#>9[;bpm;*SO\h29-QXK#Td^9oqn-Wd:-<<P;,@.)i`f)0Jn3%]XiEAu`qNc7qG+
%`o':>g^&4AJkSQGgP^i`:lO0s#eIl'h`/a^j_uod?&O#E=_'n01).[gOebjK+KIfX2H8FZ&F-QX2(e@PF.s6";NRej<FCaDbp\ge
%JMNhMBVN)`N3QWTiu/%nc+C$8Z4I8r2G0pEWHrBB2V9SCVpT_j%fHf.@b3:`9[0Ou$?6d[YPoLiT(*1WG\+RIm=rq6LaKZdhO*l5
%U]kB,K5;OjRHd1+Rckg"_],#us17GrWHfSo$5kXZ$f_U&GS=ak.*b5'_qN%&3R1Tci_5C?B;S7XJ<E6=S/FtgKrg.&/hWnsTra#[
%Hk#7`;aI!M)RS;ARL)KV3:8VZH+DFG-_hR*6h+Rm[?d\ZT\;E@q&A[P0grU/6hX2V_)2gjB)NI=f[HV4SgiOUJFW'<:6XM?V[<<Z
%@YJjYla3Tj-OS:4pRiC1bN).gF0[Hlh&YEZA4VR&9jnUp'6U8EM&-$[FJ>HAmg3&ekS$BFe'nREGa,`n6"sj!M6`"oA3THi'.E@,
%q@>WB*@.Z)IC]*/!oc;N^aBJR>&O1)h=QH(Ufb?,'IHIX`Du+9("BiQdjXN`eo,"<SW94k;cH:03^q0AVZ$[q-k<1\qa:l)\3pe%
%4egkO:9G*iU,(YmREb.5<Li7"k(4JCW%;iE'D5TQ5#KWUi]%<j8pmB4KAtAp(0,fY7=9e=i[`LbM"cb;)(NCoK*JHR=M@R1F.RT5
%qLoWmVW0f#kR8dkBJ=]t*TnlLW8T3hGL(Qo&ll$rY^lJd,O1%H3k'fkU8TE0gNPHe:D@`_+J)s97.ETA*66b\MPnI!Km)nuc/!R+
%?(F!j2\iho@I7/uPR#l^_[ChN'#cG@NlUS$)bZj>-)s/m>bZbiHEOqW'J#QfQjnG;\A4/''*[cOU3tqDmiR?]'P:F$_pLR:":BON
%re'4t_uUOf_s.gd2-kr3;'JXQVjV^cAm?=Mcq_uIX2ZCoV^UClb0$S[P`1s_4U<sOl@6SslD><m6ns*p@#Iep^&\kO3hW='!jAR&
%TX[GLH]+R<HabCn"6<;s\j`m0$,VnE/IJ<3j5'<jK*&N\s.K+0@QOGd]8&3^HOuZ@?>?ZWNkC=d.>fEj\#S:6MT*$\#t;NI.pnOA
%/S(I+.I+DgFG`,>$CmiNo9?H-nY^sQ+)BBs]D%2?:cQL_Q6#E/("@S!723F:<+IoVMMccd?;]A\]N\?Y$h#dugPWL0"]X>R[n/$i
%F+FP_VPh)$\K%s8'ifUZnqt$'<d@-iQE7`n:5ZG\e;O4fP5bQ\W02=`>&!_+;3>>&pg2Ud>?"Gf(DUBQISh]`hCg@qmerk(`+k^*
%[!TQdTZZ*TUg694SNUY_?+ED+Zn&>YP'5q%<RS%KkG5eFbVOQ6Bs[JZZ1Ei>(J7B.YP3ohd!J4;pP5lQr\:T)SYL>V-Yfm$,K^&)
%F^0S@d/\$lg"d`bUTd(7W1(9fI(#e"NiT#45N`QZb_qWk>1&)fEsB"e'5M;?*`]nuJu[\=qa8on3.GUU9'eJ6Tr?'=2l(YHk"t35
%ML(*.FSc"goS::i6<sS2LLS`3OX8t7ErlO5;#`h$F;EL6MGbUCAY)=!r1Q+`jm'W'C,>Oi5ElFclc*XgW8b6_6N$q7W+RpR&%-*7
%&&kocWkT[:idj=YF0cM7Ru9KFkBY%ITP/5:^`Vi+kl%$S'*SP=pS]+iaQ2K&LjI@r%T1QBhB?W:;gCSJCFVl[VEukMH@MltS9N1k
%hXpeD6'\(k0rKU;SMY*7;`R5tHYS>7B2@n+oo.NiXZtbU<SO0eLjK&"mSCIo$;p`#:rf3b+Y%<+l0eAr4%'6PN_\2_Jc`N1e;USB
%G25<UXfiP7R2Y\DdCuF5PG61U#Sj?);'"3Q>A-Nn)s^-YED>1.rY3Dt1!1/!\9pR:=PKaSX<\gl-FL,kleD-lEO!6[T+,:YV[T>9
%XRFT01.kC<gJo^IF3d#k!Sc7[]KhZ8\+D,o5,p(O]u4/IBSK^Gjr,9)[CKH0Q?J6Ys7KiJpZU6.a#CasIf'!,k^TXGJ?>S1IR+n$
%`p38g?Ul3Q^0b1'gY7/Jk4b4shgW8UB/`l#nB&$3BB;@'9G10CTUHcXoaVd0(61JsFr'\_OW&G8+Q8nBri'nH[(G+5k=@7%C^=!C
%R(Ab*jYt:kY&.AWCoaFX>+D3P6@+JKN\!"@-(.I3]q@_kGW'%u3"VpNo?)_Fg-.?(#;\'qS1P*BF.LCI5Rtc>c*4pX%jDpk]@Eo"
%Mh;52]"8ul6\hOF[[j'Y'cC6u)R=u5Zr1nDZA=sNM&h&(-W@dI_Q?t(CG^`n^kKT;Ad(;IUn@uHc.`<hJjqJc!k"l:8'0bkm@+W`
%'?$:Q9K4gBpH,dK_&gZk8=fi*7&3g!79+Ue6YXukL44(NCI)JFgmS?$J;4/mi\cU8e[I3\pYufucpGA+g+!te-qo;I*Uf=+FnN%K
%AscJ&.?GelYD%Su>&7m5`)ODc'IshgAO06q>=!S;"V'&:UCeJ2VC922X^0s="OoW%`O8$A[4Q-[4"iFh8Dng@OC%Dg$;S$F8I:"n
%(5bJFZ1aFdr/fsMWsZAV6_6[Q<@%.6@T_6=B50LD/J$KOZ;;HYJ=;A'mYc>A\8oMFXU>i)a.lf\'^Fg-I<Z+OO_B"WV;@@=!bq1i
%$&M[aThm*J>SB#rZp_u[]f`7`H@`ju,Y=F-d_tV$f7D"g8?]Ip_.n<rf[Y,=Qs,e[8VF1SOp@DFs/m`#oUm>?iZf/-+qWZ]^5*7E
%K&epdU*AM#=I;[q1kI+_$)e0k5fKq0"4,J7+A*XC_EjS*73E-ii1:aA!qGJ?Pdt7JI/7NtP=M=(4;tV?TC5,Qi5ZId`$kSM.h`ak
%SS)Xb',l"S#@K29'$]fia@[r3OHiq`f,<1/+B#^Qca,n+4JWd!csYBe.ST.h;690:h91LYGV9q`MLm<E\5"lVQ[XUJ_c\%if&p1:
%R?p"CMITMe#XOTMZRHD-e3]4r:lgJA`$<n_0nlJ]p=qhLR;s?A?MALd]OhatpfKoBl0?VlR?Fb32MK*:3XlYK8[C/[Zmcmd0E?(p
%5\&0pRO(:Fc8.:jU#;QkVI[>H652A5oTR]^.Nl]FW.cu@N7VNi2C5;'LSP.aknP!k=E0C689ljjFinc#T.'IuYLG)jTQ%jj)X(,j
%D,5g/##k_e?Le[HG1<Fs=D1])35R16_D`P,6rKs&=/\o?QBb3-?b=-fWGj5dQ3j`ma`kEn,s<YIO[pp.8h:\Ak,7i07g4%h4/j'n
%i1JGs!jPS#'+:X[34Vl>W0<*(CNX*[eK'c$V\CSro8m9u6%]pHW3E@FiYgJ[7SAFS[?_+`3Vfg*Jb5TX^#C7Nm&Etf;P@&2i<Rbg
%KP:Qd'G=4UaFh@5dXgRr)2St4]M;O@=lZ15,M0GU*9n7`S445g?4GR^/C:FSM)8tn6ERk&,(rJ"LrCbOs--idj[,`.CUMT!Grntu
%75=oR<^]<S4<dg$0iGmO+hdAs"tT.>@9i'8ZaYl_abEuF,ouoFR.4`K<"Ztf9,c5O5=3Cf]kXWH<Uhk5Y!PTp*^EI4V%Rc2Ogs[H
%OXXRrkBN0>jNg[n28?`GOdp64+_;&mIjp269QstlB["d-+YaPY85jt>!hhY')kPIgOa5j'625=<U!c]45DXN^bi9sKASMh9EO!q6
%q6bL1)c'_e*%HXP6aZ.53-]sf_$(%Yn8VuFc*["pp]g_r+[<XOXUm&HRmULg);BB$9t(Gdc'tUY'^CulfX`c[\shVKU.fBaS&1L'
%`IP7QeY&opm/`[H,J[<ojJU?i\@bL'YB22EV6Z+cfS6P.^.5FSR<29dDK2E`.c>9s0rjdj!?W-]Ck/`$%d9(:'ds?WfX)`"g@@eU
%Hlf+UQ?YX'KK'p3;iZ_qGRP5>G\fOWASGmmVB#/j2DZdm`a_iJ[$Fc'2,n*U_!OV$!k"eG@o;$8bXeugg-TU\LDO)(3n>2f0Jal4
%NX,Age>g_,VhU<!>,.DXI<-SUd]F1YJJsC]3BSu2<H:>2R\G[l&nC_'UOqkP-gWi[(TX:8/)\N&=u*d>jCR27KN$`;":8]&60qa!
%hmK-K[c5@8hV%D:?X^9>r>*KRIp/\5ICVs"7i,]=U7.E.kK5Oo<KB2TcO8N*'SVk_9f*G*&3&`QZfGUU84tOoG`+53@kG+ko)`<a
%eS-GU)R\=N?#&tkP2.tq<2hA[cWc<^1s]mCFs#eb7!O*W,%\RjK9GSWENP*F8nY5b8o^"X1^mBNQ#$aQWj6p@A)fg?Y0du01T$b/
%^P]sPI>3@-i>!`7p"_3d>]D)q8Bi2IElEl#\3.1eajG;3ckWH"\%:Quj7ZQEHJJLW;iePeh*6&$M%F,!W.nBD)<(uZID_Hr8fgbh
%qO9eVKf>M3%;n-GW3.Oc(E0PG#qn7MB3!RSG-aP-Lu;e4?(gbf\]g203%2GtFD,p8ktjeOf8#+I?j<_im!cd-bq[?ZpR;ptpQKDG
%ARtkhSs)W4j*DBb58Hi=\DAbK4]rKaH4p=S=Y1Frp=I)CA$NfiB/+m!8YTM/RD.Bs,7(G1h-bl99iMi\MaCcfg6o!-=Ca*XZTiW:
%klr*`CSGcV9cL"Ff?Ec&ADfH^-lB,+_L#"4Wf'I#K80"B$Q:S%8+@Rf^"BfbPUN&+P\QU<crat>C-S5=M?L'e%I)CaTjZK!9eQ\8
%>#TZ3/h9*&#c%a%:dlLd$Em&DNh+uk]GS/J3A1O7]$YuM?V*l5$;uQIW0ROHb.N*<DXqZ^?49<%p;a<l[2^UEaaq4P'L@i.H8/76
%ol?_.1VF@AIAE2d&*[X@1g"@N$C=@4SsO#^Pp".G.l$OWPOEf18.Q'Ub<82.cI\IV&H$CBn:J9Ko_d\[9cjBnGs!LV.d]<@Q;NGP
%W4P$O"*Me#0Qe&nc5@(:_C/@q7\f[A;dJ%dX+;Zj(no\+]>[aDTM`n2l5%jRZQ?=`"uTj9%K7-l99NOIH?o+D?>Vu\jn>YBWc[5\
%g98"&#JK8++Oh)GWX.QEd?%]/&N\3[MoiVi;FdFhjA;uIjS]>bKc8t6ZI2QT8u'gFp^BNs`p:t9&i7Kg7qHY9,uAQF$6!SPrp*>R
%8Qi7#EfEJ3Ogkhm-9(3TDh?VA;53_17t^;-B5#XY^d"\W\abES'6;]?^?ZEn+p4"2L>!tA_0@OIW_O&S\rZ5E6[HQh)D8NiOf*kq
%>]P[X"j5!Gg01/hMHa%1:]B*8KJ\\iV#dBYI"[5[Pp[jm>-eg$nG848NJBWY4=]A0L8_>XlU:9N*D@Rjp08&;68T\^?.":P%gl2[
%;Tb7;$\c1f.8A&a6(RO@.Rkl^a##4s((,1nTp-!6(J=XJ;A!TA:+Wc8,;S@\+V?gIknSDU\DePEQ?A`H`g.?@;B[QnA3qX+^FLT!
%4X`k)p]q$bCJn=cPc>u++Sq0RN?F*F%L`X(6/bnsJ`:E'&hOaq-;+`#^Vgi9.n)FV3$Up\FqY7+.RbP@g7qKFD3bId8M=O-9#Elj
%<[kT+W9%3bF'.9/'iL0Q5]mgh:`>CNQ.Lp^pcP>ghP&oNHW1j6Fe[OC0>3\]^%>Vlr$A55Se,onBh0oU#T[.".WnHPH<QPtA`N3Y
%5Rr,II4+Gak(OL//n&2`>:"iPCF0!HIpXJGH-#Xt?7b'o%Fe#CXeF;V.P.Q:*Q4;51-YN,T7q&tFLK3BXRDcRjGb*6W4OO;Z>6ur
%4Wq25A<rL+j0#C&<@s.^K6#JBAPf>#>FrZLDR*P"FoBR<?3Yn3iBQO3mF%M['L<FJ$)^sJe5b>)APhEN&,KG=eja:fQ9ek=pgqg=
%%\AJ:k"rSK;Fb]V69@5W)8ZNf*4M87,C_>bdjiW73<=8oS:&!b>]T6Pf7Td3Uo:r`Q8t9T,;hb-UX@CgAP=%N<0*j"NI5b_dbO%6
%)_#ilqZ$RG@1KGfY3:DK6/!#tJJF!q))+7Z?B!c]osU=LAXgR::-3<r6K/V1E@j)eHV1QVPd_LEV%qs.E"-U$p-5d"DAa-!c_Tt<
%6B<=a(U#Vd#@*u1l@g=8K5_=AJ/u_*@jg@l5Af/h!phTFD%r27N(K'sd^Z:Y-Q\a3KmiA"V.3ue8:pPMOq-jWYb1JK%1p#R9YGc`
%dKu<'Oen.iaMC>,FG5M&YgmB2H96iM=/`Kge-\Nh#n\>sdn>9&m43qq9)SLgo@("dNQuK=>'%ohLIc!49DaUMTPiQ&&EP)uI-lt3
%T3)cCO2aJ<<Z3Slm8DDU6iI^mWI6RcTINM`"')1ScBf\YW%hh@Jd>A1D"V%_*OW.l"K5'0U__g^HK>lFU@q4!P)sa22&7Z7EE'!8
%[npT!/S^X/:/Sa.\,ijEjp_NGo[8fIE@,U)O)N1gHlstbE\EGobpWG7EtiYYLD89$lGbgm;;l)lirUr3K2M1@F"b_E>[^-ZB]Ym.
%#`',oJO*Td'k3L?qicPf?4+&$!Gu<m2t,n$F,X2K&<fuV/R(mgN<1O@:kYVE#M#9de^1sjW*+?_a^`!+Ws+8jT6"jHks6JAWBI3@
%6\/9#Z5O7#VM`(;Ot,EeX074EVWNS"(e8+(&1nepg5S]oQO(c@7D-G)Z"J<c[B@a>TW%.scN+E21Eg4c+CeCdcPn>^j%Ak85]Ip`
%S>+`.-l+-"P^1NRP3[bQX5lc)rEpTJ&OBO#'3>AI;b$kSF'4>fFl3ij&<7kE0QY5#'kV)*Xh39`0fW^j9"SZ(n$JKJ)0(<-&n!"l
%8'G+o6A-I)W$I_MC:"HW8*eNqe[N%(T:e/DC:ma8]?lXHBa(N%p*bZX_pIn$TS=o]ltW@K'X"eHNQBf;3REu*oq7,8QF]Z$aUTnO
%eNSu&V[>9kEdLt<(bR'-U`UY1i'N80(e"RP%M%p#S4/^\[Y"K^<ubkS0R/Lj/(G\9PCB(UF'c[SA]p%4SktM-2%P8]TH#jDqK#mb
%elU4lOmsu2PsW3Gl@E1PfQZ@!2]uFQ6/Ca[+mS4S3tZN.d5]4-Z0"TZJ=HtS9/:<jWF^c?C0D?_CRFVAJ?Tf4WuXWb65>k0[E\IQ
%e1@k#8nq$u;8J][)Qlr2X]j7<Om'^i^Oi7`cskc[.1K:nN:5\5"%FH5_J[RHXVokR@o1^/=uh:;W+2XDKu\N!ZI6WlOQ(GEC1d4=
%d*HhX6loX1_74Gp'Qe's[/rLtj]qR;COhOiQ3^%%9*((D9Wepk3=i.#H-j["Dr1kp+,1D:Z5_7`A(2?c4[l)!":iI<lQ/o>k<[(/
%$FI.&k2!se$qb=DeEc+B8^U4_?91U.@9Ff?C#]@t&^cLecA!hDAB#//`er;/U+#.i754sL0)+`p;,Ah*"dEdmQWdjQ!U.M,.-U+s
%3Yq?ppM8eDjMM\.Q=4#RP]<j\X:W^h*`T6,5t<E^^*Dg^8dsFT25;1Kq]eU#5Z3:7U:Nf2B]^=)\9^iD>e,e5&iu!l)S1nJWa%ck
%#7n@r"HK7IoR,A9e'N*!ds2qrAYqR[H(6%V^J^XJJ[FT25ik!=bS.s<TZCXK12*B;Cn@CaKoBSWkW'8T]K]pVp7o8/OOUogVEIG*
%9M^P#k6O'U0kWq3k6QP+"KrtopOPS\q`rNDF6((gY+H\\<#g.CcnAbo#G*.XpFo!4@G@T#>L/EZJffu)#-B`[;k>3Ons9n^i:4pR
%k6SCB;tJ#+%,!t,+^6em*;Qdrlc44D+LU\[eLRh"jP$g^i&jM3W438+L&s5uhP,SaaF@K8"%jQ&CfpuH90Yb`3B]l`Y__J`o80u+
%'K:;.;9bkRS:TionZoRh'uS4&Pe;gA6&UYGNW^'bO%?'5m.+l:Of"HHm7uS%7l#Sa\HH@s9"dIM3=;TN5S4Xl?L_:'L?=1Xc,.Y[
%G`Dn@muR+6&AQ^9<:Z_J.j!\1')#@!We<aA^(q3HRMQHB*0C\c"JX;>h4gJc*+'H;hZu>7JpQ<M:0l>A[5/-"3'""S#Hjga_0[<%
%9VFpq2&Iji&_O/DqS.J5%at=Z!L;h=0QI-&p(^tjTcHWY@dQ1=R7Z^^p3mD[)77i[%sa1G[+]Yee#n>s]^$u,&SOP3N>erg)T/sr
%i&VM#4+F%6"mMjaW*3qiU8U5^#2`"(:i$7apsD&L=DJ.VhiWGH0X_4?W7;r_hb;=j)ED@<k7QPp9f$F?Mrc"simMhNG5\)JE5GbB
%K&rqDPso9%H%[.5U+"3>o8$nA.d'P\4X!Ct./>-P5m\;dNs#o^8,iDFrUJ\la:9V;*m*V5kE4!;4-,%7hXG_ckWI;S%%Khq:%N.)
%WT?4&nuUutiQuf0d*Qpr;!%Gnn[JoI=pcrP63V-C.aJ]Y[S=38pDh^4)5pem5k1Jc)P//Y2a'[@Inu!"O/NfD9rMW%W,q:G\@h,t
%L+cB=l5nKGY#%VQgP+"!A;*)?NLW+X;"9r4nhhhE*=$oJO5k.Eo[H"%Au7gD>11.+T+"([YHu<XloN1I@,h'GeeR24c@_#9]\gfT
%9)M.rio1\L''igkMIqFsa9h"m3\9$(Uh&$)cqCB`FW;`g+5nu/G]J(+OiohG*.rU9Ocojc:L5rmIn0m-EZ030<;rRL:jq.QN5rS0
%a+<+;j+]+@k$&?G^/^gPQ*g"Yfj'5.QVgsQp6^.ab!:u2LWhr?\'+P8$A/ci%.$n-Z$@0T^>4glpZISaMu,r#(QHiE0CdCrBIIRK
%4;1ChehFB:Z9;AU>%Qgq=5+JV893J3HN=)`>k[AMWDolq*J9(K"DAo<"9ElW(='c'i3@pBiP9pb5"[(B]6e2B_<c%59m;Mi,YF,l
%83'2^&']&K=KhF\cf4lNOdftfPdOY1kM^((ETFrKT9-ptoVnLh=$"%Wd'C7B&V&1.#,H5e,Btn=n/+m4]c`0K<e^^('e8nKmB$%]
%k+1'XCQ9U;\/&?]Hbfj?T/?EAcmrFIXOct7GLRoun/[K''?(r9(V\h3>;S*/<31YTU<UES4$a\4gqXM(:Gdf48+i(G`MOVDPo)OX
%m%Y0grN;FX\jiP^RNdZ'r$%#(Bflg"Q2qt:#LAUGp[)XiCRI$2"IbW$n$/+J<(;u6p=JrQ*V&^!P?f,bkKQXG3>GV4#A?=OU">7?
%"4V6ToOujKm#-U;fp+hM$mh0W#qhu393Z9d'XWfm<En`qa$/1:PM.-iLn_X#i.>--j,K31in=&B;""dEUE(&g4I.6$k".Z#T)2Cn
%MPmU7pI2,cl@ZVA3qBjtR7M7K&FU!Z0`n<>[@GE[K>s(Z@=>AgIf7?=#h91AFJZJ<-p0W_D?sZ;Pl+*$#,^`]+mFq:T`g4HcIKsX
%U9Yc*F_Nb:'1F)*/grT_lo;M8>)6)qK.`o5LmW0OFh!_L'G)Z^:paK+&V<]Fb8BN$RcN(Zc7W!>V?i@)TZ]\c^+T.Maf)oG:*Mo8
%</cGFVa9]1MpuEbCr$`[kXOQg@[rO^k8^ab'?.gl[Had"_$CRaUM8X,766o\6&d(,6O`Kg[#B>?r.JqlI\Ko:hEsY%%FteNC#JHe
%kdN)bYDTd)JZ!M+W80BF42R;e>#EmK)"KE#OX:Ef91X+_;$-L+bmd&LBiS3hA<WD&P_#-X7u[e*WQ2:.U,s.HQ.3R*RSOmn80XMG
%+Z+7T6"`[WMl1l-<rP/.1_/g+:`4O_'=8qgd?rsF>'I+eQ)">1q%8UrDF,7o/e:tZ\uQ$uN3l#+noI:ZE/!BcW)hZAGBhkFj9aXu
%4ONJ^%:e_nDf8('8P*b1`7"abGR_MJ?!fBk7#X<Q]i@_1!@kU2iK9bZc,`\&Nr87;Im*G^N=a#QJ#C;Q4_MjHFY(`'R_a'(?Lk`o
%>[Jpop&mcu$C'(/W6\af`+Cu#6ORE.8LrQ?!muUq<Lk'-osTiPR*c1,TdE)t9oR@M;Br%EP(jan"$OBd!`;P]Jt!P^UN?"#$J08M
%NM\[n*".EgV?MRYD!Q>;iTmPjf4_Mu"6-"u1_"l+5'agRS)QR&YsN^!@td_qrTg-_CP3iPqE$ih@YGp3;[,(^&6-`QqPoK$`Wkk>
%Vs+jkW/4>K';Ia:]oe]A/e+oo*/M%Ej1XS9Wp+BDa^7Q3[o7^'^/%agD!6j:[*)ijS(SD.q\!SB,B.OtTQ5Hr]P,Y_c^XFcTk[s1
%/68(Qe'at!FO"N1TC\&hSFnEg/K,6^((CK53')Oia)8%4?^UrbCiD5UL-U/NHQt92@lD9"iRnd#"rp2?i'F;^l*F2*KZ'%!TZ*8d
%/H(MCr!#)FCDkYW#aIQ!_m(Y<#B3)=f!j^%d"e!$nbG(j#7Vt/Ku/W6TG80/OI\?+%M6n6QG/ON!76"slbJVC3A<-I%L`c\6.7d@
%7j5Wu8lAj=IKPj["n?fOJTi^A%9s:_DrBn)aRkr!#-B:@0'kM.?*:g;1&DCgbq=US?o6/5'OARi,Wl;5Psl)qGn(8*Sc_?dkJ4hR
%/cfmDTIEV/*T/sSH/(F`5(Z7R(nFB`pV6nUmfE*:]Ecq.nfISX__'f+&/>(O1e*)p#E6[.Z/L,8^-:pKBPW+0=@lbqp5Xk0!*Adr
%2n]VCn($Em44,''GO(Rn#Dd]Y(R,_r7Lk)lFCLAe,SFg!EZQ&7jPLnaBM+G8#;5[,UU,<sL+.[a1$J1)LL82Ji$(Bu<%LW0-TM\k
%nG5\/7@qkca:h:n"%S"CHQrshYWJ;.4jZB-&Ps^m,.fpsr&!gT\f(:"-LZM\U^1ah+WgJA4oPr[6,RkDNpJk^d%(6Bn8_tdN6'"X
%R$J^[D5Nn1#Il:Oq,kOUcrSg>QIa,uJ1-8/U`$uj*D67WdH!<DY<2DI,7WBE6b'WSHhJG(B<E,;KB,lKGn+(6+j<>,O-KL;g]fD"
%F%-rcCrgAlUu5T*Y<c<!6eQ5dhf]fe2aI_q"*5!_R]dTG3#kt>)ISB^#ar\[+?)YO^uR6>mtM%Z!J5R3mhGQ-%Kg#a:?>tD(uM5?
%'+cT@:f\.$5%2,6S(8hmXbu%q]IJNTa4HmNHQrrQOpE?[0flp;ND)Ks0X3+qFnhe\"hZ<%*E+k@[*NNNQW=7rbcAT`4=r&CqQ]Sm
%iDFeUNI%6]CV>]f[<^,I=n%gUZCpX=G=)Pb!(/m.G8gBa0**Y_i9rB@N9&HX#q-KU-n0sLT<[6Bb\NQ!Q:8#E?5DKEE&;qF^*A>m
%^ih>R&^V:`=K%4p\RgMN^_@GuS(GcQ;SSHCJCb+&@h+9<^aD1bbNgDVVKENiSX,\kqcJc-n2,)@9nP]Z)LEDef4,Tk3oNZglQeRp
%#.bbhJ"Mg),nKYBZ=>"IOjr+BY51?0UIY`lQYNg)%g!&nUIF1SO3q$f+d&Q!\aN)\K2>=/DC-XGT%oI4o\i=;;1tehMr[SDai!$7
%8.`n\cfQ@5:PePo5pWWR518@mdN"^3V--T@!U;)]B^N.5M[$*>c<R718@Q6IbmfF^ktX7nQP$#IdH`1_[Eb/6M:Shj4*n8"Lrk5j
%%!6EdAN!14"Y)`=7O=e^`/`>S0U3f>6'm^tE6<%]Fd-C'*Aj"f0\]uGb&Vd+_j>Ql,^c`*30;F$R^Krlk[$a$M?#/)S`5("/@RBf
%7k-+O@R7LrWKrf=.$j"+6TtM',%pJ*g/-d([\n0LXrs'I7>ek_GIm&I2@/2/"GJ0kM@[SUf14DW3Y'2TF*AUM97Zp"\t5@T%=pEq
%7O&Vsdhig2O7h"),UE'21i3_*D_E>rTV4_+f*Am5h)ts+],eW%OQ:]Jpm'N4$2l$@aR%JHd@4<(%B>"7OB&C"Z"_9<ma-YuSi.S/
%b[i!]dS4QN-@<UMki*CBX<a!b@mY5r[XRZB5nk1S2`(o*(8@7]An895/F0Q!)\,`d0a'm(,k\[A^5HSp^Ji!n02>oWO4HgM#+5p3
%=\W]/Ls7bUMkQY@T?t_0""n,9p(KeTCMEuUhKDQ"lla_pm)SrjD7';NTX5@=@urn-3b>VcN*]"p^:fNj1f8A/O&]VJ&2]*ON1"/5
%Pl$nGlQETDC*6pn\ieL%CJX@JPAXWp9Tbq\HGK-S=mbal:'V:/J8lrn-ZgU'7'AC>p7\tYL18]A@=>3dK$q.69&gtc*(e+#5>`@/
%YHt\iNVeBH`dOS&gd_SYADPHf(ntHRe);[&<S3i8A`GJQkCJL&dkJ3NKe#Z#jV(@p2IQ,9c7[jPQ^(`+2"JTT^EQMA)#'H8RZ;6&
%NA;14\4agdp/.0]oK%?6/98m@87q)67p3MjAHnJ)Q]HCbY#/EETST/GG.eF>#l8H*n3R<-#;tu>3E']F$TNen_e$.s0NkYJ@dq?(
%6SAn^%^[g&=>tI:eoltg6bORrm[ArEdt28%>[O/TAlsY`n4XC9RS\E.>+bTQY\^dGN,lA]Y]KMUP#%<0'CSHfqMLOZj2+s2n=3AO
%,n8*4BI3q67eTtsB:0?V-SiMbp3f;2c$27QCptf4Lbj6]lY:_8F?qQ.AVof!F34#`69;ML$Y8f=,4BM'1W$D4Ch5kG=pBjV)PV-q
%`iZpL$djiJR(pmWZdsEdfljIu.BN2YSAOCBe7hMg5q#tEgZbYN;C2Jq`j3>K(1YZe8H.iGoR67"gl80jf]RqAI(Kl1/[a$F"B;`d
%Qqq(D65E&RK&E8jbD+`YolWjScjBq+<i=iLGQi*8WlK8H5+YZ>D*V+,HB(*G@73qdEBasl/U.f=f<(6.,)Ej$kVR=Y$7O\E$VQ:j
%O)#b5B43NaS@R@@f.a>%fV1D13uME?@B3R[_(G=kP\+.Cg@JJQD`H?hPD&2:8ACHrd,RPt==;E4ST[;m@m.pd!'9heB"Pil=9,"B
%SG3bT%$7&6Z0Q,'_\q6D^%7VH@DF#-DV"T8G^@j57YZJe2!0?a_gk_2>HQR2k\-]4:Y5glTs+pSBsJ,"P$MHi::n=<Sp')/^td[u
%LY6!i5[krip7*a3:#i];$O=)qCL\,t:hJ[@Aeo84nRu]kTd`^1iT_^nDcle5%uDD#2Xktg3-7)7@2qlrgsJO-*=Y/V,7G#i/e>Ab
%R5A1+V_>G(*f`253['oE[Yb;[9Z)!NmrFKs)Qq%MHg@)S,87nNj'U1&-G,fm:AYGk,htWH*#u^>IqK7O.p$G5cQ!p:[][:Uj2M,1
%e7E.2\sc1"CZYC`<F:W<].Aen4.9i-'*<N^beiI\#<,g6((SN-,0D4:E6SHhQ]5*,P(IL0A+OY5.'`::TX/V8>X^6)@,Y;L\FrV5
%0j=e9LiQut/Vdr<^XL$^ZLG<(j)CGh\>-m8gTk68fFfIl%hH5a$V(V`XPth\E258Q>@e_5$.5'F&fl$Ad4n-)%<jXbZo>kKPU>p>
%Qi*<"fgTYo'LC.aFEsh*0?(h7jQDJZn3Op\VF_Pe_W">S7bihI'(0G[kg9D1T?#a72!0@H"k2tRBE<*nU2(h@J_Z4Z!1A<U7\.$G
%B8D??:3XI:J(sR:k25@CBTr8$hR+0^hmh9!QA,,np)r>=2=k`W]QJ%^cE#>k&Ro<b`Vn_`q6ss*Jo7*._lR]T*<F0`*(p,j53Vn`
%Bl!E2M2UnB=<Erf2=k`V'@Xr1dnC4A6.ntNkVqq$`6pBlp<0?B=dKGbH,07-<jC*?I,\bC@EtpT`4kW4qh&m;IJ.M@GeO?.-0hVd
%f_!J*QmL7Z8**.PPD5'B-ZB]:bpp-PNJP&c"jp4"9oKB)iZ0+_5)ld$p$<=0e'UH\<EIeSo5:):E,8=W)[EQX.kT0:q5""EG/lss
%<eF5MIIY03VSs:*W@(_'11tK#pZ(dnEGeQPiMb).`4::W#*nmRbE.XF6!XWkCNHIoZZAiHZ7rO3K5tUH;Jok*6+Pek"T;fA&X5@@
%kY0^4&4+gX!6qMIj*'/nPadYC:i9Ca;*6?W\(P#`gs\7?;=6u$_3E^%qgj3Eb"]kuK=qoTG%2)*P)Vas/JGnJm0"?^G&%Y*gD;j\
%G?BK*g[RQWd;BC!io,(-XFZRP1'YS&h&,Y.KJ?l;*QEW[&B97.3/dkgH5M;3nT^I85K],IooVAH_.tQHE.T;S`8G!M#ejnY_d3)4
%'\;b_SYZu9f'q,D"uY39k/Te,mQYt1d.!1uT+5MDb5^Asn^$SEhu*8qlau'2J,&kU!T*bIh=pC<p>OiBIsD"PX$;"3o=JAe5J?sa
%a.Ig+pWNI6aIbk]msk>uV[r6gIf@qprrn!-q%qo#q;s>[qW\Uk"5B1]_>~>
%AI9_PrivateDataEnd
